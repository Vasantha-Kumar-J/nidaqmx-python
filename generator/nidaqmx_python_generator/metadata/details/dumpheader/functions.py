functions = {
    'DAQmxAOSeriesCalAdjust': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'referenceVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAddCDAQSyncConnection': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'portList',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAddGlobalChansToTask': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAddNetworkDevice': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'IPAddress',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attemptReservation',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'deviceNameOut',
                'type': 'char[]'
            },
            {
                'direction': 'in',
                'name': 'deviceNameOutBufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1102Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1104Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1112Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1122Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1124Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1125Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1126Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refFreq',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1141Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1142Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1143Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust11601Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust11603Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust11605Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust11613Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust11614Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust11634Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust11637Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'actualReading',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'asFoundGainError',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'asFoundOffsetError',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1502Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1503Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1503CurrentCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'measCurrent',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust15100Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust15110Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust15200Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'referenceValue',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'powerCalibrationType',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1520Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1521Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust153xCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust1540Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measOutput',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'inputCalSource',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4204Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'lowPassFreq',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'trackHoldEnabled',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'inputVal',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4220Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'inputVal',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4224Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'inputVal',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4225Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'inputVal',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4300Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4302Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4303Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4304Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4305Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4309Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4310Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4322Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'refVal',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4339Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust433xCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'refVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'refExcitation',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'shuntLocation',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4353Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'refVal',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4357Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'refVals',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numRefVals',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4463Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'referenceVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust4610Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'offset',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9201Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9202Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9203GainCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9203OffsetCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9205Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9206Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9207GainCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9207OffsetCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9208GainCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9208OffsetCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9209GainCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9209OffsetCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9210Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9211Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9212Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9213Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9214Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9215Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9216Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9217Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9218Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9219Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9220Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9221Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9222Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9223Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9224Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9225Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9226Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9227Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9228Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9229Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9230Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9231Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9232Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9234GainCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9234OffsetCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9238Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9239Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9242Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9244Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9246Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9247Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9250Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9251Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9252Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9253Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9260Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9262Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9263Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9264Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9265Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9266Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9269Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9628AICal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9628AOCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9629AICal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9629AOCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9638AICal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9638AOCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjust9775Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'coupling',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjustDSAAICal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'referenceVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjustDSAAICalEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'referenceVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'inputsShorted',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjustDSAAICalWithGainAndCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'coupling',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'referenceVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjustDSAAOCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'requestedLowVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'actualLowVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'requestedHighVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'actualHighVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'gainSetting',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjustDSAAOTimebaseCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'measuredFrequency',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'calComplete',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjustDSATimebaseCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'referenceFrequency',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAdjustTIOTimebaseCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'referenceFrequency',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAreConfiguredCDAQSyncPortsDisconnected': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'chassisDevicesPorts',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'disconnectedPortsExist',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxAutoConfigureCDAQSyncConnections': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'chassisDevicesPorts',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCSeriesSetCalTemp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'temperature',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCalculateReversePolyCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'forwardCoeffs',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numForwardCoeffsIn',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'minValX',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxValX',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'numPointsToCompute',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'reversePolyOrder',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reverseCoeffs',
                'type': 'float64[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgAnlgEdgeRefTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerSource',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerSlope',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'triggerLevel',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'pretriggerSamples',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgAnlgEdgeStartTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerSource',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerSlope',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'triggerLevel',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgAnlgMultiEdgeRefTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerSources',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerSlopeArray',
                'type': 'const int32[]'
            },
            {
                'direction': 'in',
                'name': 'triggerLevelArray',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'pretriggerSamples',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'arraySize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgAnlgMultiEdgeStartTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerSources',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerSlopeArray',
                'type': 'const int32[]'
            },
            {
                'direction': 'in',
                'name': 'triggerLevelArray',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'arraySize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgAnlgWindowRefTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerSource',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerWhen',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'windowTop',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'windowBottom',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'pretriggerSamples',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgAnlgWindowStartTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerSource',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerWhen',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'windowTop',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'windowBottom',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgBurstHandshakingTimingExportClock': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'sampleMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sampsPerChan',
                'type': 'uInt64'
            },
            {
                'direction': 'in',
                'name': 'sampleClkRate',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'sampleClkOutpTerm',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'sampleClkPulsePolarity',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'pauseWhen',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'readyEventActiveLevel',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgBurstHandshakingTimingImportClock': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'sampleMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sampsPerChan',
                'type': 'uInt64'
            },
            {
                'direction': 'in',
                'name': 'sampleClkRate',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'sampleClkSrc',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'sampleClkActiveEdge',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'pauseWhen',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'readyEventActiveLevel',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgChangeDetectionTiming': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'risingEdgeChan',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'fallingEdgeChan',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'sampleMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sampsPerChan',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgDigEdgeAdvTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerSource',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerEdge',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgDigEdgeRefTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerSource',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerEdge',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'pretriggerSamples',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgDigEdgeStartTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerSource',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerEdge',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgDigPatternRefTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerSource',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerPattern',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerWhen',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'pretriggerSamples',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgDigPatternStartTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerSource',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerPattern',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'triggerWhen',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgHandshakingTiming': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'sampleMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sampsPerChan',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgImplicitTiming': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'sampleMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sampsPerChan',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgInputBuffer': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgOutputBuffer': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgPipelinedSampClkTiming': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'source',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rate',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'activeEdge',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sampleMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sampsPerChan',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgSampClkTiming': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'source',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rate',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'activeEdge',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sampleMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sampsPerChan',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgTimeStartTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'when',
                'type': 'CVIAbsoluteTime'
            },
            {
                'direction': 'in',
                'name': 'timescale',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgWatchdogAOExpirStates': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'expirStateArray',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'outputTypeArray',
                'type': 'const int32[]'
            },
            {
                'direction': 'in',
                'name': 'arraySize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgWatchdogCOExpirStates': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'expirStateArray',
                'type': 'const int32[]'
            },
            {
                'direction': 'in',
                'name': 'arraySize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCfgWatchdogDOExpirStates': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'expirStateArray',
                'type': 'const int32[]'
            },
            {
                'direction': 'in',
                'name': 'arraySize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxChangeExtCalPassword': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'password',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'newPassword',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxClearTEDS': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxClearTask': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCloseExtCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'action',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxConfigureLogging': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'filePath',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'loggingMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'groupName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'operation',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxConfigureTEDS': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'filePath',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxConnectSCExpressCalAccChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'connection',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxConnectTerms': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'sourceTerminal',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'destinationTerminal',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'signalModifiers',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxControlWatchdogTask': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'action',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIAccel4WireDCVoltageChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sensitivity',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'sensitivityUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'useExcitForScaling',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIAccelChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sensitivity',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'sensitivityUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIAccelChargeChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sensitivity',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'sensitivityUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIBridgeChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalBridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIChargeChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAICurrentChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorLoc',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'extShuntResistorVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAICurrentRMSChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorLoc',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'extShuntResistorVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIDeviceTempChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIForceBridgePolynomialChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalBridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'forwardCoeffs',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numForwardCoeffs',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'reverseCoeffs',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numReverseCoeffs',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'electricalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'physicalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIForceBridgeTableChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalBridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'electricalVals',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numElectricalVals',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'electricalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'physicalVals',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numPhysicalVals',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'physicalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIForceBridgeTwoPointLinChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalBridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'firstElectricalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'secondElectricalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'electricalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'firstPhysicalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'secondPhysicalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'physicalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIForceIEPEChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sensitivity',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'sensitivityUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIFreqVoltageChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'thresholdLevel',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'hysteresis',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIMicrophoneChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'micSensitivity',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxSndPressLevel',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIPosEddyCurrProxProbeChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sensitivity',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'sensitivityUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIPosLVDTChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sensitivity',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'sensitivityUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitFreq',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'ACExcitWireMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIPosRVDTChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sensitivity',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'sensitivityUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitFreq',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'ACExcitWireMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIPowerChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'voltageSetpoint',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'currentSetpoint',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'outputEnable',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIPressureBridgePolynomialChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalBridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'forwardCoeffs',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numForwardCoeffs',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'reverseCoeffs',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numReverseCoeffs',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'electricalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'physicalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIPressureBridgeTableChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalBridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'electricalVals',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numElectricalVals',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'electricalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'physicalVals',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numPhysicalVals',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'physicalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIPressureBridgeTwoPointLinChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalBridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'firstElectricalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'secondElectricalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'electricalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'firstPhysicalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'secondPhysicalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'physicalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIRTDChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'rtdType',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'resistanceConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'r0',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIResistanceChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'resistanceConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIRosetteStrainGageChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rosetteType',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'gageOrientation',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rosetteMeasTypes',
                'type': 'const int32[]'
            },
            {
                'direction': 'in',
                'name': 'numRosetteMeasTypes',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'strainConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'gageFactor',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalGageResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'poissonRatio',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'leadWireResistance',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIStrainGageChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'strainConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'gageFactor',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'initialBridgeVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalGageResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'poissonRatio',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'leadWireResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAITempBuiltInSensorChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIThrmcplChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'thermocoupleType',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'cjcSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'cjcVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'cjcChannel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIThrmstrChanIex': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'resistanceConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'a',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'b',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'c',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIThrmstrChanVex': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'resistanceConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'a',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'b',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'c',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'r1',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAITorqueBridgePolynomialChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalBridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'forwardCoeffs',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numForwardCoeffs',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'reverseCoeffs',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numReverseCoeffs',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'electricalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'physicalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAITorqueBridgeTableChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalBridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'electricalVals',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numElectricalVals',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'electricalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'physicalVals',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numPhysicalVals',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'physicalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAITorqueBridgeTwoPointLinChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'nominalBridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'firstElectricalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'secondElectricalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'electricalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'firstPhysicalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'secondPhysicalVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'physicalUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIVelocityIEPEChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'sensitivity',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'sensitivityUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIVoltageChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIVoltageChanWithExcit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'useExcitForScaling',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAIVoltageRMSChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAOCurrentChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAOFuncGenChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'type',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'freq',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'amplitude',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'offset',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateAOVoltageChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCIAngEncoderChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'decodingType',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'ZidxEnable',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'ZidxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'ZidxPhase',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'pulsesPerRev',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'initialAngle',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCIAngVelocityChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'decodingType',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'pulsesPerRev',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCICountEdgesChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'edge',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'initialCount',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'countDirection',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCIDutyCycleChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minFreq',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxFreq',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'edge',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCIFreqChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'edge',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'measMethod',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'measTime',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'divisor',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCIGPSTimestampChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'syncMethod',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCILinEncoderChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'decodingType',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'ZidxEnable',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'ZidxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'ZidxPhase',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'distPerPulse',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'initialPos',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCILinVelocityChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'decodingType',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'distPerPulse',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCIPeriodChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'edge',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'measMethod',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'measTime',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'divisor',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCIPulseChanFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCIPulseChanTicks': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'sourceTerminal',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCIPulseChanTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCIPulseWidthChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'startingEdge',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCISemiPeriodChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCITwoEdgeSepChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'firstEdge',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'secondEdge',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCOPulseChanFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'idleState',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'initialDelay',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'freq',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dutyCycle',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCOPulseChanTicks': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'sourceTerminal',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'idleState',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'initialDelay',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'lowTicks',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'highTicks',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateCOPulseChanTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'counter',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'idleState',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'initialDelay',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'lowTime',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'highTime',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateDIChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToLines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'lineGrouping',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateDOChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToLines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'lineGrouping',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateLinScale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'name',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'slope',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'yIntercept',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'preScaledUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'scaledUnits',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateMapScale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'name',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'prescaledMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'prescaledMax',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'scaledMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'scaledMax',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'preScaledUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'scaledUnits',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreatePolynomialScale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'name',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'forwardCoeffs',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numForwardCoeffsIn',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'reverseCoeffs',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numReverseCoeffsIn',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'preScaledUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'scaledUnits',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIAccelChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIBridgeChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAICurrentChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorLoc',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'extShuntResistorVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIForceBridgeChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIForceIEPEChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIMicrophoneChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'maxSndPressLevel',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIPosLVDTChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitFreq',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'ACExcitWireMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIPosRVDTChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitFreq',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'ACExcitWireMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIPressureBridgeChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIRTDChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'resistanceConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIResistanceChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'resistanceConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIStrainGageChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'initialBridgeVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'leadWireResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIThrmcplChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'cjcSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'cjcVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'cjcChannel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIThrmstrChanIex': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'resistanceConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'currentExcitVal',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIThrmstrChanVex': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'resistanceConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'r1',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAITorqueBridgeChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIVoltageChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTEDSAIVoltageChanWithExcit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'nameToAssignToChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'minVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'maxVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'units',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitVal',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'customScaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTableScale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'name',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'prescaledVals',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numPrescaledValsIn',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'scaledVals',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'numScaledValsIn',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'preScaledUnits',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'scaledUnits',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateTask': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateWatchdogTimerTask': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'taskName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'expState',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxCreateWatchdogTimerTaskEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'taskName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxDSASetCalTemp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'temperature',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxDeleteNetworkDevice': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxDeleteSavedGlobalChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxDeleteSavedScale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxDeleteSavedTask': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxDeviceSupportsCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'calSupported',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxDisableAdvTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxDisableRefTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxDisableStartTrig': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxDisconnectSCExpressCalAccChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxDisconnectTerms': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'sourceTerminal',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'destinationTerminal',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxESeriesCalAdjust': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'referenceVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxExportSignal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'signalID',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'outputTerminal',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxFieldDAQSetCalTemp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'temperature',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet11601CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet11603CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet11605CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet11613CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet11614CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet11634CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet15110CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet15200CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'powerCalibrationType',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet4302CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet4303CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet4304CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet4305CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet4322CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'outputType',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet4339CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet4463AdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9201CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9202CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9203CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9207CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9208CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9209CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9212CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9213CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9214CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9215CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9216CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9217CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9218CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9219CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9220CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9221CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9222CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9223CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9224CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9225CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9226CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9227CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9228CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9229CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9230CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9231CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9232CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9234CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9238CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9239CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9242CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9244CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9246CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9247CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9250CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9251CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9252CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9253CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9260CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9262CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9263CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9264CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9265CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9266CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9269CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9628AICalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9628AOCalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9629AICalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9629AOCalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9638AICalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9638AOCalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGet9775CalAdjustPoints': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'coupling',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'adjustmentPoints',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIACExcitFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIACExcitSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIACExcitWireMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIADCCustomTimingMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIADCTimingMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIAccel4WireDCVoltageSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIAccel4WireDCVoltageSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIAccelChargeSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIAccelChargeSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIAccelSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIAccelSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIAccelUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIAcceldBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIAtten': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIAutoZeroMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIAveragingWinSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeBalanceCoarsePot': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeBalanceFinePot': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeElectricalUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeInitialRatio': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeInitialVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeNomResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgePhysicalUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgePolyForwardCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgePolyReverseCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeScaleType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeShuntCalEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeShuntCalGainAdjust': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeShuntCalSelect': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeShuntCalShuntCalAActualResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeShuntCalShuntCalAResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeShuntCalShuntCalASrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeShuntCalShuntCalBActualResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeShuntCalShuntCalBResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeTableElectricalVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeTablePhysicalVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeTwoPointLinFirstElectricalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeTwoPointLinFirstPhysicalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeTwoPointLinSecondElectricalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeTwoPointLinSecondPhysicalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIBridgeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalApplyCalIfExp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalCalDate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'year',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'month',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'day',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'hour',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'minute',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalDesc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalEnableCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalExpDate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'year',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'month',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'day',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'hour',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'minute',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalHasValidCalInfo': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalOperatorName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalPolyForwardCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalPolyReverseCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalScaleType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalTablePreScaledVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalTableScaledVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalVerifAcqVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChanCalVerifRefVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChargeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIChopEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvActiveEdgeEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvDigFltrEnableEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvDigFltrMinPulseWidthEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvDigFltrTimebaseRateEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvDigFltrTimebaseSrcEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvDigSyncEnableEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvMaxRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvMaxRateEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvRateEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvSrcEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvTimebaseDivEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIConvTimebaseSrcEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAICoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAICurrentACRMSUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAICurrentShuntLoc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAICurrentShuntResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAICurrentUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAICustomScaleName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDCOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDataXferCustomThreshold': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDataXferMaxRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDevScalingCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrBandpassCenterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrBandpassWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrHighpassCutoffFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrLowpassCutoffFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrNotchCenterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrNotchWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrOrder': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrResponse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDigFltrTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIDitherEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIEddyCurrentProxProbeSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIEddyCurrentProxProbeSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIEddyCurrentProxProbeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIEnhancedAliasRejectionEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIExcitActualVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIExcitDCorAC': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIExcitIdleOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIExcitSense': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIExcitSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIExcitUseForScaling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIExcitUseMultiplexed': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIExcitVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIExcitVoltageOrCurrent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIFilterDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIFilterDelayAdjustment': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIFilterDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIFilterEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIFilterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIFilterOrder': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIFilterResponse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIForceIEPESensorSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIForceIEPESensorSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIForceReadFromChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIForceUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIFreqHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIFreqThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIGain': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIImpedance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIInputLimitsFaultDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIInputLimitsFaultDetectLowerLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIInputLimitsFaultDetectUpperLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIInputSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIIsTEDS': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAILVDTSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAILVDTSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAILVDTUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAILeadWireResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAILossyLSBRemovalCompressedSampSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAILowpassCutoffFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAILowpassEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAILowpassSwitchCapClkSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAILowpassSwitchCapExtClkDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAILowpassSwitchCapExtClkFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAILowpassSwitchCapOutClkDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIMeasType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIMicrophoneSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIOpenChanDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIOpenThrmcplDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIOvercurrentDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIPowerSupplyFaultDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIPressureUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIProbeAtten': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRTDA': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRTDB': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRTDC': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRTDR0': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRTDType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRVDTSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRVDTSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRVDTUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRawDataCompressionType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRawSampJustification': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRawSampSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRemoveFilterDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIResistanceCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIResistanceUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIResolution': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIResolutionUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRngHigh': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRngLow': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRosetteStrainGageOrientation': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRosetteStrainGageRosetteMeasType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRosetteStrainGageRosetteType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIRosetteStrainGageStrainChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAISampAndHoldEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAISensorPowerCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAISensorPowerType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAISensorPowerVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAISoundPressureMaxSoundPressureLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAISoundPressureUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAISoundPressuredBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIStrainGageCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIStrainGageForceReadFromChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIStrainGageGageFactor': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIStrainGagePoissonRatio': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIStrainUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAITEDSUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAITempUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAITermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIThrmcplCJCChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIThrmcplCJCSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIThrmcplCJCVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIThrmcplLeadOffsetVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIThrmcplScaleType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIThrmcplType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIThrmstrA': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIThrmstrB': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIThrmstrC': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIThrmstrR1': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAITorqueUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIVelocityIEPESensorSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIVelocityIEPESensorSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIVelocityIEPESensordBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIVelocityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIVoltageACRMSUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIVoltageUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAIVoltagedBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOCommonModeOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOCurrentUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOCustomScaleName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODACOffsetExtSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODACOffsetSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODACOffsetVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODACRefAllowConnToGnd': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODACRefConnToGnd': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODACRefExtSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODACRefSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODACRefVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODACRngHigh': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODACRngLow': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAODevScalingCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOEnhancedImageRejectionEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOFilterDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOFilterDelayAdjustment': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOFilterDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOFuncGenAmplitude': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOFuncGenFMDeviation': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOFuncGenFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOFuncGenModulationType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOFuncGenOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOFuncGenSquareDutyCycle': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOFuncGenStartPhase': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOFuncGenType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOGain': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOIdleOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOLoadImpedance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOOutputImpedance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOOutputType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOPowerAmpChannelEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOPowerAmpGain': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOPowerAmpOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOPowerAmpOvercurrent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOPowerAmpScalingCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOReglitchEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOResolution': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOResolutionUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOUseOnlyOnBrdMem': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOVoltageCurrentLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAOVoltageUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAdvTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnalogPowerUpStates': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'state',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'channelType',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnalogPowerUpStatesWithOutputType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'stateArray',
                'type': 'float64[]'
            },
            {
                'direction': 'out',
                'name': 'channelTypeArray',
                'type': 'int32[]'
            },
            {
                'direction': 'out',
                'name': 'arraySizePtr',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeRefTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeRefTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeRefTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeRefTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeRefTrigHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeRefTrigLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeRefTrigSlope': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeStartTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeStartTrigHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeStartTrigLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeStartTrigSlope': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgEdgeStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgLvlPauseTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgLvlPauseTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgLvlPauseTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgLvlPauseTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgLvlPauseTrigHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgLvlPauseTrigLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgLvlPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgLvlPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgMultiEdgeRefTrigCouplings': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgMultiEdgeRefTrigHysts': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgMultiEdgeRefTrigLvls': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgMultiEdgeRefTrigSlopes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgMultiEdgeRefTrigSrcs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgMultiEdgeStartTrigCouplings': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgMultiEdgeStartTrigHysts': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgMultiEdgeStartTrigLvls': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgMultiEdgeStartTrigSlopes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgMultiEdgeStartTrigSrcs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinPauseTrigBtm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinPauseTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinPauseTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinPauseTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinPauseTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinPauseTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinPauseTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinPauseTrigTop': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinRefTrigBtm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinRefTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinRefTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinRefTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinRefTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinRefTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinRefTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinRefTrigTop': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinRefTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinStartTrigBtm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinStartTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinStartTrigTop': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAnlgWinStartTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetArmStartTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetArmStartTrigTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetArmStartTrigTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetArmStartTrigTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetArmStartTrigTimestampVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetArmStartTrigTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetArmStartTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAutoConfiguredCDAQSyncConnections': {
        'parameters': [
            {
                'direction': 'out',
                'name': 'portList',
                'type': 'char[]'
            },
            {
                'direction': 'in',
                'name': 'portListSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAuxPowerErrorChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetAuxPowerErrorChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetBufInputBufSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetBufInputOnbrdBufSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetBufOutputBufSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetBufOutputOnbrdBufSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetBufferAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIAngEncoderInitialAngle': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIAngEncoderPulsesPerRev': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIAngEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountDirDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountDirDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountDirHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountDirLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountDirTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountDirThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetResetCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesCountResetThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesDir': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesDirTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesGateDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesGateDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesGateDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesGateDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesGateEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesGateHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesGateLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesGateTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesGateTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesGateThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesGateWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesInitialCnt': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICountEdgesThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICtrTimebaseActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICtrTimebaseDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICtrTimebaseDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICtrTimebaseDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICtrTimebaseDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICtrTimebaseDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICtrTimebaseMasterTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICtrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICtrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCICustomScaleName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIDataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIDataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIDupCountPrevent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIDutyCycleDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIDutyCycleDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIDutyCycleDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIDutyCycleDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIDutyCycleLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIDutyCycleStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIDutyCycleTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIDutyCycleTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderAInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderAInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderAInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderAInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderAInputDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderAInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderAInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderAInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderBInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderBInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderBInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderBInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderBInputDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderBInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderBInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderBInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderDecodingType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderZIndexEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderZIndexPhase': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderZIndexVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderZInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderZInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderZInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderZInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderZInputDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderZInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderZInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIEncoderZInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFilterDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFilterDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFilterEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFilterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFilterOrder': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFilterResponse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqEnableAveraging': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqMeasMeth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqMeasTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIGPSSyncMethod': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIGPSSyncSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCILinEncoderDistPerPulse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCILinEncoderInitialPos': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCILinEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIMaxMeasPeriod': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIMeasType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCINumPossiblyInvalidSamps': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIOutputState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodEnableAveraging': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodMeasMeth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodMeasTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPeriodUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPrescaler': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseFreqDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseFreqDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseFreqDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseFreqDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseFreqDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseFreqLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseFreqStartEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseFreqTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseFreqTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTicksDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTicksDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTicksDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTicksDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTicksDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTicksLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTicksStartEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTicksTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTicksTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTimeDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTimeDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTimeDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTimeDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTimeDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTimeLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTimeStartEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTimeTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTimeTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseTimeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseWidthDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseWidthDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseWidthDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseWidthDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseWidthDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseWidthLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseWidthStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseWidthTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseWidthTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIPulseWidthUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISampClkOverrunBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISampClkOverrunSentinelVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISemiPeriodDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISemiPeriodDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISemiPeriodDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISemiPeriodDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISemiPeriodDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISemiPeriodLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISemiPeriodStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISemiPeriodTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISemiPeriodTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCISemiPeriodUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITCReached': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITimestampInitialSeconds': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITimestampUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepFirstDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepFirstDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepFirstEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepFirstLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepFirstTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepFirstTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepSecondDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepSecondDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepSecondEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepSecondLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepSecondTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepSecondTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCITwoEdgeSepUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityAngEncoderPulsesPerRev': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityAngEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderAInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderAInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderAInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderAInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderBInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderBInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderBInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderBInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityEncoderDecodingType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityLinEncoderDistPerPulse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityLinEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCIVelocityMeasTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOAutoIncrCnt': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOConstrainedGenMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOCtrTimebaseActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOCtrTimebaseDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOCtrTimebaseDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOCtrTimebaseDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOCtrTimebaseMasterTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOCtrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOCtrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCODataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCODataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOEnableInitialDelayOnRetrigger': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOOutputState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOOutputType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPrescaler': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseDone': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseDutyCyc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseFreqInitialDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseHighTicks': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseHighTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseIdleState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseLowTicks': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseLowTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseTicksInitialDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseTimeInitialDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOPulseTimeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCORdyForNewVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCOUseOnlyOnBrdMem': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCalAccConnectionCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCalDevTemp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCalInfoAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCalRecommendedAccConnectionCountLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCalUserDefinedInfo': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCalUserDefinedInfoMaxSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetCarrierSerialNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetChanAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetChanDescr': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetChanIsGlobal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetChanSyncUnlockBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetChanType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetChangeDetectDIFallingEdgePhysicalChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetChangeDetectDIRisingEdgePhysicalChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetChangeDetectDITristate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIAcquireOn': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIDataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIDataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIDigFltrEnableBusMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIInvertLines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDILogicFamily': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDINumLines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDITristate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDIUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDODataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDODataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOGenerateOn': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOInvertLines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOLineStatesDoneState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOLineStatesPausedState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOLineStatesStartState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOLogicFamily': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDONumLines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOOutputDriveType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOOvercurrentAutoReenable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOOvercurrentLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOOvercurrentReenablePeriod': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOTristate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDOUseOnlyOnBrdMem': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDelayFromSampClkDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDelayFromSampClkDelayEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDelayFromSampClkDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDelayFromSampClkDelayUnitsEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIBridgeRngs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIChargeRngs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAICouplings': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAICurrentIntExcitDiscreteVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAICurrentRngs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIFreqRngs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIGains': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAILowpassCutoffFreqDiscreteVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAILowpassCutoffFreqRangeVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIMaxMultiChanRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIMaxSingleChanRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIMinRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAINumSampTimingEngines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAINumSyncPulseSrcs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIPhysicalChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIResistanceRngs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAISampModes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAISimultaneousSamplingSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAISupportedMeasTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAITrigUsage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIVoltageIntExcitDiscreteVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIVoltageIntExcitRangeVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAIVoltageRngs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAOCurrentRngs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAOGains': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAOMaxRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAOMinRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAONumSampTimingEngines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAONumSyncPulseSrcs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAOPhysicalChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAOSampClkSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAOSampModes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAOSupportedOutputTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAOTrigUsage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAOVoltageRngs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAccessoryProductNums': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAccessoryProductTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAccessorySerialNums': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevAnlgTrigSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevBusType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCIMaxSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCIMaxTimebase': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCIPhysicalChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCISampClkSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCISampModes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCISupportedMeasTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCITrigUsage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCOMaxSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCOMaxTimebase': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCOPhysicalChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCOSampClkSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCOSampModes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCOSupportedOutputTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCOTrigUsage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevChassisModuleDevNames': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCompactDAQChassisDevName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCompactDAQSlotNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCompactRIOChassisDevName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevCompactRIOSlotNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevDILines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevDIMaxRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevDINumSampTimingEngines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevDIPorts': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevDITrigUsage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevDOLines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevDOMaxRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevDONumSampTimingEngines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevDOPorts': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevDOTrigUsage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevDigTrigSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevIsSimulated': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevNumDMAChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevNumTimeTrigs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevNumTimestampEngines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevPCIBusNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevPCIDevNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevPXIChassisNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevPXISlotNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevProductCategory': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevProductNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevProductType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevSerialNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevTCPIPEthernetIP': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevTCPIPHostname': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevTCPIPWirelessIP': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevTEDSHWTEDSSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevTerminals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDevTimeTrigSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDeviceAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeAdvTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeAdvTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeAdvTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeArmStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeArmStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeArmStartTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeArmStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeRefTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeRefTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeRefTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeRefTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeStartTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeWatchdogExpirTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigEdgeWatchdogExpirTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigLvlPauseTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigLvlPauseTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigLvlPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigLvlPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigPatternPauseTrigPattern': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigPatternPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigPatternPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigPatternRefTrigPattern': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigPatternRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigPatternRefTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigPatternStartTrigPattern': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigPatternStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigPatternStartTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigitalLogicFamilyPowerUpState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'logicFamily',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigitalPowerUpStates': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'state',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDigitalPullUpPullDownStates': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'state',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetDisconnectedCDAQSyncPorts': {
        'parameters': [
            {
                'direction': 'out',
                'name': 'portList',
                'type': 'char[]'
            },
            {
                'direction': 'in',
                'name': 'portListSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetErrorString': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'errorCode',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'errorString',
                'type': 'char[]'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExported10MHzRefClkOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExported20MHzTimebaseOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAIConvClkOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAIConvClkPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAIHoldCmpltEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAIHoldCmpltEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAdvCmpltEventDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAdvCmpltEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAdvCmpltEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAdvCmpltEventPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAdvTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAdvTrigPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAdvTrigPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedAdvTrigPulseWidthUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedChangeDetectEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedChangeDetectEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedCtrOutEventOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedCtrOutEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedCtrOutEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedCtrOutEventToggleIdleState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedDataActiveEventLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedDataActiveEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedDividedSampClkTimebaseOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedHshkEventDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedHshkEventInterlockedAssertOnStart': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedHshkEventInterlockedAssertedLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedHshkEventInterlockedDeassertDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedHshkEventOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedHshkEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedHshkEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedHshkEventPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedPauseTrigLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedPauseTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedRdyForStartEventLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedRdyForStartEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedRdyForXferEventDeassertCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedRdyForXferEventDeassertCondCustomThreshold': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedRdyForXferEventLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedRdyForXferEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedRefTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedRefTrigPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedSampClkDelayOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedSampClkOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedSampClkOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedSampClkPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedSampClkTimebaseOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedSignalAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedStartTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedStartTrigPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedSyncPulseEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExportedWatchdogExpiredEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExtCalLastDateAndTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'year',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'month',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'day',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'hour',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'minute',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExtCalLastTemp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExtCalRecommendedInterval': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetExtendedErrorInfo': {
        'parameters': [
            {
                'direction': 'out',
                'name': 'errorString',
                'type': 'char[]'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetFieldDAQBankDevNames': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetFieldDAQDevName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'device',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetFirstSampClkOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetFirstSampClkTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetFirstSampClkWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetFirstSampTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetFirstSampTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetFirstSampTimestampVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetHshkDelayAfterXfer': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetHshkSampleInputDataWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetHshkStartCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetHshkTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetImplicitUnderflowBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetInterlockedHshkTrigAssertedLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetInterlockedHshkTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetLoggingFilePath': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetLoggingFilePreallocationSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetLoggingFileWriteSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetLoggingMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetLoggingPause': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetLoggingSampsPerFile': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetLoggingTDMSGroupName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetLoggingTDMSOperation': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetMasterTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetMasterTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetNthTaskChannel': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'index',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'buffer',
                'type': 'char[]'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetNthTaskDevice': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'index',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'buffer',
                'type': 'char[]'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetNthTaskReadChannel': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'index',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'buffer',
                'type': 'char[]'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetOnDemandSimultaneousAOEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPauseTrigTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPauseTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedChanAllowInteractiveDeletion': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedChanAllowInteractiveEditing': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedChanAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedChanAuthor': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedScaleAllowInteractiveDeletion': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedScaleAllowInteractiveEditing': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedScaleAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedScaleAuthor': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedTaskAllowInteractiveDeletion': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedTaskAllowInteractiveEditing': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedTaskAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPersistedTaskAuthor': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAIInputSrcs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAIPowerControlEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAIPowerControlType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAIPowerControlVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAISensorPowerOpenChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAISensorPowerOvercurrent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAISensorPowerTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAISensorPowerVoltageRangeVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAISupportedMeasTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAITermCfgs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAOManualControlAmplitude': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAOManualControlEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAOManualControlFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAOManualControlShortDetected': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAOSupportedOutputTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAOSupportedPowerUpOutputTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAOTermCfgs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanCISupportedMeasTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanCOSupportedOutputTypes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanDIChangeDetectSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanDIPortWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanDISampClkSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanDISampModes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanDOPortWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanDOSampClkSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanDOSampModes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanTEDSBitStream': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt8'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanTEDSMfgID': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanTEDSModelNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanTEDSSerialNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanTEDSTemplateIDs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanTEDSVersionLetter': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPhysicalChanTEDSVersionNum': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPossibleSCExpressCalAccConnections': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'connections',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'connectionsBufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPwrCurrentDevScalingCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPwrCurrentSetpoint': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPwrIdleOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPwrOutputEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPwrOutputState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPwrRemoteSense': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPwrVoltageDevScalingCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetPwrVoltageSetpoint': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadAccessoryInsertionOrRemovalDetected': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadAutoStart': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadAvailSampPerChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadChangeDetectHasOverflowed': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadChannelsToRead': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadCommonModeRangeErrorChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadCommonModeRangeErrorChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadCurrReadPos': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadDevsWithInsertedOrRemovedAccessories': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadDigitalLinesBytesPerChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadExcitFaultChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadExcitFaultChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadInputLimitsFaultChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadInputLimitsFaultChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadNumChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOpenChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOpenChansDetails': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOpenChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOpenCurrentLoopChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOpenCurrentLoopChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOpenThrmcplChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOpenThrmcplChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOverWrite': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOvercurrentChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOvercurrentChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOverloadedChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOverloadedChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOvertemperatureChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadOvertemperatureChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadPLLUnlockedChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadPLLUnlockedChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadPowerSupplyFaultChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadPowerSupplyFaultChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadRawDataWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadReadAllAvailSamp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadRelativeTo': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadSleepTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadSyncUnlockedChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadSyncUnlockedChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadTotalSampPerChanAcquired': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetReadWaitMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRealTimeAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRealTimeConvLateErrorsToWarnings': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRealTimeNumOfWarmupIters': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRealTimeReportMissedSamp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRealTimeWaitForNextSampClkWaitMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRealTimeWriteRecoveryMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefClkRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefClkSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigAutoTrigEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigAutoTriggered': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigMaxNumTrigsToDetect': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigPretrigSamples': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigRetriggerWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigRetriggerable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigTimestampVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigTrigWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRefTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRemoteSenseErrorChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetRemoteSenseErrorChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkMaxRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkOverrunBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkTimebaseActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkTimebaseMasterTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkTimebaseTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkTimingResponseMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkUnderflowBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampClkWriteWfmUseInitialWfmDT': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampQuantSampMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampQuantSampPerChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampTimingEngine': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSampTimingType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleDescr': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleLinSlope': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleLinYIntercept': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleMapPreScaledMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleMapPreScaledMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleMapScaledMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleMapScaledMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScalePolyForwardCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScalePolyReverseCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScalePreScaledUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleScaledUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleTablePreScaledVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleTableScaledVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetScaleType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSelfCalLastDateAndTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'year',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'month',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'day',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'hour',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'minute',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSelfCalLastTemp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSelfCalSupported': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigMaxNumTrigsToDetect': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigRetriggerWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigRetriggerable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigTimestampVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigTrigWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetStartTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanAnlgBusSharingEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanBandwidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanImpedance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanMaxACCarryCurrent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanMaxACCarryPwr': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanMaxACSwitchCurrent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanMaxACSwitchPwr': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanMaxACVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanMaxDCCarryCurrent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanMaxDCCarryPwr': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanMaxDCSwitchCurrent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanMaxDCSwitchPwr': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanMaxDCVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanUsage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchChanWireMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevAutoConnAnlgBus': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevNumColumns': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevNumRelays': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevNumRows': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevNumSwitchChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevRelayList': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevSettled': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevSettlingTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevSwitchChanList': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevTemperature': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDevTopology': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchDeviceAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchScanAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchScanBreakMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchScanRepeatMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSwitchScanWaitingForAdv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSyncClkInterval': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSyncPulseMinDelayToStart': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSyncPulseResetDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSyncPulseResetTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSyncPulseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSyncPulseSyncTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSyncPulseTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSyncPulseTimeTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSyncPulseTimeWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSyncPulseType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSysDevNames': {
        'parameters': [
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSysGlobalChans': {
        'parameters': [
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSysNIDAQMajorVersion': {
        'parameters': [
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSysNIDAQMinorVersion': {
        'parameters': [
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSysNIDAQUpdateVersion': {
        'parameters': [
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSysScales': {
        'parameters': [
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSysTasks': {
        'parameters': [
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetSystemInfoAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetTaskAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetTaskChannels': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetTaskComplete': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetTaskDevices': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetTaskName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetTaskNumChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetTaskNumDevices': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetTimingAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetTimingAttributeEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetTrigAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetTriggerSyncType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWatchdogAOExpirState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWatchdogAOOutputType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWatchdogAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWatchdogCOExpirState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWatchdogDOExpirState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWatchdogExpirTrigTrigOnNetworkConnLoss': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWatchdogExpirTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWatchdogHasExpired': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWatchdogTimeout': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteAccessoryInsertionOrRemovalDetected': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteCurrWritePos': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteDevsWithInsertedOrRemovedAccessories': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteDigitalLinesBytesPerChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteExternalOvervoltageChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteExternalOvervoltageChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteNumChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteOpenCurrentLoopChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteOpenCurrentLoopChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteOvercurrentChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteOvercurrentChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteOverloadedChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteOverloadedChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteOvertemperatureChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteOvertemperatureChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWritePowerSupplyFaultChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWritePowerSupplyFaultChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteRawDataWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteRegenMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteRelativeTo': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteSleepTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteSpaceAvail': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteSyncUnlockedChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'char'
            },
            {
                'direction': 'in',
                'name': 'bufferSize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteSyncUnlockedChansExist': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteTotalSampPerChanGenerated': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxGetWriteWaitMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxInitExtCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'password',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'calHandle',
                'type': 'CalHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxIsReadOrWriteLate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'errorCode',
                'type': 'int32'
            }
        ],
        'returns': 'bool32'
    },
    'DAQmxIsTaskDone': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'isTaskDone',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxLoadTask': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxMSeriesCalAdjust': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'referenceVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxPerformBridgeOffsetNullingCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxPerformBridgeOffsetNullingCalEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'skipUnsupportedChannels',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxPerformBridgeShuntCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorValue',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorLocation',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'skipUnsupportedChannels',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxPerformBridgeShuntCalEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorValue',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorLocation',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorSelect',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeResistance',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'skipUnsupportedChannels',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxPerformStrainShuntCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorValue',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorLocation',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'skipUnsupportedChannels',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxPerformStrainShuntCalEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorValue',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorLocation',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorSelect',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'shuntResistorSource',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'skipUnsupportedChannels',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxPerformThrmcplLeadOffsetNullingCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'skipUnsupportedChannels',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadAnalogF64': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'float64[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadAnalogScalarF64': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadBinaryI16': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'int16[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadBinaryI32': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'int32[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadBinaryU16': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'uInt16[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadBinaryU32': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'uInt32[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCounterF64': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'float64[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCounterF64Ex': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'float64[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCounterScalarF64': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCounterScalarU32': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCounterU32': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'uInt32[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCounterU32Ex': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'uInt32[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCtrFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'interleaved',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArrayFrequency',
                'type': 'float64[]'
            },
            {
                'direction': 'out',
                'name': 'readArrayDutyCycle',
                'type': 'float64[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCtrFreqScalar': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'frequency',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'dutyCycle',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCtrTicks': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'interleaved',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArrayHighTicks',
                'type': 'uInt32[]'
            },
            {
                'direction': 'out',
                'name': 'readArrayLowTicks',
                'type': 'uInt32[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCtrTicksScalar': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'highTicks',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'lowTicks',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCtrTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'interleaved',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArrayHighTime',
                'type': 'float64[]'
            },
            {
                'direction': 'out',
                'name': 'readArrayLowTime',
                'type': 'float64[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadCtrTimeScalar': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'highTime',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'lowTime',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadDigitalLines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'uInt8[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInBytes',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'numBytesPerSamp',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadDigitalScalarU32': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'value',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadDigitalU16': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'uInt16[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadDigitalU32': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'uInt32[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadDigitalU8': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'uInt8[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadPowerBinaryI16': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArrayVoltage',
                'type': 'int16[]'
            },
            {
                'direction': 'out',
                'name': 'readArrayCurrent',
                'type': 'int16[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadPowerF64': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'fillMode',
                'type': 'bool32'
            },
            {
                'direction': 'out',
                'name': 'readArrayVoltage',
                'type': 'float64[]'
            },
            {
                'direction': 'out',
                'name': 'readArrayCurrent',
                'type': 'float64[]'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInSamps',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadPowerScalarF64': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'voltage',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'current',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReadRaw': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'readArray',
                'type': 'void'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInBytes',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'sampsRead',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'numBytesPerSamp',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxRegisterDoneEvent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'task',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'options',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'callbackFunction',
                'type': 'DAQmxDoneEventCallbackPtr'
            },
            {
                'direction': 'out',
                'name': 'callbackData',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxRegisterEveryNSamplesEvent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'task',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'everyNsamplesEventType',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'nSamples',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'options',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'callbackFunction',
                'type': 'DAQmxEveryNSamplesEventCallbackPtr'
            },
            {
                'direction': 'out',
                'name': 'callbackData',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxRegisterSignalEvent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'task',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'signalID',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'options',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'callbackFunction',
                'type': 'DAQmxSignalEventCallbackPtr'
            },
            {
                'direction': 'out',
                'name': 'callbackData',
                'type': 'void'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxRemoveCDAQSyncConnection': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'portList',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxReserveNetworkDevice': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'overrideReservation',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIACExcitFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIACExcitSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIACExcitWireMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIADCCustomTimingMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIADCTimingMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIAccel4WireDCVoltageSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIAccel4WireDCVoltageSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIAccelChargeSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIAccelChargeSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIAccelSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIAccelSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIAccelUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIAcceldBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIAtten': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIAutoZeroMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIAveragingWinSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeBalanceCoarsePot': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeBalanceFinePot': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeElectricalUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeInitialRatio': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeInitialVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeNomResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgePhysicalUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgePolyForwardCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgePolyReverseCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeScaleType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeShuntCalEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeShuntCalGainAdjust': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeShuntCalSelect': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeShuntCalShuntCalAActualResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeShuntCalShuntCalAResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeShuntCalShuntCalASrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeShuntCalShuntCalBActualResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeShuntCalShuntCalBResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeTableElectricalVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeTablePhysicalVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeTwoPointLinFirstElectricalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeTwoPointLinFirstPhysicalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeTwoPointLinSecondElectricalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeTwoPointLinSecondPhysicalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIBridgeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChanCalApplyCalIfExp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChanCalDesc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChanCalEnableCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChanCalOperatorName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChanCalPolyForwardCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChanCalPolyReverseCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChanCalScaleType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChanCalTablePreScaledVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChanCalTableScaledVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChanCalVerifAcqVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChanCalVerifRefVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChargeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIChopEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvActiveEdgeEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvDigFltrEnableEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvDigFltrMinPulseWidthEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvDigFltrTimebaseRateEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvDigFltrTimebaseSrcEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvDigSyncEnableEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvRateEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvSrcEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvTimebaseDivEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIConvTimebaseSrcEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAICoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAICurrentACRMSUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAICurrentShuntLoc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAICurrentShuntResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAICurrentUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAICustomScaleName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDCOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDataXferCustomThreshold': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDataXferMaxRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDigFltrBandpassCenterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDigFltrBandpassWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDigFltrCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDigFltrHighpassCutoffFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDigFltrLowpassCutoffFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDigFltrNotchCenterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDigFltrNotchWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDigFltrOrder': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDigFltrResponse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDigFltrType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIDitherEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIEddyCurrentProxProbeSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIEddyCurrentProxProbeSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIEddyCurrentProxProbeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIEnhancedAliasRejectionEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIExcitActualVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIExcitDCorAC': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIExcitIdleOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIExcitSense': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIExcitSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIExcitUseForScaling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIExcitUseMultiplexed': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIExcitVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIExcitVoltageOrCurrent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIFilterDelayAdjustment': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIFilterDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIFilterEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIFilterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIFilterOrder': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIFilterResponse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIForceIEPESensorSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIForceIEPESensorSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIForceReadFromChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIForceUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIFreqHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIFreqThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIGain': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIImpedance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIInputLimitsFaultDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIInputLimitsFaultDetectLowerLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIInputLimitsFaultDetectUpperLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIInputSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAILVDTSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAILVDTSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAILVDTUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAILeadWireResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAILossyLSBRemovalCompressedSampSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAILowpassCutoffFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAILowpassEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAILowpassSwitchCapClkSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAILowpassSwitchCapExtClkDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAILowpassSwitchCapExtClkFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAILowpassSwitchCapOutClkDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIMicrophoneSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIOpenChanDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIOpenThrmcplDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIOvercurrentDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIPowerSupplyFaultDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIPressureUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIProbeAtten': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRTDA': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRTDB': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRTDC': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRTDR0': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRTDType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRVDTSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRVDTSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRVDTUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRawDataCompressionType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRemoveFilterDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIResistanceCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIResistanceUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRngHigh': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRngLow': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRosetteStrainGageOrientation': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIRosetteStrainGageRosetteMeasType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAISampAndHoldEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAISensorPowerCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAISensorPowerType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAISensorPowerVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAISoundPressureMaxSoundPressureLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAISoundPressureUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAISoundPressuredBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIStrainGageCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIStrainGageForceReadFromChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIStrainGageGageFactor': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIStrainGagePoissonRatio': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIStrainUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAITempUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAITermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIThrmcplCJCVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIThrmcplLeadOffsetVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIThrmcplScaleType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIThrmcplType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIThrmstrA': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIThrmstrB': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIThrmstrC': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIThrmstrR1': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAITorqueUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIVelocityIEPESensorSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIVelocityIEPESensorSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIVelocityIEPESensordBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIVelocityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIVoltageACRMSUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIVoltageUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAIVoltagedBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOCommonModeOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOCurrentUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOCustomScaleName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODACOffsetExtSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODACOffsetSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODACOffsetVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODACRefAllowConnToGnd': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODACRefConnToGnd': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODACRefExtSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODACRefSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODACRefVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODACRngHigh': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODACRngLow': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAODataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOEnhancedImageRejectionEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOFilterDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOFilterDelayAdjustment': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOFilterDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOFuncGenAmplitude': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOFuncGenFMDeviation': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOFuncGenFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOFuncGenModulationType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOFuncGenOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOFuncGenSquareDutyCycle': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOFuncGenStartPhase': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOFuncGenType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOGain': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOIdleOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOLoadImpedance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOOutputImpedance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOPowerAmpChannelEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOReglitchEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOResolutionUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOUseOnlyOnBrdMem': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOVoltageCurrentLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAOVoltageUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAdvTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeRefTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeRefTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeRefTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeRefTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeRefTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeRefTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeRefTrigHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeRefTrigLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeRefTrigSlope': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeStartTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeStartTrigHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeStartTrigLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeStartTrigSlope': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgEdgeStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgLvlPauseTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgLvlPauseTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgLvlPauseTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgLvlPauseTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgLvlPauseTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgLvlPauseTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgLvlPauseTrigHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgLvlPauseTrigLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgLvlPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgLvlPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgMultiEdgeRefTrigCouplings': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgMultiEdgeRefTrigHysts': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgMultiEdgeRefTrigLvls': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgMultiEdgeRefTrigSlopes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgMultiEdgeRefTrigSrcs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgMultiEdgeStartTrigCouplings': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgMultiEdgeStartTrigHysts': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgMultiEdgeStartTrigLvls': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgMultiEdgeStartTrigSlopes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgMultiEdgeStartTrigSrcs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinPauseTrigBtm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinPauseTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinPauseTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinPauseTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinPauseTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinPauseTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinPauseTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinPauseTrigTop': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinRefTrigBtm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinRefTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinRefTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinRefTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinRefTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinRefTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinRefTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinRefTrigTop': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinRefTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinStartTrigBtm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinStartTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinStartTrigTop': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetAnlgWinStartTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetArmStartTrigTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetArmStartTrigTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetArmStartTrigTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetArmStartTrigTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetArmStartTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetBufInputBufSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetBufOutputBufSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetBufOutputOnbrdBufSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetBufferAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIAngEncoderInitialAngle': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIAngEncoderPulsesPerRev': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIAngEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountDirDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountDirDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountDirHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountDirLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountDirTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountDirThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetResetCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesCountResetThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesDir': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesDirTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesGateDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesGateDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesGateDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesGateDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesGateEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesGateHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesGateLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesGateTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesGateTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesGateThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesGateWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesInitialCnt': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICountEdgesThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICtrTimebaseActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICtrTimebaseDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICtrTimebaseDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICtrTimebaseDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICtrTimebaseDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICtrTimebaseDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICtrTimebaseMasterTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICtrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICtrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCICustomScaleName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIDataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIDataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIDupCountPrevent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIDutyCycleDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIDutyCycleDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIDutyCycleDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIDutyCycleDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIDutyCycleLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIDutyCycleStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIDutyCycleTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIDutyCycleTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderAInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderAInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderAInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderAInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderAInputDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderAInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderAInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderAInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderBInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderBInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderBInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderBInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderBInputDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderBInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderBInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderBInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderDecodingType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderZIndexEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderZIndexPhase': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderZIndexVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderZInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderZInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderZInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderZInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderZInputDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderZInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderZInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIEncoderZInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFilterDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFilterEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFilterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFilterOrder': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFilterResponse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqEnableAveraging': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqMeasMeth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqMeasTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIGPSSyncMethod': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIGPSSyncSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCILinEncoderDistPerPulse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCILinEncoderInitialPos': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCILinEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIMaxMeasPeriod': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodEnableAveraging': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodMeasMeth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodMeasTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPeriodUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPrescaler': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseFreqDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseFreqDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseFreqDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseFreqDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseFreqDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseFreqLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseFreqStartEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseFreqTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseFreqTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTicksDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTicksDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTicksDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTicksDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTicksDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTicksLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTicksStartEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTicksTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTicksTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTimeDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTimeDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTimeDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTimeDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTimeDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTimeLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTimeStartEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTimeTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTimeTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseTimeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseWidthDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseWidthDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseWidthDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseWidthDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseWidthDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseWidthLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseWidthStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseWidthTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseWidthTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIPulseWidthUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISampClkOverrunBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISampClkOverrunSentinelVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISemiPeriodDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISemiPeriodDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISemiPeriodDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISemiPeriodDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISemiPeriodDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISemiPeriodLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISemiPeriodStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISemiPeriodTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISemiPeriodTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCISemiPeriodUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITimestampInitialSeconds': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITimestampUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepFirstDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepFirstDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepFirstEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepFirstLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepFirstTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepFirstTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepSecondDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepSecondDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepSecondEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepSecondLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepSecondTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepSecondTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCITwoEdgeSepUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityAngEncoderPulsesPerRev': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityAngEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderAInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderAInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderAInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderAInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderBInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderBInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderBInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderBInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityEncoderDecodingType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityLinEncoderDistPerPulse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityLinEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCIVelocityMeasTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOAutoIncrCnt': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOConstrainedGenMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOCtrTimebaseActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOCtrTimebaseDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOCtrTimebaseDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOCtrTimebaseDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOCtrTimebaseMasterTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOCtrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOCtrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCODataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCODataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOEnableInitialDelayOnRetrigger': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPrescaler': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseDutyCyc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseFreqInitialDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseHighTicks': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseHighTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseIdleState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseLowTicks': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseLowTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseTicksInitialDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseTimeInitialDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOPulseTimeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetCOUseOnlyOnBrdMem': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetChanAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetChanDescr': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetChanSyncUnlockBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetChangeDetectDIFallingEdgePhysicalChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetChangeDetectDIRisingEdgePhysicalChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetChangeDetectDITristate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIAcquireOn': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIDataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIDataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIDigFltrEnableBusMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIInvertLines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDILogicFamily': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDITristate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDIUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDODataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDODataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOGenerateOn': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOInvertLines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOLineStatesDoneState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOLineStatesPausedState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOLineStatesStartState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOLogicFamily': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOOutputDriveType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOOvercurrentAutoReenable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOOvercurrentLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOOvercurrentReenablePeriod': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOTristate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDOUseOnlyOnBrdMem': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDelayFromSampClkDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDelayFromSampClkDelayEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDelayFromSampClkDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDelayFromSampClkDelayUnitsEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDevice': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeAdvTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeAdvTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeAdvTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeArmStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeArmStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeArmStartTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeArmStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeRefTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeRefTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeRefTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeRefTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeRefTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeRefTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeStartTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeWatchdogExpirTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigEdgeWatchdogExpirTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigLvlPauseTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigLvlPauseTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigLvlPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigLvlPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigPatternPauseTrigPattern': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigPatternPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigPatternPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigPatternRefTrigPattern': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigPatternRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigPatternRefTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigPatternStartTrigPattern': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigPatternStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetDigPatternStartTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExported10MHzRefClkOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExported20MHzTimebaseOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedAIConvClkOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedAIHoldCmpltEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedAIHoldCmpltEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedAdvCmpltEventDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedAdvCmpltEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedAdvCmpltEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedAdvCmpltEventPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedAdvTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedAdvTrigPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedAdvTrigPulseWidthUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedChangeDetectEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedChangeDetectEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedCtrOutEventOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedCtrOutEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedCtrOutEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedCtrOutEventToggleIdleState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedDataActiveEventLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedDataActiveEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedDividedSampClkTimebaseOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedHshkEventDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedHshkEventInterlockedAssertOnStart': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedHshkEventInterlockedAssertedLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedHshkEventInterlockedDeassertDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedHshkEventOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedHshkEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedHshkEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedHshkEventPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedPauseTrigLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedPauseTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedRdyForStartEventLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedRdyForStartEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedRdyForXferEventDeassertCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedRdyForXferEventDeassertCondCustomThreshold': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedRdyForXferEventLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedRdyForXferEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedRefTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedRefTrigPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedSampClkDelayOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedSampClkOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedSampClkOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedSampClkPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedSampClkTimebaseOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedSignalAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedStartTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedStartTrigPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedSyncPulseEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetExportedWatchdogExpiredEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetFirstSampClkOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetFirstSampClkTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetFirstSampClkWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetFirstSampTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetFirstSampTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetHshkDelayAfterXfer': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetHshkSampleInputDataWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetHshkStartCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetHshkTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetImplicitUnderflowBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetInterlockedHshkTrigAssertedLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetInterlockedHshkTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetLoggingFilePath': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetLoggingFilePreallocationSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetLoggingFileWriteSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetLoggingMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetLoggingPause': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetLoggingSampsPerFile': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetLoggingTDMSGroupName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetLoggingTDMSOperation': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetMasterTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetMasterTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetOnDemandSimultaneousAOEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetPauseTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetPhysicalChanAIPowerControlEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetPhysicalChanAIPowerControlType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetPhysicalChanAIPowerControlVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetPhysicalChanAOManualControlEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetPwrCurrentSetpoint': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetPwrIdleOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetPwrOutputEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetPwrRemoteSense': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetPwrVoltageSetpoint': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetReadAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetReadAutoStart': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetReadChannelsToRead': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetReadOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetReadOverWrite': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetReadReadAllAvailSamp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetReadRelativeTo': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetReadSleepTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetReadWaitMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRealTimeAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRealTimeConvLateErrorsToWarnings': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRealTimeNumOfWarmupIters': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRealTimeReportMissedSamp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRealTimeWaitForNextSampClkWaitMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRealTimeWriteRecoveryMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefClkRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefClkSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefTrigAutoTrigEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefTrigDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefTrigMaxNumTrigsToDetect': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefTrigPretrigSamples': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefTrigRetriggerWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefTrigRetriggerable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefTrigTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefTrigTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefTrigTrigWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetRefTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkOverrunBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkTimebaseActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkTimebaseMasterTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkTimingResponseMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkUnderflowBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampClkWriteWfmUseInitialWfmDT': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampQuantSampMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampQuantSampPerChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampTimingEngine': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSampTimingType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetStartTrigDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetStartTrigDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetStartTrigMaxNumTrigsToDetect': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetStartTrigRetriggerWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetStartTrigRetriggerable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetStartTrigTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetStartTrigTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetStartTrigTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetStartTrigTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetStartTrigTrigWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetStartTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSwitchScanAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSwitchScanBreakMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSwitchScanRepeatMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSyncClkInterval': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSyncPulseMinDelayToStart': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSyncPulseResetDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSyncPulseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSyncPulseTimeTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSyncPulseTimeWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetSyncPulseType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetTimingAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetTimingAttributeEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetTrigAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetTriggerSyncType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWatchdogAOExpirState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWatchdogAOOutputType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWatchdogAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWatchdogCOExpirState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWatchdogDOExpirState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWatchdogExpirTrigTrigOnNetworkConnLoss': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWatchdogExpirTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWatchdogTimeout': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWriteAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWriteOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWriteRegenMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWriteRelativeTo': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWriteSleepTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxResetWriteWaitMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxRestoreLastExtCalConst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSCBaseboardCalAdjust': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'referenceVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSSeriesCalAdjust': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'referenceVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSaveGlobalChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'saveAs',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'author',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'options',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSaveScale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'saveAs',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'author',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'options',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSaveTask': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'saveAs',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'author',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'options',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSelfCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSelfTestDevice': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSendSoftwareTrigger': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'triggerID',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIACExcitFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIACExcitSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIACExcitWireMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIADCCustomTimingMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIADCTimingMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIAccel4WireDCVoltageSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIAccel4WireDCVoltageSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIAccelChargeSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIAccelChargeSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIAccelSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIAccelSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIAccelUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIAcceldBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIAtten': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIAutoZeroMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIAveragingWinSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeBalanceCoarsePot': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeBalanceFinePot': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeElectricalUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeInitialRatio': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeInitialVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeNomResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgePhysicalUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgePolyForwardCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgePolyReverseCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeScaleType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeShuntCalEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeShuntCalGainAdjust': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeShuntCalSelect': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeShuntCalShuntCalAActualResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeShuntCalShuntCalAResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeShuntCalShuntCalASrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeShuntCalShuntCalBActualResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeShuntCalShuntCalBResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeTableElectricalVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeTablePhysicalVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeTwoPointLinFirstElectricalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeTwoPointLinFirstPhysicalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeTwoPointLinSecondElectricalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeTwoPointLinSecondPhysicalVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIBridgeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalApplyCalIfExp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalCalDate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'year',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'month',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'day',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'hour',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'minute',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalDesc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalEnableCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalExpDate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'year',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'month',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'day',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'hour',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'minute',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalOperatorName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalPolyForwardCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalPolyReverseCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalScaleType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalTablePreScaledVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalTableScaledVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalVerifAcqVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChanCalVerifRefVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChargeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIChopEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvActiveEdgeEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvDigFltrEnableEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvDigFltrMinPulseWidthEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvDigFltrTimebaseRateEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvDigFltrTimebaseSrcEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvDigSyncEnableEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvRateEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvSrcEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvTimebaseDivEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIConvTimebaseSrcEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAICoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAICurrentACRMSUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAICurrentShuntLoc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAICurrentShuntResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAICurrentUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAICustomScaleName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDCOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDataXferCustomThreshold': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDataXferMaxRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDigFltrBandpassCenterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDigFltrBandpassWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDigFltrCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDigFltrHighpassCutoffFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDigFltrLowpassCutoffFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDigFltrNotchCenterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDigFltrNotchWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDigFltrOrder': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDigFltrResponse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDigFltrType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIDitherEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIEddyCurrentProxProbeSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIEddyCurrentProxProbeSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIEddyCurrentProxProbeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIEnhancedAliasRejectionEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIExcitActualVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIExcitDCorAC': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIExcitIdleOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIExcitSense': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIExcitSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIExcitUseForScaling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIExcitUseMultiplexed': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIExcitVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIExcitVoltageOrCurrent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIFilterDelayAdjustment': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIFilterDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIFilterEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIFilterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIFilterOrder': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIFilterResponse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIForceIEPESensorSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIForceIEPESensorSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIForceReadFromChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIForceUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIFreqHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIFreqThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIGain': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIImpedance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIInputLimitsFaultDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIInputLimitsFaultDetectLowerLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIInputLimitsFaultDetectUpperLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIInputSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAILVDTSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAILVDTSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAILVDTUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAILeadWireResistance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAILossyLSBRemovalCompressedSampSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAILowpassCutoffFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAILowpassEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAILowpassSwitchCapClkSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAILowpassSwitchCapExtClkDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAILowpassSwitchCapExtClkFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAILowpassSwitchCapOutClkDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIMicrophoneSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIOpenChanDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIOpenThrmcplDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIOvercurrentDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIPowerSupplyFaultDetectEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIPressureUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIProbeAtten': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRTDA': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRTDB': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRTDC': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRTDR0': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRTDType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRVDTSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRVDTSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRVDTUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRawDataCompressionType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRemoveFilterDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIResistanceCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIResistanceUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRngHigh': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRngLow': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRosetteStrainGageOrientation': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIRosetteStrainGageRosetteMeasType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAISampAndHoldEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAISensorPowerCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAISensorPowerType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAISensorPowerVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAISoundPressureMaxSoundPressureLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAISoundPressureUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAISoundPressuredBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIStrainGageCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIStrainGageForceReadFromChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIStrainGageGageFactor': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIStrainGagePoissonRatio': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIStrainUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAITempUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAITermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIThrmcplCJCVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIThrmcplLeadOffsetVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIThrmcplScaleType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIThrmcplType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIThrmstrA': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIThrmstrB': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIThrmstrC': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIThrmstrR1': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAITorqueUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIVelocityIEPESensorSensitivity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIVelocityIEPESensorSensitivityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIVelocityIEPESensordBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIVelocityUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIVoltageACRMSUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIVoltageUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAIVoltagedBRef': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOCommonModeOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOCurrentUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOCustomScaleName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODACOffsetExtSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODACOffsetSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODACOffsetVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODACRefAllowConnToGnd': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODACRefConnToGnd': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODACRefExtSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODACRefSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODACRefVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODACRngHigh': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODACRngLow': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAODataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOEnhancedImageRejectionEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOFilterDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOFilterDelayAdjustment': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOFilterDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOFuncGenAmplitude': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOFuncGenFMDeviation': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOFuncGenFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOFuncGenModulationType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOFuncGenOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOFuncGenSquareDutyCycle': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOFuncGenStartPhase': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOFuncGenType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOGain': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOIdleOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOLoadImpedance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOOutputImpedance': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOPowerAmpChannelEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOReglitchEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOResolutionUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOUseOnlyOnBrdMem': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOVoltageCurrentLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAOVoltageUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAdvTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnalogPowerUpStates': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'state',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'channelType',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnalogPowerUpStatesWithOutputType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'stateArray',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'channelTypeArray',
                'type': 'const int32[]'
            },
            {
                'direction': 'in',
                'name': 'arraySize',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeRefTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeRefTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeRefTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeRefTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeRefTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeRefTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeRefTrigHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeRefTrigLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeRefTrigSlope': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeStartTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeStartTrigHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeStartTrigLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeStartTrigSlope': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgEdgeStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgLvlPauseTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgLvlPauseTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgLvlPauseTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgLvlPauseTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgLvlPauseTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgLvlPauseTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgLvlPauseTrigHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgLvlPauseTrigLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgLvlPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgLvlPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgMultiEdgeRefTrigCouplings': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgMultiEdgeRefTrigHysts': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgMultiEdgeRefTrigLvls': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgMultiEdgeRefTrigSlopes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgMultiEdgeRefTrigSrcs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgMultiEdgeStartTrigCouplings': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgMultiEdgeStartTrigHysts': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgMultiEdgeStartTrigLvls': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgMultiEdgeStartTrigSlopes': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgMultiEdgeStartTrigSrcs': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinPauseTrigBtm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinPauseTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinPauseTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinPauseTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinPauseTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinPauseTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinPauseTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinPauseTrigTop': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinRefTrigBtm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinRefTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinRefTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinRefTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinRefTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinRefTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinRefTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinRefTrigTop': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinRefTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinStartTrigBtm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinStartTrigCoupling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinStartTrigTop': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetAnlgWinStartTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetArmStartTrigTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetArmStartTrigTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetArmStartTrigTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetArmStartTrigTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetArmStartTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetBufInputBufSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetBufOutputBufSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetBufOutputOnbrdBufSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetBufferAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIAngEncoderInitialAngle': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIAngEncoderPulsesPerRev': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIAngEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountDirDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountDirDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountDirHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountDirLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountDirTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountDirThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetResetCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesCountResetThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesDir': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesDirTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesGateDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesGateDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesGateDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesGateDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesGateEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesGateHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesGateLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesGateTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesGateTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesGateThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesGateWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesInitialCnt': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICountEdgesThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICtrTimebaseActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICtrTimebaseDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICtrTimebaseDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICtrTimebaseDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICtrTimebaseDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICtrTimebaseDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICtrTimebaseMasterTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICtrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICtrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCICustomScaleName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIDataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIDataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIDupCountPrevent': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIDutyCycleDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIDutyCycleDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIDutyCycleDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIDutyCycleDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIDutyCycleLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIDutyCycleStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIDutyCycleTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIDutyCycleTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderAInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderAInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderAInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderAInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderAInputDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderAInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderAInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderAInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderBInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderBInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderBInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderBInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderBInputDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderBInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderBInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderBInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderDecodingType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderZIndexEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderZIndexPhase': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderZIndexVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderZInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderZInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderZInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderZInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderZInputDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderZInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderZInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIEncoderZInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFilterDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFilterEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFilterFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFilterOrder': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFilterResponse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqEnableAveraging': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqMeasMeth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqMeasTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIGPSSyncMethod': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIGPSSyncSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCILinEncoderDistPerPulse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCILinEncoderInitialPos': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCILinEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIMaxMeasPeriod': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodEnableAveraging': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodHyst': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodMeasMeth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodMeasTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPeriodUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPrescaler': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseFreqDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseFreqDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseFreqDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseFreqDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseFreqDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseFreqLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseFreqStartEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseFreqTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseFreqTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTicksDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTicksDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTicksDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTicksDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTicksDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTicksLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTicksStartEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTicksTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTicksTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTimeDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTimeDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTimeDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTimeDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTimeDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTimeLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTimeStartEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTimeTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTimeTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseTimeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseWidthDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseWidthDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseWidthDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseWidthDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseWidthDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseWidthLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseWidthStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseWidthTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseWidthTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIPulseWidthUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISampClkOverrunBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISampClkOverrunSentinelVal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISemiPeriodDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISemiPeriodDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISemiPeriodDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISemiPeriodDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISemiPeriodDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISemiPeriodLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISemiPeriodStartingEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISemiPeriodTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISemiPeriodTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCISemiPeriodUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIThreshVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITimestampInitialSeconds': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITimestampUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepFirstDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepFirstDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepFirstEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepFirstLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepFirstTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepFirstTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepSecondDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepSecondDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepSecondEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepSecondLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepSecondTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepSecondTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCITwoEdgeSepUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityAngEncoderPulsesPerRev': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityAngEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderAInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderAInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderAInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderAInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderBInputDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderBInputLogicLvlBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderBInputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderBInputTermCfg': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityEncoderDecodingType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityLinEncoderDistPerPulse': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityLinEncoderUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCIVelocityMeasTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOAutoIncrCnt': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOConstrainedGenMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOCtrTimebaseActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOCtrTimebaseDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOCtrTimebaseDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOCtrTimebaseDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOCtrTimebaseMasterTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOCtrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOCtrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCODataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCODataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOEnableInitialDelayOnRetrigger': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPrescaler': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseDutyCyc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseFreqInitialDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseFreqUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseHighTicks': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseHighTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseIdleState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseLowTicks': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseLowTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseTicksInitialDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseTimeInitialDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOPulseTimeUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCOUseOnlyOnBrdMem': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCalAccConnectionCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCalInfoAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetCalUserDefinedInfo': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetChanAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetChanDescr': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetChanSyncUnlockBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetChangeDetectDIFallingEdgePhysicalChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetChangeDetectDIRisingEdgePhysicalChans': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetChangeDetectDITristate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIAcquireOn': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIDataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIDataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIDigFltrEnableBusMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIInvertLines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDILogicFamily': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDITristate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDIUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDODataXferMech': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDODataXferReqCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOGenerateOn': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOInvertLines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOLineStatesDoneState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOLineStatesPausedState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOLineStatesStartState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOLogicFamily': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOMemMapEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOOutputDriveType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOOvercurrentAutoReenable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOOvercurrentLimit': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOOvercurrentReenablePeriod': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOTristate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOUsbXferReqCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOUsbXferReqSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDOUseOnlyOnBrdMem': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDelayFromSampClkDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDelayFromSampClkDelayEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDelayFromSampClkDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDelayFromSampClkDelayUnitsEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeAdvTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeAdvTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeAdvTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeArmStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeArmStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeArmStartTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeArmStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeRefTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeRefTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeRefTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeRefTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeRefTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeStartTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeStartTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeStartTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeWatchdogExpirTrigEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigEdgeWatchdogExpirTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigLvlPauseTrigDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigLvlPauseTrigDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigLvlPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigLvlPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigPatternPauseTrigPattern': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigPatternPauseTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigPatternPauseTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigPatternRefTrigPattern': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigPatternRefTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigPatternRefTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigPatternStartTrigPattern': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigPatternStartTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigPatternStartTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigitalLogicFamilyPowerUpState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'logicFamily',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigitalPowerUpStates': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'state',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetDigitalPullUpPullDownStates': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'state',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExported10MHzRefClkOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExported20MHzTimebaseOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedAIConvClkOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedAIHoldCmpltEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedAIHoldCmpltEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedAdvCmpltEventDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedAdvCmpltEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedAdvCmpltEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedAdvCmpltEventPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedAdvTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedAdvTrigPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedAdvTrigPulseWidthUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedChangeDetectEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedChangeDetectEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedCtrOutEventOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedCtrOutEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedCtrOutEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedCtrOutEventToggleIdleState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedDataActiveEventLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedDataActiveEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedDividedSampClkTimebaseOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedHshkEventDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedHshkEventInterlockedAssertOnStart': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedHshkEventInterlockedAssertedLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedHshkEventInterlockedDeassertDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedHshkEventOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedHshkEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedHshkEventPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedHshkEventPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedPauseTrigLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedPauseTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedRdyForStartEventLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedRdyForStartEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedRdyForXferEventDeassertCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedRdyForXferEventDeassertCondCustomThreshold': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedRdyForXferEventLvlActiveLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedRdyForXferEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedRefTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedRefTrigPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedSampClkDelayOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedSampClkOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedSampClkOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedSampClkPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedSampClkTimebaseOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedSignalAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedStartTrigOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedStartTrigPulsePolarity': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedSyncPulseEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetExportedWatchdogExpiredEventOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetFirstSampClkOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetFirstSampClkTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetFirstSampClkWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetFirstSampTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetFirstSampTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetHshkDelayAfterXfer': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetHshkSampleInputDataWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetHshkStartCond': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetHshkTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetImplicitUnderflowBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetInterlockedHshkTrigAssertedLvl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetInterlockedHshkTrigSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetLoggingFilePath': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetLoggingFilePreallocationSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetLoggingFileWriteSize': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetLoggingMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetLoggingPause': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetLoggingSampsPerFile': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetLoggingTDMSGroupName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetLoggingTDMSOperation': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetMasterTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetMasterTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetOnDemandSimultaneousAOEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetPauseTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetPhysicalChanAIPowerControlEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetPhysicalChanAIPowerControlType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetPhysicalChanAIPowerControlVoltage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetPhysicalChanAOManualControlEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetPhysicalChanName': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetPwrCurrentSetpoint': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetPwrIdleOutputBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetPwrOutputEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetPwrRemoteSense': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetPwrVoltageSetpoint': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'channel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetReadAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetReadAutoStart': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetReadChannelsToRead': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetReadOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetReadOverWrite': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetReadReadAllAvailSamp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetReadRelativeTo': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetReadSleepTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetReadWaitMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRealTimeAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRealTimeConvLateErrorsToWarnings': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRealTimeNumOfWarmupIters': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRealTimeReportMissedSamp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRealTimeWaitForNextSampClkWaitMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRealTimeWriteRecoveryMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefClkRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefClkSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefTrigAutoTrigEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefTrigDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefTrigMaxNumTrigsToDetect': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefTrigPretrigSamples': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefTrigRetriggerWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefTrigRetriggerable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefTrigTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefTrigTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefTrigTrigWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetRefTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSCExpressCalAccBridgeOutput': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'voltsPerVolt',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkDigFltrEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkDigFltrMinPulseWidth': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkDigFltrTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkDigFltrTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkDigSyncEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkOverrunBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkTimebaseActiveEdge': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkTimebaseMasterTimebaseDiv': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkTimebaseRate': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkTimebaseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkTimingResponseMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkUnderflowBehavior': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampClkWriteWfmUseInitialWfmDT': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampQuantSampMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampQuantSampPerChan': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampTimingEngine': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSampTimingType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScaleAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScaleDescr': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScaleLinSlope': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScaleLinYIntercept': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScaleMapPreScaledMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScaleMapPreScaledMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScaleMapScaledMax': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScaleMapScaledMin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScalePolyForwardCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScalePolyReverseCoeff': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScalePreScaledUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScaleScaledUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScaleTablePreScaledVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetScaleTableScaledVals': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scaleName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'data',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'arraySizeInElements',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetStartTrigDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetStartTrigDelayUnits': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetStartTrigMaxNumTrigsToDetect': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetStartTrigRetriggerWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetStartTrigRetriggerable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetStartTrigTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetStartTrigTimestampEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetStartTrigTimestampTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetStartTrigTrigWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetStartTrigTrigWin': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetStartTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSwitchChanAnlgBusSharingEnable': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSwitchChanAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSwitchChanUsage': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSwitchDevAutoConnAnlgBus': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSwitchDevSettlingTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSwitchDeviceAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSwitchScanAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSwitchScanBreakMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSwitchScanRepeatMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSyncClkInterval': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSyncPulseMinDelayToStart': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSyncPulseResetDelay': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSyncPulseSrc': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'const char'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSyncPulseTimeTimescale': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSyncPulseTimeWhen': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetSyncPulseType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetTimingAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetTimingAttributeEx': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'deviceNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetTrigAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetTriggerSyncType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWatchdogAOExpirState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWatchdogAOOutputType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWatchdogAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWatchdogCOExpirState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWatchdogDOExpirState': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'lines',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWatchdogExpirTrigTrigOnNetworkConnLoss': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWatchdogExpirTrigType': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWatchdogTimeout': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWriteAttribute': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'attribute',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWriteOffset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWriteRegenMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWriteRelativeTo': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWriteSleepTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetWriteWaitMode': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'data',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1102Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1104Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1112Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1122Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1124Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'range',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'dacValue',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1125Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1126Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'upperFreqLimit',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1141Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1142Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1143Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup11605Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup11634Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup11637Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'voltageExcitation',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1502Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1503Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup15110Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup15200Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'adjustmentPoint',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'powerCalibrationType',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1520Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1521Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup153xCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup1540Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'excitationVoltage',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'excitationFreq',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup4302Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup4303Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup4304Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup4305Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup4322Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'outputType',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'outputVal',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup4339Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'calMode',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'excitationVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup433xCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'excitationVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup4463Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'terminalConfig',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'gain',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'outputVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup4480Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'calMode',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9218Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measType',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9219Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'rangeMin',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'rangeMax',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'measType',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'bridgeConfig',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9242Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9244Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9260Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9262Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9263Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9264Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9265Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9266Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9269Cal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9628AOCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9629AOCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetup9638AOCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'channelNames',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSetupDSAAOTimebaseCal': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'out',
                'name': 'expectedFrequency',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxStartNewFile': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'filePath',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxStartTask': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxStopTask': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchCloseRelays': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'relayList',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'waitForSettling',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchConnect': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannel1',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'switchChannel2',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'waitForSettling',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchConnectMulti': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'connectionList',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'waitForSettling',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchCreateScanList': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'scanList',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchDisconnect': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannel1',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'switchChannel2',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'waitForSettling',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchDisconnectAll': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'waitForSettling',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchDisconnectMulti': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'connectionList',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'waitForSettling',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchFindPath': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'switchChannel1',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'switchChannel2',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'path',
                'type': 'char[]'
            },
            {
                'direction': 'in',
                'name': 'pathBufferSize',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'pathStatus',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchGetMultiRelayCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'relayList',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'count',
                'type': 'uInt32[]'
            },
            {
                'direction': 'in',
                'name': 'countArraySize',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'numRelayCountsRead',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchGetMultiRelayPos': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'relayList',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'relayPos',
                'type': 'uInt32[]'
            },
            {
                'direction': 'in',
                'name': 'relayPosArraySize',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'numRelayPossRead',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchGetSingleRelayCount': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'relayName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'count',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchGetSingleRelayPos': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'relayName',
                'type': 'const char[]'
            },
            {
                'direction': 'out',
                'name': 'relayPos',
                'type': 'uInt32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchOpenRelays': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'relayList',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'waitForSettling',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchSetTopologyAndReset': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'newTopology',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxSwitchWaitForSettling': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxTaskControl': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'action',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxTristateOutputTerm': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'outputTerminal',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxUnreserveNetworkDevice': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'deviceName',
                'type': 'const char[]'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWaitForNextSampleClock': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'isLate',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWaitForValidTimestamp': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timestampEvent',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'timestamp',
                'type': 'CVIAbsoluteTime'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWaitUntilTaskDone': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'timeToWait',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteAnalogF64': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'writeArray',
                'type': 'const float64[]'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteAnalogScalarF64': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteBinaryI16': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'writeArray',
                'type': 'const int16[]'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteBinaryI32': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'writeArray',
                'type': 'const int32[]'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteBinaryU16': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'writeArray',
                'type': 'const uInt16[]'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteBinaryU32': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'writeArray',
                'type': 'const uInt32[]'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteCtrFreq': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'frequency',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'dutyCycle',
                'type': 'const float64[]'
            },
            {
                'direction': 'out',
                'name': 'numSampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteCtrFreqScalar': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'frequency',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dutyCycle',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteCtrTicks': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'highTicks',
                'type': 'const uInt32[]'
            },
            {
                'direction': 'in',
                'name': 'lowTicks',
                'type': 'const uInt32[]'
            },
            {
                'direction': 'out',
                'name': 'numSampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteCtrTicksScalar': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'highTicks',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'lowTicks',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteCtrTime': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'highTime',
                'type': 'const float64[]'
            },
            {
                'direction': 'in',
                'name': 'lowTime',
                'type': 'const float64[]'
            },
            {
                'direction': 'out',
                'name': 'numSampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteCtrTimeScalar': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'highTime',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'lowTime',
                'type': 'float64'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteDigitalLines': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'writeArray',
                'type': 'const uInt8[]'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteDigitalScalarU32': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'value',
                'type': 'uInt32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteDigitalU16': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'writeArray',
                'type': 'const uInt16[]'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteDigitalU32': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'writeArray',
                'type': 'const uInt32[]'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteDigitalU8': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSampsPerChan',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'dataLayout',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'writeArray',
                'type': 'const uInt8[]'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteRaw': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'taskHandle',
                'type': 'TaskHandle'
            },
            {
                'direction': 'in',
                'name': 'numSamps',
                'type': 'int32'
            },
            {
                'direction': 'in',
                'name': 'autoStart',
                'type': 'bool32'
            },
            {
                'direction': 'in',
                'name': 'timeout',
                'type': 'float64'
            },
            {
                'direction': 'in',
                'name': 'writeArray',
                'type': 'const void'
            },
            {
                'direction': 'out',
                'name': 'sampsPerChanWritten',
                'type': 'int32'
            },
            {
                'direction': 'out',
                'name': 'reserved',
                'type': 'bool32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteToTEDSFromArray': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'bitStream',
                'type': 'const uInt8[]'
            },
            {
                'direction': 'in',
                'name': 'arraySize',
                'type': 'uInt32'
            },
            {
                'direction': 'in',
                'name': 'basicTEDSOptions',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxWriteToTEDSFromFile': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'physicalChannel',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'filePath',
                'type': 'const char[]'
            },
            {
                'direction': 'in',
                'name': 'basicTEDSOptions',
                'type': 'int32'
            }
        ],
        'returns': 'int32'
    },
    'DAQmxXSeriesCalAdjust': {
        'parameters': [
            {
                'direction': 'in',
                'name': 'calHandle',
                'type': 'CalHandle'
            },
            {
                'direction': 'in',
                'name': 'referenceVoltage',
                'type': 'float64'
            }
        ],
        'returns': 'int32'
    }
}
