[
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Task_Name',
                'description': 'Indicates the name of the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Task',
                'id': 4726,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'TaskName',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQTask',
                'lvFilter': [
                    'Task'
                ],
                'lvMenuName': 'Name',
                'lvMenuWeight': 0.0,
                'name': 'Name',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Task_Channels',
                'description': 'Indicates the names of all virtual channels in the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Task',
                'id': 4723,
                'internalDataType': 'std::list<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'TaskChannels',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQChannel 1D',
                'lvFilter': [
                    'Task'
                ],
                'lvMenuName': 'Channels',
                'lvMenuWeight': 200.0,
                'name': 'Channels',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Task_NumChans',
                'description': 'Indicates the number of virtual channels in the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Task',
                'id': 8577,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'TaskNumChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Task'
                ],
                'lvMenuName': 'Number of Channels',
                'lvMenuWeight': 300.0,
                'name': 'NumChans',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTask',
                'cppEnumName': 'N/A',
                'cviName': 'Task_Devices',
                'description': 'Indicates &an_array; containing the names of all devices in the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Task',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Devices',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Task',
                'id': 8974,
                'internalDataType': 'std::list<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'TaskDevices',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQDevice 1D',
                'lvFilter': [
                    'Task'
                ],
                'lvMenuName': 'Devices',
                'lvMenuWeight': 400.0,
                'name': 'Devices',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Task_NumDevices',
                'description': 'Indicates the number of devices in the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Task',
                'id': 10682,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'TaskNumDevices',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Task'
                ],
                'lvMenuName': 'Number of Devices',
                'lvMenuWeight': 500.0,
                'name': 'NumDevices',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTask',
                'cppEnumName': 'N/A',
                'cviName': 'Task_Complete',
                'description': 'Indicates whether the task <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/whenTaskDone.html\');">completed execution</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Task',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'IsDone',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Task',
                'id': 4724,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'TaskComplete',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Task'
                ],
                'lvMenuName': 'Task Done',
                'lvMenuWeight': 600.0,
                'name': 'Done',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            }
        ],
        'description': '<p class="Body">The DAQmx Task properties return information about a specified task.</p>',
        'hasActiveProperty?': False,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Task',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Max',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'measfunds.chm::/limitSettings.html\')">maximum value</see> you expect to measure. This value is in the units you specify with a units property. When you query this property, it returns the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/inputlimitcoercion.html\')">coerced</see> maximum value that the device can measure with the current settings.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Maximum',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6109,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIMax',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Maximum Value',
                'lvMenuWeight': 400.0,
                'name': 'AI.Max',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Min',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'measfunds.chm::/limitSettings.html\')">minimum value</see> you expect to measure. This value is in the units you specify with a units property.  When you query this property, it returns the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/inputlimitcoercion.html\')">coerced</see> minimum value that the device can measure with the current settings.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Minimum',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6110,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIMin',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Minimum Value',
                'lvMenuWeight': 500.0,
                'name': 'AI.Min',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_CustomScaleName',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/customScales.html\');">custom scale</see> for the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CustomScaleName',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6112,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AICustomScaleName',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQScale',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Custom Scale Name',
                'lvMenuWeight': 600.0,
                'name': 'AI.CustomScaleName',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ScaleName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIMeasurementType',
                'cviName': 'AI_MeasType',
                'description': 'Indicates the measurement to take with the analog input channel and in some cases, such as for temperature measurements, the sensor to use.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIMeasurementType',
                'dotNetName': 'MeasurementType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 1685,
                'internalDataType': 'enum tUsageTypeAI',
                'internalDescription': '',
                'internalName': 'AIMeasType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AIMeasurementType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Measurement Type',
                'lvMenuWeight': 700.0,
                'name': 'AI.MeasType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIVoltageUnits',
                'cviName': 'AI_Voltage_Units',
                'description': 'Specifies the units to use to return voltage measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIVoltageUnits',
                'dotNetName': 'VoltageUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4244,
                'internalDataType': 'enum tVoltageUnits',
                'internalDescription': '',
                'internalName': 'AIVoltageUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum VoltageUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Voltage:Units',
                'lvMenuWeight': 900.0,
                'name': 'AI.Voltage.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Voltage_dBRef',
                'description': 'Specifies the decibel reference level in the units of the channel. When you read samples as a waveform, the decibel reference level is included in the waveform attributes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VoltageDecibelReference',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10672,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIVoltagedBRef',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Voltage:dB Reference',
                'lvMenuWeight': 1000.0,
                'name': 'AI.Voltage.dBRef',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIVoltageAcrmsUnits',
                'cviName': 'AI_Voltage_ACRMS_Units',
                'description': 'Specifies the units to use to return voltage RMS measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIVoltageAcrmsUnits',
                'dotNetName': 'VoltageAcrmsUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6114,
                'internalDataType': 'enum tVoltageUnits',
                'internalDescription': '',
                'internalName': 'AIVoltageACRMSUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum VoltageUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Voltage:AC RMS Voltage:Units',
                'lvMenuWeight': 1100.0,
                'name': 'AI.Voltage.ACRMS.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AITemperatureUnits',
                'cviName': 'AI_Temp_Units',
                'description': 'Specifies the units to use to return temperature measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AITemperatureUnits',
                'dotNetName': 'TemperatureUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4147,
                'internalDataType': 'enum tTemperatureUnits',
                'internalDescription': '',
                'internalName': 'AITempUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TemperatureUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:Units',
                'lvMenuWeight': 1300.0,
                'name': 'AI.Temp.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIThermocoupleType',
                'cviName': 'AI_Thrmcpl_Type',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'measfunds.chm::/thermocouples.html\');">type</see> of thermocouple connected to the channel. Thermocouple types differ in composition and measurement range.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIThermocoupleType',
                'dotNetName': 'ThermocoupleType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4176,
                'internalDataType': 'enum tThermocoupleType',
                'internalDescription': '',
                'internalName': 'AIThrmcplType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ThermocoupleType1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:Thermocouple:Type',
                'lvMenuWeight': 1400.0,
                'name': 'AI.Thrmcpl.Type',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIThermocoupleScaleType',
                'cviName': 'AI_Thrmcpl_ScaleType',
                'description': 'Specifies the method or equation form that the thermocouple scale uses.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIThermocoupleScaleType',
                'dotNetName': 'ThermocoupleScaleType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10704,
                'internalDataType': 'enum tScaleType',
                'internalDescription': '',
                'internalName': 'AIThrmcplScaleType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ScaleType2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:Thermocouple:Scale Type',
                'lvMenuWeight': 1500.0,
                'name': 'AI.Thrmcpl.ScaleType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIThermocoupleCjcSource',
                'cviName': 'AI_Thrmcpl_CJCSrc',
                'description': 'Indicates the source of <see href="javascript:launchSharedHelp(\'measfunds.chm::/sigcontherm.html\');">cold-junction compensation</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIThermocoupleCjcSource',
                'dotNetName': 'ThermocoupleCjcSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4149,
                'internalDataType': 'enum tCJCSource',
                'internalDescription': '',
                'internalName': 'AIThrmcplCJCSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum CJCSource1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:Thermocouple:CJC Source',
                'lvMenuWeight': 1600.0,
                'name': 'AI.Thrmcpl.CJCSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Thrmcpl_CJCVal',
                'description': 'Specifies the temperature of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/sigcontherm.html\');">cold junction</see> if &attr1035; is &val1035.10116;. Specify this value in the units of the measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ThermocoupleCjcValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4150,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIThrmcplCJCVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:Thermocouple:CJC Value',
                'lvMenuWeight': 1700.0,
                'name': 'AI.Thrmcpl.CJCVal',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Thrmcpl_CJCChan',
                'description': 'Indicates the channel that acquires the temperature of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/sigcontherm.html\');">cold junction</see> if &attr1035; is &val1035.10113;. If the channel is a temperature channel, NI-DAQmx acquires the temperature in the correct units. Other channel types, such as a resistance channel with a custom sensor, must use a custom scale to scale values to degrees Celsius.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ThermocoupleCjcChannel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4148,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AIThrmcplCJCChan',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQChannel',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:Thermocouple:CJC Channel',
                'lvMenuWeight': 1800.0,
                'name': 'AI.Thrmcpl.CJCChan',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ChannelName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIRtdType',
                'cviName': 'AI_RTD_Type',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'measfunds.chm::/rtd.html\');">type</see> of RTD connected to the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIRtdType',
                'dotNetName': 'RtdType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4146,
                'internalDataType': 'enum tRTDType',
                'internalDescription': '',
                'internalName': 'AIRTDType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum RTDType1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:RTD:Type',
                'lvMenuWeight': 1900.0,
                'name': 'AI.RTD.Type',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_RTD_R0',
                'description': 'Specifies in ohms the sensor resistance at 0 deg C. The <see href="javascript:launchSharedHelp(\'measfunds.chm::/CallendarVanDusen.html\');">Callendar-Van Dusen equation</see> requires this value. Refer to the sensor documentation to determine this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RtdR0',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4144,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIRTDR0',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:RTD:R0',
                'lvMenuWeight': 2000.0,
                'name': 'AI.RTD.R0',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_RTD_A',
                'description': 'Specifies the \'A\' constant of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/CallendarVanDusen.html\');">Callendar-Van Dusen equation</see>. NI-DAQmx requires this value when you use a custom RTD.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RtdA',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4112,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIRTDA',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:RTD:Custom:A',
                'lvMenuWeight': 2100.0,
                'name': 'AI.RTD.A',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_RTD_B',
                'description': 'Specifies the \'B\' constant of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/CallendarVanDusen.html\');">Callendar-Van Dusen equation</see>. NI-DAQmx requires this value when you use a custom RTD.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RtdB',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4113,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIRTDB',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:RTD:Custom:B',
                'lvMenuWeight': 2200.0,
                'name': 'AI.RTD.B',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_RTD_C',
                'description': 'Specifies the \'C\' constant of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/CallendarVanDusen.html\');">Callendar-Van Dusen equation</see>. NI-DAQmx requires this value when you use a custom RTD.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RtdC',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4115,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIRTDC',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:RTD:Custom:C',
                'lvMenuWeight': 2300.0,
                'name': 'AI.RTD.C',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Thrmstr_A',
                'description': 'Specifies the \'A\' constant of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/thermistors.html\');">Steinhart-Hart thermistor equation</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ThermistorA',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6345,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIThrmstrA',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:Thermistor:A',
                'lvMenuWeight': 2400.0,
                'name': 'AI.Thrmstr.A',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Thrmstr_B',
                'description': 'Specifies the \'B\' constant of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/thermistors.html\');">Steinhart-Hart thermistor equation</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ThermistorB',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6347,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIThrmstrB',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:Thermistor:B',
                'lvMenuWeight': 2500.0,
                'name': 'AI.Thrmstr.B',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Thrmstr_C',
                'description': 'Specifies the \'C\' constant of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/thermistors.html\');">Steinhart-Hart thermistor equation</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ThermistorC',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6346,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIThrmstrC',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:Thermistor:C',
                'lvMenuWeight': 2600.0,
                'name': 'AI.Thrmstr.C',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Thrmstr_R1',
                'description': 'Specifies in ohms the value of the reference resistor for the <see href="javascript:launchSharedHelp(\'measfunds.chm::/thermistors.html\');">thermistor</see> if you use voltage excitation. NI-DAQmx ignores this value for current excitation.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ThermistorR1',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4193,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIThrmstrR1',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:Thermistor:R1',
                'lvMenuWeight': 2700.0,
                'name': 'AI.Thrmstr.R1',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ForceReadFromChan',
                'description': 'Specifies whether to read from the channel if it is a <see href="javascript:launchSharedHelp(\'measfunds.chm::/sigcontherm.html\');">cold-junction compensation</see> channel. By default, &DAQmxRead; does not return data from cold-junction compensation channels.  Setting this property to &true; forces read operations to return the cold-junction compensation channel data with the other channels in the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ForceReadFromChannel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6392,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIForceReadFromChan',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Temperature:Advanced:Force Read From Channel',
                'lvMenuWeight': 3100.0,
                'name': 'AI.ForceReadFromChan',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AICurrentUnits',
                'cviName': 'AI_Current_Units',
                'description': 'Specifies the units to use to return current measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AICurrentUnits',
                'dotNetName': 'CurrentUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 1793,
                'internalDataType': 'enum tCurrentUnits',
                'internalDescription': '',
                'internalName': 'AICurrentUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum CurrentUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Current:Units',
                'lvMenuWeight': 3200.0,
                'name': 'AI.Current.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AICurrentAcrmsUnits',
                'cviName': 'AI_Current_ACRMS_Units',
                'description': 'Specifies the units to use to return current RMS measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AICurrentAcrmsUnits',
                'dotNetName': 'CurrentAcrmsUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6115,
                'internalDataType': 'enum tCurrentUnits',
                'internalDescription': '',
                'internalName': 'AICurrentACRMSUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum CurrentUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Current:AC RMS Current:Units',
                'lvMenuWeight': 3300.0,
                'name': 'AI.Current.ACRMS.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIStrainUnits',
                'cviName': 'AI_Strain_Units',
                'description': 'Specifies the units to use to return strain measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIStrainUnits',
                'dotNetName': 'StrainUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2433,
                'internalDataType': 'enum tStrainUnits',
                'internalDescription': '',
                'internalName': 'AIStrainUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum StrainUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Strain:Units',
                'lvMenuWeight': 3500.0,
                'name': 'AI.Strain.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_StrainGage_ForceReadFromChan',
                'description': 'Specifies whether the data is returned by &DAQmxRead; when set on a raw strain channel that is part of a rosette configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ForceReadFromStrainChannel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12282,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIStrainGageForceReadFromChan',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Strain:Force Read From Channel',
                'lvMenuWeight': 3600.0,
                'name': 'AI.Strain.ForceReadFromChan',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_StrainGage_GageFactor',
                'description': 'Specifies the sensitivity of the strain gage.  Gage factor relates the change in electrical resistance to the change in strain. Refer to the sensor documentation for this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'StrainGageGageFactor',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2452,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIStrainGageGageFactor',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Strain:Strain Gage:Gage Factor',
                'lvMenuWeight': 3700.0,
                'name': 'AI.StrainGage.GageFactor',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_StrainGage_PoissonRatio',
                'description': 'Specifies the ratio of lateral strain to axial strain in the material you are measuring.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'StrainGagePoissonRatio',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2456,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIStrainGagePoissonRatio',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Strain:Strain Gage:Poisson Ratio',
                'lvMenuWeight': 3800.0,
                'name': 'AI.StrainGage.PoissonRatio',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIStrainGageConfiguration',
                'cviName': 'AI_StrainGage_Cfg',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'measfunds.chm::/bridgeConfig.html\');">bridge configuration</see> of the strain gages.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIStrainGageConfiguration',
                'dotNetName': 'StrainGageConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2434,
                'internalDataType': 'enum tStrainGageBridgeType',
                'internalDescription': '',
                'internalName': 'AIStrainGageCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum StrainGageBridgeType1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Strain:Strain Gage:Configuration',
                'lvMenuWeight': 3900.0,
                'name': 'AI.StrainGage.Cfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_RosetteStrainGage_RosetteType',
                'description': 'Indicates the type of rosette gage.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIRosetteType',
                'dotNetName': 'RosetteType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12286,
                'internalDataType': 'enum tStrainGageRosetteType',
                'internalDescription': '',
                'internalName': 'AIRosetteStrainGageRosetteType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum StrainGageRosetteType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Rosette Strain Gage:Rosette Type',
                'lvMenuWeight': 4000.0,
                'name': 'AI.RosetteStrainGage.RosetteType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_RosetteStrainGage_Orientation',
                'description': 'Specifies gage orientation in degrees with respect to the X axis.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RosetteStrainGageOrientation',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12284,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIRosetteStrainGageOrientation',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Rosette Strain Gage:Gage Orientation',
                'lvMenuWeight': 4100.0,
                'name': 'AI.RosetteStrainGage.GageOrientation',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_RosetteStrainGage_StrainChans',
                'description': 'Indicates the raw strain channels that comprise the strain rosette.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RosetteStrainChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12283,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'AIRosetteStrainGageStrainChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Rosette Strain Gage:Strain Channels',
                'lvMenuWeight': 4200.0,
                'name': 'AI.RosetteStrainGage.StrainChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_RosetteStrainGage_RosetteMeasType',
                'description': 'Specifies the type of rosette measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIRosetteMeasurementType',
                'dotNetName': 'RosetteMeasurementType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12285,
                'internalDataType': 'enum tStrainGageRosetteMeasurementType',
                'internalDescription': '',
                'internalName': 'AIRosetteStrainGageRosetteMeasType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum StrainGageRosetteMeasurementType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Rosette Strain Gage:Rosette Measurement Type',
                'lvMenuWeight': 4300.0,
                'name': 'AI.RosetteStrainGage.RosetteMeasType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIResistanceUnits',
                'cviName': 'AI_Resistance_Units',
                'description': 'Specifies the units to use to return resistance measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIResistanceUnits',
                'dotNetName': 'ResistanceUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2389,
                'internalDataType': 'enum tResistanceUnits',
                'internalDescription': '',
                'internalName': 'AIResistanceUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ResistanceUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Resistance:Units',
                'lvMenuWeight': 4400.0,
                'name': 'AI.Resistance.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIFrequencyUnits',
                'cviName': 'AI_Freq_Units',
                'description': 'Specifies the units to use to return frequency measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIFrequencyUnits',
                'dotNetName': 'FrequencyUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2054,
                'internalDataType': 'enum tFrequencyUnits',
                'internalDescription': '',
                'internalName': 'AIFreqUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FrequencyUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Frequency:Units',
                'lvMenuWeight': 4500.0,
                'name': 'AI.Freq.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Freq_ThreshVoltage',
                'description': 'Specifies the voltage level at which to recognize waveform repetitions. You should select a voltage level that occurs only once within the entire period of a waveform. You also can select a voltage that occurs only once while the voltage rises or falls.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyThresholdVoltage',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2069,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIFreqThreshVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Frequency:Voltage:Threshold Level',
                'lvMenuWeight': 4700.0,
                'name': 'AI.Freq.ThreshVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Freq_Hyst',
                'description': 'Specifies in volts a window below &attr815;. The input voltage must pass below &attr815; minus this value before NI-DAQmx recognizes a waveform repetition at &attr815;. Hysteresis can improve the measurement accuracy when the signal contains noise or jitter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyHysteresis',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2068,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIFreqHyst',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Frequency:Voltage:Hysteresis',
                'lvMenuWeight': 4800.0,
                'name': 'AI.Freq.Hyst',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AILvdtUnits',
                'cviName': 'AI_LVDT_Units',
                'description': 'Specifies the units to use to return linear position measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AILvdtUnits',
                'dotNetName': 'LvdtUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2320,
                'internalDataType': 'enum tLengthUnits',
                'internalDescription': '',
                'internalName': 'AILVDTUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LengthUnits2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Position:LVDT:Units',
                'lvMenuWeight': 4900.0,
                'name': 'AI.LVDT.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_LVDT_Sensitivity',
                'description': 'Specifies the sensitivity of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/LVDTs.html\');">LVDT</see>. This value is in the units you specify with &attr219A;. Refer to the sensor documentation to determine this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LvdtSensitivity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2361,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AILVDTSensitivity',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Position:LVDT:Sensitivity',
                'lvMenuWeight': 5000.0,
                'name': 'AI.LVDT.Sensitivity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AILvdtSensitivityUnits',
                'cviName': 'AI_LVDT_SensitivityUnits',
                'description': 'Specifies the units of &attr939;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AILvdtSensitivityUnits',
                'dotNetName': 'LvdtSensitivityUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8602,
                'internalDataType': 'enum tLVDTSensitivityUnits',
                'internalDescription': '',
                'internalName': 'AILVDTSensitivityUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LVDTSensitivityUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Position:LVDT:Sensitivity Units',
                'lvMenuWeight': 5100.0,
                'name': 'AI.LVDT.SensitivityUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIRvdtUnits',
                'cviName': 'AI_RVDT_Units',
                'description': 'Specifies the units to use to return angular position measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIRvdtUnits',
                'dotNetName': 'RvdtUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2167,
                'internalDataType': 'enum tAngleUnits',
                'internalDescription': '',
                'internalName': 'AIRVDTUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AngleUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Position:RVDT:Units',
                'lvMenuWeight': 5200.0,
                'name': 'AI.RVDT.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_RVDT_Sensitivity',
                'description': 'Specifies the sensitivity of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/RVDTs.html\');">RVDT</see>. This value is in the units you specify with &attr219B;. Refer to the sensor documentation to determine this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RvdtSensitivity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2307,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIRVDTSensitivity',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Position:RVDT:Sensitivity',
                'lvMenuWeight': 5300.0,
                'name': 'AI.RVDT.Sensitivity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIRvdtSensitivityUnits',
                'cviName': 'AI_RVDT_SensitivityUnits',
                'description': 'Specifies the units of &attr903;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIRvdtSensitivityUnits',
                'dotNetName': 'RvdtSensitivityUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8603,
                'internalDataType': 'enum tRVDTSensitivityUnits',
                'internalDescription': '',
                'internalName': 'AIRVDTSensitivityUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum RVDTSensitivityUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Position:RVDT:Sensitivity Units',
                'lvMenuWeight': 5400.0,
                'name': 'AI.RVDT.SensitivityUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIEddyCurrentProximityProbeUnits',
                'cviName': 'AI_EddyCurrentProxProbe_Units',
                'description': 'Specifies the units to use to return proximity measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIEddyCurrentProximityProbeUnits',
                'dotNetName': 'EddyCurrentProximityProbeUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10944,
                'internalDataType': 'enum tLengthUnits',
                'internalDescription': '',
                'internalName': 'AIEddyCurrentProxProbeUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LengthUnits2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Position:Eddy Current Proximity Probe:Units',
                'lvMenuWeight': 5500.0,
                'name': 'AI.EddyCurrentProx.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.9.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_EddyCurrentProxProbe_Sensitivity',
                'description': 'Specifies the sensitivity of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/EddyCurrentProximityProbe.html\');">eddy current proximity probe</see> . This value is in the units you specify with &attr2ABF;. Refer to the sensor documentation to determine this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EddyCurrentProximityProbeSensitivity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10942,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIEddyCurrentProxProbeSensitivity',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Position:Eddy Current Proximity Probe:Sensitivity',
                'lvMenuWeight': 5600.0,
                'name': 'AI.EddyCurrentProx.Sensitivity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.9.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIEddyCurrentProximityProbeSensitivityUnits',
                'cviName': 'AI_EddyCurrentProxProbe_SensitivityUnits',
                'description': 'Specifies the units of &attr2ABE;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIEddyCurrentProximityProbeSensitivityUnits',
                'dotNetName': 'EddyCurrentProximityProbeSensitivityUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10943,
                'internalDataType': 'enum tEddyCurrentProxProbeSensitivityUnits',
                'internalDescription': '',
                'internalName': 'AIEddyCurrentProxProbeSensitivityUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum EddyCurrentProxProbeSensitivityUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Position:Eddy Current Proximity Probe:Sensitivity Units',
                'lvMenuWeight': 5700.0,
                'name': 'AI.EddyCurrentProx.SensitivityUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.9.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_SoundPressure_MaxSoundPressureLvl',
                'description': 'Specifies the maximum instantaneous sound pressure level you expect to measure. This value is in decibels, referenced to 20 micropascals. NI-DAQmx uses the maximum sound pressure level to calculate values in pascals for &attr17DD; and &attr17DE; for the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MaximumSoundPressureLevel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8762,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIMaxSoundPressureLvl',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Sound Pressure:Maximum Sound Pressure Level',
                'lvMenuWeight': 5800.0,
                'name': 'AI.SoundPressure.MaxSoundPressureLvl',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AISoundPressureUnits',
                'cviName': 'AI_SoundPressure_Units',
                'description': 'Specifies the units to use to return sound pressure measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AISoundPressureUnits',
                'dotNetName': 'SoundPressureUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 5416,
                'internalDataType': 'enum tSoundPressureUnits',
                'internalDescription': '',
                'internalName': 'AISoundPressureUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SoundPressureUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Sound Pressure:Units',
                'lvMenuWeight': 5900.0,
                'name': 'AI.SoundPressure.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_SoundPressure_dBRef',
                'description': 'Specifies the decibel reference level in the units of the channel. When you read samples as a waveform, the decibel reference level is included in the waveform attributes. NI-DAQmx also uses the decibel reference level when converting &attr223A; to a voltage level.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SoundPressureDecibelReference',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10673,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AISoundPressuredBRef',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Sound Pressure:dB Reference',
                'lvMenuWeight': 6000.0,
                'name': 'AI.SoundPressure.dBRef',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Microphone_Sensitivity',
                'description': 'Specifies the sensitivity of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/microphones.html\');">microphone</see>. This value is in mV/Pa. Refer to the sensor documentation to determine this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MicrophoneSensitivity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 5430,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIMicrophoneSensitivity',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Sound Pressure:Microphone:Sensitivity',
                'lvMenuWeight': 6100.0,
                'name': 'AI.Microphone.Sensitivity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIAccelerationUnits',
                'cviName': 'AI_Accel_Units',
                'description': 'Specifies the units to use to return acceleration measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIAccelerationUnits',
                'dotNetName': 'AccelerationUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 1651,
                'internalDataType': 'enum tAccelUnits',
                'internalDescription': '',
                'internalName': 'AIAccelUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AccelUnits2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Acceleration:Units',
                'lvMenuWeight': 6200.0,
                'name': 'AI.Accel.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Accel_dBRef',
                'description': 'Specifies the decibel reference level in the units of the channel. When you read samples as a waveform, the decibel reference level is included in the waveform attributes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AccelerationDecibelReference',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10674,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIAcceldBRef',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Acceleration:dB Reference',
                'lvMenuWeight': 6300.0,
                'name': 'AI.Accel.dBRef',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Accel_4WireDCVoltage_Sensitivity',
                'description': 'Specifies the sensitivity of the 4 wire DC voltage acceleration sensor connected to the channel. This value is the units you specify with AI.Accel.4WireDCVoltage.SensitivityUnits. Refer to the sensor documentation to determine this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AccelerationFourWireDCVoltageSensitivity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AI4WireDCVoltage',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12565,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIAccel4WireDCVoltageSensitivity',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Acceleration:4 Wire DC Voltage:Sensitivity',
                'lvMenuWeight': 6330.0,
                'name': 'AI.Accel.4WireDCVoltage.Sensitivity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_1_AI4WireDCVoltage.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Accel_4WireDCVoltage_SensitivityUnits',
                'description': 'Specifies the units of AI.Accel.4WireDCVoltage.Sensitivity.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIAccelerationFourWireDCVoltageSensitivityUnits',
                'dotNetName': 'AccelerationFourWireDCVoltageSensitivityUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AI4WireDCVoltage',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12566,
                'internalDataType': 'enum tAccelSensitivityUnits',
                'internalDescription': '',
                'internalName': 'AIAccel4WireDCVoltageSensitivityUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AccelSensitivityUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Acceleration:4 Wire DC Voltage:Sensitivity Units',
                'lvMenuWeight': 6360.0,
                'name': 'AI.Accel.4WireDCVoltage.SensitivityUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_1_AI4WireDCVoltage.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Accel_Sensitivity',
                'description': 'Specifies the sensitivity of the <see href="javascript:launchSharedHelp(\'measfunds.chm::/Accelerometers.html\');">accelerometer</see>. This value is in the units you specify with &attr219C;. Refer to the sensor documentation to determine this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AccelerometerSensitivity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 1682,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIAccelSensitivity',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Acceleration:Accelerometer:Sensitivity',
                'lvMenuWeight': 6400.0,
                'name': 'AI.Accel.Sensitivity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIAccelerometerSensitivityUnits',
                'cviName': 'AI_Accel_SensitivityUnits',
                'description': 'Specifies the units of &attr692;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIAccelerometerSensitivityUnits',
                'dotNetName': 'AccelerometerSensitivityUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8604,
                'internalDataType': 'enum tAccelSensitivityUnits',
                'internalDescription': '',
                'internalName': 'AIAccelSensitivityUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AccelSensitivityUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Acceleration:Accelerometer:Sensitivity Units',
                'lvMenuWeight': 6500.0,
                'name': 'AI.Accel.SensitivityUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Accel_Charge_Sensitivity',
                'description': 'Specifies the sensitivity of the charge acceleration sensor connected to the channel. This value is the units you specify with AI.Accel.Charge.SensitivityUnits. Refer to the sensor documentation to determine this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AccelerationChargeSensitivity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AICharge',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12563,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIAccelChargeSensitivity',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Acceleration:Charge:Sensitivity',
                'lvMenuWeight': 6530.0,
                'name': 'AI.Accel.Charge.Sensitivity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_0_AICharge.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Accel_Charge_SensitivityUnits',
                'description': 'Specifies the units of AI.Accel.Charge.Sensitivity.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIAccelerationChargeSensitivityUnits',
                'dotNetName': 'AccelerationChargeSensitivityUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AICharge',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12564,
                'internalDataType': 'enum tAccelChargeSensitivityUnits',
                'internalDescription': '',
                'internalName': 'AIAccelChargeSensitivityUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AccelChargeSensitivityUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Acceleration:Charge:Sensitivity Units',
                'lvMenuWeight': 6560.0,
                'name': 'AI.Accel.Charge.SensitivityUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_0_AICharge.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Velocity_Units',
                'description': 'Specifies in which unit to return velocity measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIVelocityUnits',
                'dotNetName': 'VelocityUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12276,
                'internalDataType': 'enum tVelocityUnits',
                'internalDescription': '',
                'internalName': 'AIVelocityUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum VelocityUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Velocity:Units',
                'lvMenuWeight': 6600.0,
                'name': 'AI.Velocity.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Velocity_IEPESensor_dBRef',
                'description': 'Specifies the decibel reference level in the units of the channel. When you read samples as a waveform, the decibel reference level is included in the waveform attributes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityIepeSensorDecibelReference',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12277,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIVelocityIEPESensordBRef',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Velocity:IEPE Sensor:dB Reference',
                'lvMenuWeight': 6700.0,
                'name': 'AI.Velocity.IEPESensor.dBRef',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Velocity_IEPESensor_Sensitivity',
                'description': 'Specifies the sensitivity of the IEPE velocity sensor connected to the channel. Specify this value in the unit indicated by &attr2FF7;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityIepeSensorSensitivity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12278,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIVelocityIEPESensorSensitivity',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Velocity:IEPE Sensor:Sensitivity',
                'lvMenuWeight': 6800.0,
                'name': 'AI.Velocity.IEPESensor.Sensitivity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Velocity_IEPESensor_SensitivityUnits',
                'description': 'Specifies the units for &attr2FF6;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIVelocityIepeSensorSensitivityUnits',
                'dotNetName': 'VelocityIepeSensorSensitivityUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12279,
                'internalDataType': 'enum tVelocityIEPESensorSensitivityUnits',
                'internalDescription': '',
                'internalName': 'AIVelocityIEPESensorSensitivityUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum VelocityIEPESensorSensitivityUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Velocity:IEPE Sensor:Sensitivity Units',
                'lvMenuWeight': 6900.0,
                'name': 'AI.Velocity.IEPESensor.SensitivityUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIForceUnits',
                'cviName': 'AI_Force_Units',
                'description': 'Specifies in which unit to return force or load measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIForceUnits',
                'dotNetName': 'ForceUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12149,
                'internalDataType': 'enum tForceUnits',
                'internalDescription': '',
                'internalName': 'AIForceUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ForceUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Force:Units',
                'lvMenuWeight': 7000.0,
                'name': 'AI.Force.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIForceIepeSensorSensitivity',
                'cviName': 'AI_Force_IEPESensor_Sensitivity',
                'description': 'Specifies the sensitivity of the IEPE force sensor connected to the channel. Specify this value in the unit indicated by &attr2F82;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIForceIepeSensorSensitivity',
                'dotNetName': 'ForceIepeSensorSensitivity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12161,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIForceIEPESensorSensitivity',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Force:IEPE Sensor:Sensitivity',
                'lvMenuWeight': 7100.0,
                'name': 'AI.Force.IEPESensor.Sensitivity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIForceIepeSensorSensitivityUnits',
                'cviName': 'AI_Force_IEPESensor_SensitivityUnits',
                'description': 'Specifies the units for &attr2F81;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIForceIepeSensorSensitivityUnits',
                'dotNetName': 'ForceIepeSensorSensitivityUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12162,
                'internalDataType': 'enum tForceIEPESensorSensitivityUnits',
                'internalDescription': '',
                'internalName': 'AIForceIEPESensorSensitivityUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ForceIEPESensorSensitivityUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Force:IEPE Sensor:Sensitivity Units',
                'lvMenuWeight': 7200.0,
                'name': 'AI.Force.IEPESensor.SensitivityUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIPressureUnits',
                'cviName': 'AI_Pressure_Units',
                'description': 'Specifies  in which unit to return pressure measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIPressureUnits',
                'dotNetName': 'PressureUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12150,
                'internalDataType': 'enum tPressureUnits',
                'internalDescription': '',
                'internalName': 'AIPressureUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum PressureUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Pressure:Units',
                'lvMenuWeight': 7300.0,
                'name': 'AI.Pressure.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AITorqueUnits',
                'cviName': 'AI_Torque_Units',
                'description': 'Specifies in which unit to return torque measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AITorqueUnits',
                'dotNetName': 'TorqueUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12151,
                'internalDataType': 'enum tTorqueUnits',
                'internalDescription': '',
                'internalName': 'AITorqueUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TorqueUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Torque:Units',
                'lvMenuWeight': 7400.0,
                'name': 'AI.Torque.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeUnits',
                'cviName': 'AI_Bridge_Units',
                'description': 'Specifies in which unit to return <see href="javascript:launchSharedHelp(\'measfunds.chm::/bridgeScaling.html\')">voltage ratios</see> from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeUnits',
                'dotNetName': 'BridgeUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12178,
                'internalDataType': 'enum tBridgeUnits',
                'internalDescription': '',
                'internalName': 'AIBridgeUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum BridgeUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Units',
                'lvMenuWeight': 7500.0,
                'name': 'AI.Bridge.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeElectricalUnits',
                'cviName': 'AI_Bridge_ElectricalUnits',
                'description': 'Specifies from which electrical unit to scale data. Select  the same unit that the sensor data sheet or calibration certificate uses for electrical values.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeElectricalUnits',
                'dotNetName': 'BridgeElectricalUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12167,
                'internalDataType': 'enum tBridgeElectricalUnits',
                'internalDescription': '',
                'internalName': 'AIBridgeElectricalUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum BridgeElectricalUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Scaling Parameters:Electrical Units',
                'lvMenuWeight': 7600.0,
                'name': 'AI.Bridge.ElectricalUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgePhysicalUnits',
                'cviName': 'AI_Bridge_PhysicalUnits',
                'description': 'Specifies to which physical unit to scale electrical data. Select the same unit that the sensor data sheet or calibration certificate uses for physical values.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgePhysicalUnits',
                'dotNetName': 'BridgePhysicalUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12168,
                'internalDataType': 'enum tBridgePhysicalUnits',
                'internalDescription': '',
                'internalName': 'AIBridgePhysicalUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum BridgePhysicalUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Scaling Parameters:Physical Units',
                'lvMenuWeight': 7700.0,
                'name': 'AI.Bridge.PhysicalUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeScaleType',
                'cviName': 'AI_Bridge_ScaleType',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'measfunds.chm::/bridgeScalingTypes.html\')">scaling type</see> to use when scaling electrical values from the sensor to physical units.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeScaleType',
                'dotNetName': 'BridgeScaleType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12169,
                'internalDataType': 'enum tScaleType',
                'internalDescription': '',
                'internalName': 'AIBridgeScaleType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ScaleType4:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Scaling Parameters:Scale Type',
                'lvMenuWeight': 7800.0,
                'name': 'AI.Bridge.ScaleType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeTwoPointLinearFirstElectricalValue',
                'cviName': 'AI_Bridge_TwoPointLin_First_ElectricalVal',
                'description': 'Specifies the first electrical value, corresponding to &attr2F8B;. Specify this value in the unit indicated by &attr2F87;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeTwoPointLinearFirstElectricalValue',
                'dotNetName': 'BridgeTwoPointLinearFirstElectricalValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12170,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeTwoPointLinFirstElectricalVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Scaling Parameters:Two-Point Linear:First:Electrical Value',
                'lvMenuWeight': 7900.0,
                'name': 'AI.Bridge.TwoPointLin.First.ElectricalVal',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeTwoPointLinearFirstPhysicalValue',
                'cviName': 'AI_Bridge_TwoPointLin_First_PhysicalVal',
                'description': 'Specifies the first physical value, corresponding to &attr2F8A;. Specify this value in the unit indicated by &attr2F88;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeTwoPointLinearFirstPhysicalValue',
                'dotNetName': 'BridgeTwoPointLinearFirstPhysicalValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12171,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeTwoPointLinFirstPhysicalVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Scaling Parameters:Two-Point Linear:First:Physical Value',
                'lvMenuWeight': 8000.0,
                'name': 'AI.Bridge.TwoPointLin.First.PhysicalVal',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeTwoPointLinearSecondElectricalValue',
                'cviName': 'AI_Bridge_TwoPointLin_Second_ElectricalVal',
                'description': 'Specifies the second electrical value, corresponding to &attr2F8D;. Specify this value in the unit indicated by &attr2F87;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeTwoPointLinearSecondElectricalValue',
                'dotNetName': 'BridgeTwoPointLinearSecondElectricalValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12172,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeTwoPointLinSecondElectricalVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Scaling Parameters:Two-Point Linear:Second:Electrical Value',
                'lvMenuWeight': 8100.0,
                'name': 'AI.Bridge.TwoPointLin.Second.ElectricalVal',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeTwoPointLinearSecondPhysicalValue',
                'cviName': 'AI_Bridge_TwoPointLin_Second_PhysicalVal',
                'description': 'Specifies the second physical value, corresponding to &attr2F8C;. Specify this value in the unit indicated by &attr2F88;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeTwoPointLinearSecondPhysicalValue',
                'dotNetName': 'BridgeTwoPointLinearSecondPhysicalValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12173,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeTwoPointLinSecondPhysicalVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Scaling Parameters:Two-Point Linear:Second:Physical Value',
                'lvMenuWeight': 8200.0,
                'name': 'AI.Bridge.TwoPointLin.Second.PhysicalVal',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeTableElectricalValues',
                'cviName': 'AI_Bridge_Table_ElectricalVals',
                'description': 'Specifies the array of electrical values that map to the values in &attr2F8F;. Specify this value in the unit indicated by &attr2F87;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeTableElectricalValues',
                'dotNetName': 'BridgeTableElectricalValues',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12174,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIBridgeTableElectricalVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Scaling Parameters:Table:Electrical Values',
                'lvMenuWeight': 8300.0,
                'name': 'AI.Bridge.Table.ElectricalVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeTablePhysicalValues',
                'cviName': 'AI_Bridge_Table_PhysicalVals',
                'description': 'Specifies the array of physical values that map to the values in &attr2F8E;. Specify this value in the unit indicated by &attr2F88;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeTablePhysicalValues',
                'dotNetName': 'BridgeTablePhysicalValues',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12175,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIBridgeTablePhysicalVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Scaling Parameters:Table:Physical Values',
                'lvMenuWeight': 8400.0,
                'name': 'AI.Bridge.Table.PhysicalVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgePolynomialForwardCoefficients',
                'cviName': 'AI_Bridge_Poly_ForwardCoeff',
                'description': 'Specifies an array of coefficients for the polynomial that converts electrical values to physical values. Each element of the array corresponds to a term of the equation. For example, if index three of the array is 9, the fourth term of the equation is 9x^3.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgePolynomialForwardCoefficients',
                'dotNetName': 'BridgePolynomialForwardCoefficients',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12176,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIBridgePolyForwardCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Scaling Parameters:Polynomial:Forward Coefficients',
                'lvMenuWeight': 8500.0,
                'name': 'AI.Bridge.Poly.ForwardCoeff',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgePolynomialReverseCoefficients',
                'cviName': 'AI_Bridge_Poly_ReverseCoeff',
                'description': 'Specifies an array of coefficients for the polynomial that converts physical values to electrical values. Each element of the array corresponds to a term of the equation. For example, if index three of the array is 9, the fourth term of the equation is 9x^3.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgePolynomialReverseCoefficients',
                'dotNetName': 'BridgePolynomialReverseCoefficients',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12177,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIBridgePolyReverseCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Bridge:Scaling Parameters:Polynomial:Reverse Coefficients',
                'lvMenuWeight': 8600.0,
                'name': 'AI.Bridge.Poly.ReverseCoeff',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Charge_Units',
                'description': 'Specifies the units to use to return charge measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIChargeUnits',
                'dotNetName': 'ChargeUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AICharge',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12562,
                'internalDataType': 'enum tChargeUnits',
                'internalDescription': '',
                'internalName': 'AIChargeUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ChargeUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:Charge:Units',
                'lvMenuWeight': 8650.0,
                'name': 'AI.Charge.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_0_AICharge.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Is_TEDS',
                'description': 'Indicates if the virtual channel was initialized using a TEDS bitstream from the corresponding physical channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'IsTeds',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10627,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIIsTEDS',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:TEDS:Is TEDS',
                'lvMenuWeight': 8700.0,
                'name': 'AI.TEDS.IsTEDS',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_TEDS_Units',
                'description': 'Indicates the units defined by TEDS information associated with the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TedsUnits',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Channel',
                'id': 8672,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AITEDSUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:TEDS:Units',
                'lvMenuWeight': 8800.0,
                'name': 'AI.TEDS.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AICoupling',
                'cviName': 'AI_Coupling',
                'description': 'Specifies the coupling for the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AICoupling',
                'dotNetName': 'Coupling',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 100,
                'internalDataType': 'enum tCoupling',
                'internalDescription': '',
                'internalName': 'AICoupling',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Coupling1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Input Configuration:Coupling',
                'lvMenuWeight': 8900.0,
                'name': 'AI.Coupling',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Impedance',
                'description': 'Specifies the input impedance of the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Impedance',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 98,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIImpedance',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Impedance1:fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Input Configuration:Impedance',
                'lvMenuWeight': 9000.0,
                'name': 'AI.Impedance',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AITerminalConfiguration',
                'cviName': 'AI_TermCfg',
                'description': 'Specifies the terminal configuration for the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AITerminalConfiguration',
                'dotNetName': 'TerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4247,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'AITermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Input Configuration:Terminal Configuration',
                'lvMenuWeight': 9100.0,
                'name': 'AI.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_InputSrc',
                'description': 'Specifies the source of the channel. You can use the signal from the I/O connector or one of several calibration signals. Certain devices have a single calibration signal bus. For these devices, you must specify the same calibration signal for all channels you connect to a calibration signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'InputSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8600,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AIInputSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Input Configuration:Input Source',
                'lvMenuWeight': 9200.0,
                'name': 'AI.InputSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIResistanceConfiguration',
                'cviName': 'AI_ResistanceCfg',
                'description': 'Specifies the resistance configuration for the channel. NI-DAQmx uses this value for any resistance-based measurements, including temperature measurement using a thermistor or RTD.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIResistanceConfiguration',
                'dotNetName': 'ResistanceConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6273,
                'internalDataType': 'enum tResistanceConfiguration',
                'internalDescription': '',
                'internalName': 'AIResistanceCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ResistanceConfiguration:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Resistance Configuration',
                'lvMenuWeight': 9300.0,
                'name': 'AI.ResistanceCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_LeadWireResistance',
                'description': 'Specifies in ohms the resistance of the wires that lead to the sensor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LeadWireResistance',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6126,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AILeadWireResistance',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Lead Wire Resistance',
                'lvMenuWeight': 9400.0,
                'name': 'AI.LeadWireResistance',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeConfiguration',
                'cviName': 'AI_Bridge_Cfg',
                'description': 'Specifies the type of Wheatstone bridge connected to the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeConfiguration',
                'dotNetName': 'BridgeConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 135,
                'internalDataType': 'enum tBridgeConfiguration',
                'internalDescription': '',
                'internalName': 'AIBridgeCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum BridgeConfiguration1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Configuration',
                'lvMenuWeight': 9500.0,
                'name': 'AI.Bridge.Cfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_NomResistance',
                'description': 'Specifies in ohms the resistance of the bridge while not under load.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'BridgeNominalResistance',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6124,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeNomResistance',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Nominal Resistance',
                'lvMenuWeight': 9600.0,
                'name': 'AI.Bridge.NomResistance',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_InitialVoltage',
                'description': 'Specifies in volts the output voltage of the bridge while not under load. NI-DAQmx subtracts this value from any measurements before applying scaling equations.  If you set &attr2F86;, NI-DAQmx coerces this property to &attr2F86; times &attr1883;. This property is set by DAQmx Perform Bridge Offset Nulling Calibration. If you set this property, NI-DAQmx coerces &attr2F86; to the value of this property divided by &attr1883;. If you set both this property and &attr2F86;, and their values conflict, NI-DAQmx returns an error. To avoid this error, reset one property to its default value before setting the other.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'BridgeInitialVoltage',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6125,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeInitialVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Initial Bridge Voltage',
                'lvMenuWeight': 9700.0,
                'name': 'AI.Bridge.InitialVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeInitialRatio',
                'cviName': 'AI_Bridge_InitialRatio',
                'description': 'Specifies in volts per volt the ratio of output voltage from the bridge to excitation voltage supplied to the bridge while not under load. NI-DAQmx subtracts this value from any measurements before applying scaling equations. If you set &attr17ED;, NI-DAQmx coerces this property  to &attr17ED; divided by &attr1883;. If you set this property, NI-DAQmx coerces &attr17ED; to the value of this property times &attr1883;. If you set both this property and &attr17ED;, and their values conflict, NI-DAQmx returns an error.  To avoid this error, reset one property to its default value before setting the other.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeInitialRatio',
                'dotNetName': 'BridgeInitialRatio',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12166,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeInitialRatio',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Initial Bridge Ratio',
                'lvMenuWeight': 9800.0,
                'name': 'AI.Bridge.InitialRatio',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_ShuntCal_Enable',
                'description': 'Specifies whether to enable a shunt calibration switch. Use &attr21D5; to select the switch(es) to enable.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'BridgeShuntCalibrationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 148,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIBridgeShuntCalEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal Enable',
                'lvMenuWeight': 9900.0,
                'name': 'AI.Bridge.ShuntCal.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIBridgeShuntCalibrationSelect',
                'cviName': 'AI_Bridge_ShuntCal_Select',
                'description': 'Specifies which shunt calibration switch(es) to enable.  Use &attr94; to enable the switch(es) you specify with this property.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIBridgeShuntCalibrationSelect',
                'dotNetName': 'BridgeShuntCalibrationSelect',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8661,
                'internalDataType': 'enum tShuntCalSelect',
                'internalDescription': '',
                'internalName': 'AIBridgeShuntCalSelect',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ShuntCalSelect:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal Select',
                'lvMenuWeight': 10000.0,
                'name': 'AI.Bridge.ShuntCal.Select',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_ShuntCal_ShuntCalASrc',
                'description': 'Specifies whether to use internal or external shunt when Shunt Cal A is selected.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'BridgeShuntCalibrationSource',
                'dotNetName': 'BridgeShuntCalibrationASource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'ShuntCalASrc',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12490,
                'internalDataType': 'enum tBridgeShuntCalSource',
                'internalDescription': '',
                'internalName': 'AIBridgeShuntCalShuntCalASource',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum BridgeShuntCalSource:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal A Source',
                'lvMenuWeight': 10050.0,
                'name': 'AI.Bridge.ShuntCal.ShuntCalASrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_9_ShuntCalASrc.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_ShuntCal_ShuntCalBSrc',
                'description': 'Specifies whether to use an internal or external shunt when Shunt Cal B is selected.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'BridgeShuntCalibrationSource',
                'dotNetName': 'BridgeShuntCalibrationBSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'ShuntCalBSrc',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12535,
                'internalDataType': 'enum tBridgeShuntCalSource',
                'internalDescription': '',
                'internalName': 'AIBridgeShuntCalShuntCalBSource',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum BridgeShuntCalSource:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal B Source',
                'lvMenuWeight': 10060.0,
                'name': 'AI.Bridge.ShuntCal.ShuntCalBSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_4_ShuntCalBSrc.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_ShuntCal_GainAdjust',
                'description': 'Specifies the result of a shunt calibration. This property is set by DAQmx Perform Shunt Calibration. NI-DAQmx multiplies data read from the channel by the value of this property. This value should be close to 1.0.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'BridgeShuntCalibrationGainAdjust',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6463,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeShuntCalGainAdjust',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Gain Adjustment',
                'lvMenuWeight': 10100.0,
                'name': 'AI.Bridge.ShuntCal.GainAdjust',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_ShuntCal_ShuntCalAResistance',
                'description': 'Specifies in ohms the desired value of the internal shunt calibration A resistor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'BridgeShuntCalibrationAResistance',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12152,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeShuntCalShuntCalAResistance',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal A Resistor Value',
                'lvMenuWeight': 10200.0,
                'name': 'AI.Bridge.ShuntCal.ShuntCalAResistance',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_ShuntCal_ShuntCalAActualResistance',
                'description': 'Specifies in ohms the actual value of the internal shunt calibration A resistor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'BridgeShuntCalibrationAActualResistance',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12153,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeShuntCalShuntCalAActualResistance',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal A Actual Resistor Value',
                'lvMenuWeight': 10300.0,
                'name': 'AI.Bridge.ShuntCal.ShuntCalAActualResistance',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_ShuntCal_ShuntCalBResistance',
                'description': 'Specifies in ohms the desired value of the internal shunt calibration B resistor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'BridgeShuntCalibrationBResistance',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12154,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeShuntCalShuntCalBResistance',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal B Resistor Value',
                'lvMenuWeight': 10400.0,
                'name': 'AI.Bridge.ShuntCal.ShuntCalBResistance',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_ShuntCal_ShuntCalBActualResistance',
                'description': 'Specifies in ohms the actual value of the internal shunt calibration B resistor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'BridgeShuntCalibrationBActualResistance',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12155,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBridgeShuntCalShuntCalBActualResistance',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Shunt Cal:Shunt Cal B Actual Resistor Value',
                'lvMenuWeight': 10500.0,
                'name': 'AI.Bridge.ShuntCal.ShuntCalBActualResistance',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_Balance_CoarsePot',
                'description': 'Specifies by how much to compensate for offset in the signal. This value can be between 0 and 127.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'BridgeBalanceCoarsePot',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6129,
                'internalDataType': 'i32',
                'internalDescription': '',
                'internalName': 'AIBridgeBalanceCoarsePot',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Balance:Coarse Potentiometer',
                'lvMenuWeight': 10600.0,
                'name': 'AI.Bridge.Balance.CoarsePot',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bridge_Balance_FinePot',
                'description': 'Specifies by how much to compensate for offset in the signal. This value can be between 0 and 4095.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'BridgeBalanceFinePot',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6388,
                'internalDataType': 'i32',
                'internalDescription': '',
                'internalName': 'AIBridgeBalanceFinePot',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Bridge:Balance:Fine Potentiometer',
                'lvMenuWeight': 10700.0,
                'name': 'AI.Bridge.Balance.FinePot',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AICurrentShuntLocation',
                'cviName': 'AI_CurrentShunt_Loc',
                'description': 'Specifies the shunt resistor location for current measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AICurrentShuntLocation',
                'dotNetName': 'CurrentShuntLocation',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6130,
                'internalDataType': 'enum tCurrentShuntResistorLocation',
                'internalDescription': '',
                'internalName': 'AICurrentShuntLoc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum CurrentShuntResistorLocation1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Current Shunt Resistor:Location',
                'lvMenuWeight': 10800.0,
                'name': 'AI.CurrentShunt.Loc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_CurrentShunt_Resistance',
                'description': 'Specifies in ohms the external shunt resistance for current measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CurrentShuntResistance',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6131,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AICurrentShuntResistance',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Current Shunt Resistor:Value',
                'lvMenuWeight': 10900.0,
                'name': 'AI.CurrentShunt.Resistance',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Excit_Sense',
                'description': 'Specifies whether to use local or remote sense to sense excitation.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIExcitationSense',
                'dotNetName': 'ExcitationSense',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AISense',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12541,
                'internalDataType': 'enum tSense',
                'internalDescription': '',
                'internalName': 'AIExcitSense',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Sense:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:Sense',
                'lvMenuWeight': 10950.0,
                'name': 'AI.Excit.Sense',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.5.0_0_AISense.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': 'http://niweb.natinst.com/confluence/pages/viewpage.action?pageId=463407594',
                'supportEnds': 'never',
                'supportStarts': '15.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIExcitationSource',
                'cviName': 'AI_Excit_Src',
                'description': 'Specifies the source of excitation.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIExcitationSource',
                'dotNetName': 'ExcitationSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6132,
                'internalDataType': 'enum tExcitationSource',
                'internalDescription': '',
                'internalName': 'AIExcitSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ExcitationSource:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:Source',
                'lvMenuWeight': 11000.0,
                'name': 'AI.Excit.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Excit_Val',
                'description': 'Specifies the amount of excitation that the sensor requires. If &attr17F6; is  &val17F6.10322;, this value is in volts. If &attr17F6; is  &val17F6.10134;, this value is in amperes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ExcitationValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6133,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIExcitVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:Value',
                'lvMenuWeight': 11100.0,
                'name': 'AI.Excit.Val',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Excit_UseForScaling',
                'description': 'Specifies if NI-DAQmx divides the measurement by the excitation. You should typically set this property to &true; for ratiometric transducers. If you set this property to &true;, set &attr17DD; and &attr17DE; to reflect the scaling.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UseExcitationForScaling',
                'embeddedXMLHelpFiles': 'useexforscaling.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6140,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIExcitUseForScaling',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:Use Excitation For Scaling',
                'lvMenuWeight': 11200.0,
                'name': 'AI.Excit.UseForScaling',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Excit_UseMultiplexed',
                'description': 'Specifies if the SCXI-1122 multiplexes the excitation to the upper half of the channels as it advances through the scan list.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UseMultiplexedExcitation',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8576,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIExcitUseMultiplexed',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:Use Multiplexed Excitation',
                'lvMenuWeight': 11300.0,
                'name': 'AI.Excit.UseMultiplexed',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Excit_ActualVal',
                'description': 'Specifies the actual amount of excitation supplied by an internal excitation source.  If you read an internal excitation source more precisely with an external device, set this property to the value you read.  NI-DAQmx ignores this value for external excitation. When performing shunt calibration, some devices set this property automatically.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ExcitationActualValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6275,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIExcitActualVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:Actual Excitation Value',
                'lvMenuWeight': 11400.0,
                'name': 'AI.Excit.ActualVal',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIExcitation',
                'cviName': 'AI_Excit_DCorAC',
                'description': 'Specifies if the excitation supply is DC or AC.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIExcitationDCOrAC',
                'dotNetName': 'ExcitationDCOrAC',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6139,
                'internalDataType': 'enum tExcitationDCorAC',
                'internalDescription': '',
                'internalName': 'AIExcitDCorAC',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ExcitationDCorAC:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:DC or AC',
                'lvMenuWeight': 11500.0,
                'name': 'AI.Excit.DCorAC',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIExcitation',
                'cviName': 'AI_Excit_VoltageOrCurrent',
                'description': 'Specifies if the channel uses current or voltage excitation.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIExcitationVoltageOrCurrent',
                'dotNetName': 'ExcitationVoltageOrCurrent',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6134,
                'internalDataType': 'enum tExcitationVoltageOrCurrent',
                'internalDescription': '',
                'internalName': 'AIExcitVoltageOrCurrent',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ExcitationVoltageOrCurrent:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:Voltage or Current',
                'lvMenuWeight': 11600.0,
                'name': 'AI.Excit.VoltageOrCurrent',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Excit_IdleOutputBehavior',
                'description': 'Specifies whether this channel will disable excitation after the task is uncommitted. Setting this to Zero Volts or Amps disables excitation after task uncommit. Setting this attribute to Maintain Existing Value leaves the excitation on after task uncommit.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'ExcitationIdleOutputBehavior',
                'dotNetName': 'ExcitationIdleOutputBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': '9218module',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12472,
                'internalDataType': 'enum tExcitationIdleOutputBehavior',
                'internalDescription': '',
                'internalName': 'AIExcitIdleOutputBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ExcitationIdleOutputBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:Advanced:Idle Output Behavior',
                'lvMenuWeight': 11605.0,
                'name': 'AI.Excit.IdleOutputBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_3_9218module.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ACExcit_Freq',
                'description': 'Specifies the AC excitation frequency in Hertz.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ACExcitationFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 257,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIACExcitFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:AC Excitation:Frequency',
                'lvMenuWeight': 11900.0,
                'name': 'AI.ACExcit.Freq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ACExcit_SyncEnable',
                'description': 'Specifies whether to synchronize the AC excitation source of the channel to that of another channel. Synchronize the excitation sources of multiple channels to use multichannel sensors. Set this property to &false; for the master channel and to &true; for the slave channels.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ACExcitationSyncEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 258,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIACExcitSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:AC Excitation:Synchronization Enable',
                'lvMenuWeight': 12000.0,
                'name': 'AI.ACExcit.SyncEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIACExcitationWireMode',
                'cviName': 'AI_ACExcit_WireMode',
                'description': 'Specifies the number of leads on the LVDT or RVDT. Some sensors require you to tie leads together to create a four- or five- wire sensor. Refer to the sensor documentation for more information.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIACExcitationWireMode',
                'dotNetName': 'ACExcitationWireMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6349,
                'internalDataType': 'enum tACExcitWireMode',
                'internalDescription': '',
                'internalName': 'AIACExcitWireMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ACExcitWireMode:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Excitation:AC Excitation:Wire Mode',
                'lvMenuWeight': 12100.0,
                'name': 'AI.ACExcit.WireMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_SensorPower_Voltage',
                'description': "Specifies the voltage level for the sensor's power supply.",
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SensorPowerVoltage',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'PoweredSensorAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12649,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AISensorPowerVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Sensor Power:Voltage',
                'lvMenuWeight': 12170.0,
                'name': 'AI.SensorPower.Voltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_2_PoweredSensorAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_SensorPower_Cfg',
                'description': "Specifies whether to turn on the sensor's power supply or to leave the configuration unchanged.",
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AISensorPowerConfiguration',
                'dotNetName': 'SensorPowerConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'PoweredSensorAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12650,
                'internalDataType': 'enum tSensorPowerCfg',
                'internalDescription': '',
                'internalName': 'AISensorPowerCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SensorPowerCfg:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Sensor Power:Configuration',
                'lvMenuWeight': 12175.0,
                'name': 'AI.SensorPower.Cfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_2_PoweredSensorAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_SensorPower_Type',
                'description': 'Specifies the type of power supplied to the sensor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AISensorPowerType',
                'dotNetName': 'SensorPowerType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'PoweredSensorAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12651,
                'internalDataType': 'enum tSensorPowerType',
                'internalDescription': '',
                'internalName': 'AISensorPowerType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SensorPowerType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Sensor Power:Type',
                'lvMenuWeight': 12180.0,
                'name': 'AI.SensorPower.Type',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_2_PoweredSensorAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_OpenThrmcplDetectEnable',
                'description': 'Specifies whether to apply the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/openThermDet.html\')">open thermocouple detection bias voltage</see> to the channel. Changing the value of this property on a channel may require settling time before the data returned is valid. To compensate for this settling time, discard unsettled data or add a delay between committing and starting the task. Refer to your device specifications for the required settling time. When open thermocouple detection is enabled, use &attr2A96; to determine if any channels were open.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OpenThermocoupleDetectEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12146,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIOpenThrmcplDetectEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Thermocouple:Open Thermocouple Detection Enable',
                'lvMenuWeight': 12200.0,
                'name': 'AI.OpenThrmcplDetectEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Thrmcpl_LeadOffsetVoltage',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/openThermDet.html\');">lead offset nulling</see> voltage to subtract from measurements on a device. This property is ignored if open thermocouple detection is disabled.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ThermocoupleLeadOffsetVoltage',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12216,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIThrmcplLeadOffsetVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Thermocouple:Lead Offset Voltage',
                'lvMenuWeight': 12300.0,
                'name': 'AI.Thrmcpl.LeadOffsetVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Atten',
                'description': 'Specifies the amount of attenuation to use.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Attenuation',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6145,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIAtten',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Attenuation',
                'lvMenuWeight': 12600.0,
                'name': 'AI.Atten',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ProbeAtten',
                'description': 'Specifies the amount of attenuation provided by the probe connected to the channel. Specify this attenuation as a ratio.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ProbeAttenuation',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10888,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIProbeAtten',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Signal Conditioning:Probe Attenuation',
                'lvMenuWeight': 12700.0,
                'name': 'AI.ProbeAtten',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Lowpass_Enable',
                'description': 'Specifies whether to enable the lowpass filter of the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LowpassEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6146,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AILowpassEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Lowpass:Enable',
                'lvMenuWeight': 12800.0,
                'name': 'AI.Lowpass.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Lowpass_CutoffFreq',
                'description': 'Specifies the frequency in Hertz that corresponds to the -3dB cutoff of the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LowpassCutoffFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6147,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AILowpassCutoffFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Lowpass:Cutoff Frequency',
                'lvMenuWeight': 12900.0,
                'name': 'AI.Lowpass.CutoffFreq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AILowpassSwitchedCapacitorClockSource',
                'cviName': 'AI_Lowpass_SwitchCap_ClkSrc',
                'description': 'Specifies the source of the filter clock. If you need a higher resolution for the filter, you can supply an external clock to increase the resolution. Refer to the SCXI-1141/1142/1143 User Manual for more information.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AILowpassSwitchedCapacitorClockSource',
                'dotNetName': 'LowpassSwitchedCapacitorClockSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6276,
                'internalDataType': 'enum tSourceSelection',
                'internalDescription': '',
                'internalName': 'AILowpassSwitchCapClkSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SourceSelection:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Lowpass:Advanced:Switched Capacitor:Clock Source',
                'lvMenuWeight': 13200.0,
                'name': 'AI.Lowpass.SwitchCap.ClkSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Lowpass_SwitchCap_ExtClkFreq',
                'description': 'Specifies the frequency of the external clock when you set &attr1884; to &val1884.10167;.  NI-DAQmx uses this frequency to set the pre- and post- filters on the SCXI-1141, SCXI-1142, and SCXI-1143. On those devices, NI-DAQmx determines the filter cutoff by using the equation f/(100*n), where f is the external frequency, and n is the external clock divisor. Refer to the SCXI-1141/1142/1143 User Manual for more information.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LowpassSwitchedCapacitorExternalClockFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6277,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AILowpassSwitchCapExtClkFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Lowpass:Advanced:Switched Capacitor:External Clock Frequency',
                'lvMenuWeight': 13300.0,
                'name': 'AI.Lowpass.SwitchCap.ExtClkFreq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Lowpass_SwitchCap_ExtClkDiv',
                'description': 'Specifies the divisor for the external clock when you set &attr1884; to &val1884.10167;. On the SCXI-1141, SCXI-1142, and SCXI-1143, NI-DAQmx determines the filter cutoff by using the equation f/(100*n), where f is the external frequency, and n is the external clock divisor. Refer to the SCXI-1141/1142/1143 User Manual for more information.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LowpassSwitchedCapacitorExternalClockDivisor',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6278,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AILowpassSwitchCapExtClkDiv',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Lowpass:Advanced:Switched Capacitor:External Clock Divisor',
                'lvMenuWeight': 13400.0,
                'name': 'AI.Lowpass.SwitchCap.ExtClkDiv',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Lowpass_SwitchCap_OutClkDiv',
                'description': 'Specifies the divisor for the output clock.  NI-DAQmx uses the cutoff frequency to determine the output clock frequency. Refer to the SCXI-1141/1142/1143 User Manual for more information.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LowpassSwitchedCapacitorOutputClockDivisor',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6279,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AILowpassSwitchCapOutClkDiv',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Lowpass:Advanced:Switched Capacitor:Output Clock Divisor',
                'lvMenuWeight': 13500.0,
                'name': 'AI.Lowpass.SwitchCap.OutClkDiv',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Highpass_Enable',
                'description': 'Enables the filter.  Set to false to bypass the filter if supported.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6150,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIHighpassEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Highpass:Enable',
                'lvMenuWeight': 13600.0,
                'name': 'AI.Highpass.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Highpass_CutoffFreq',
                'description': 'The frequency corresponding to the -3dB cutoff of the filter in Hz.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6151,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIHighpassCutoffFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Highpass:Cutoff Frequency',
                'lvMenuWeight': 13700.0,
                'name': 'AI.Highpass.CutoffFreq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Highpass_Type',
                'description': 'The type of filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6152,
                'internalDataType': 'enum tFilterType',
                'internalDescription': '',
                'internalName': 'AIHighpassType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FilterType1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Highpass:Type',
                'lvMenuWeight': 13800.0,
                'name': 'AI.Highpass.Type',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Highpass_Order',
                'description': 'The filter order.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6153,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AIHighpassOrder',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Highpass:Order',
                'lvMenuWeight': 13900.0,
                'name': 'AI.Highpass.Order',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bandpass_Enable',
                'description': 'Enables the filter.  Set to false to bypass the filter if supported.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6155,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIBandpassEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Bandpass:Enable',
                'lvMenuWeight': 14000.0,
                'name': 'AI.Bandpass.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bandpass_CenterFreq',
                'description': 'The center frequency of the filter in Hz.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6156,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBandpassCenterFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Bandpass:Center Frequency',
                'lvMenuWeight': 14100.0,
                'name': 'AI.Bandpass.CenterFreq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bandpass_Type',
                'description': 'The type of filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6157,
                'internalDataType': 'enum tFilterType',
                'internalDescription': '',
                'internalName': 'AIBandpassType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FilterType1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Bandpass:Type',
                'lvMenuWeight': 14200.0,
                'name': 'AI.Bandpass.Type',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Bandpass_Width',
                'description': 'The 3dB width of the filter in Hz.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6158,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIBandpassWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Bandpass:Width',
                'lvMenuWeight': 14300.0,
                'name': 'AI.Bandpass.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Notch_CenterFreq',
                'description': 'The center frequency of the filter in Hz.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6160,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AINotchCenterFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Notch:Center Frequency',
                'lvMenuWeight': 14500.0,
                'name': 'AI.Notch.CenterFreq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Notch_Type',
                'description': 'The type of filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6161,
                'internalDataType': 'enum tFilterType',
                'internalDescription': '',
                'internalName': 'AINotchType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FilterType1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Notch:Type',
                'lvMenuWeight': 14600.0,
                'name': 'AI.Notch.Type',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Notch_Width',
                'description': 'The 3dB width of the filter in Hz.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6162,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AINotchWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Analog Filter:Notch:Width',
                'lvMenuWeight': 14700.0,
                'name': 'AI.Notch.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Enable',
                'description': 'Specifies whether the digital filter is enabled or disabled.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnabled',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12477,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Digital Filter:Enable',
                'lvMenuWeight': 14710.0,
                'name': 'AI.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Type',
                'description': 'Specifies the digital filter type.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'FilterType',
                'dotNetName': 'DigitalFilterType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12478,
                'internalDataType': 'enum tFilterType',
                'internalDescription': '',
                'internalName': 'AIDigFltrType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FilterType2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Digital Filter:Type',
                'lvMenuWeight': 14715.0,
                'name': 'AI.DigFltr.Type',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Response',
                'description': 'Specifies the digital filter response.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'FilterResponse',
                'dotNetName': 'DigitalFilterResponse',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12479,
                'internalDataType': 'enum tFilterResponse',
                'internalDescription': '',
                'internalName': 'AIDigFltrResponse',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FilterResponse:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Digital Filter:Response',
                'lvMenuWeight': 14720.0,
                'name': 'AI.DigFltr.Response',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Order',
                'description': 'Specifies the order of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterOrder',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12480,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AIDigFltrOrder',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Digital Filter:Order',
                'lvMenuWeight': 14725.0,
                'name': 'AI.DigFltr.Order',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Lowpass_CutoffFreq',
                'description': 'Specifies the lowpass cutoff frequency of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterLowpassCutoffFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12481,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIDigFltrLowpassCutoffFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Digital Filter:Lowpass:Cutoff Frequency',
                'lvMenuWeight': 14735.0,
                'name': 'AI.DigFltr.Lowpass.CutoffFreq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Highpass_CutoffFreq',
                'description': 'Specifies the highpass cutoff frequency of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterHighpassCutoffFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12482,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIDigFltrHighpassCutoffFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Digital Filter:Highpass:Cutoff Frequency',
                'lvMenuWeight': 14740.0,
                'name': 'AI.DigFltr.Highpass.CutoffFreq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Bandpass_CenterFreq',
                'description': 'Specifies the center frequency of the passband for the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterBandpassCenterFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12483,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIDigFltrBandpassCenterFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Digital Filter:Bandpass:Center Frequency',
                'lvMenuWeight': 14745.0,
                'name': 'AI.DigFltr.Bandpass.CenterFreq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Bandpass_Width',
                'description': 'Specifies the width of the passband centered around the center frequency for the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterBandpassWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12484,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIDigFltrBandpassWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Digital Filter:Bandpass:Width',
                'lvMenuWeight': 14750.0,
                'name': 'AI.DigFltr.Bandpass.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Notch_CenterFreq',
                'description': 'Specifies the center frequency of the stopband for the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterNotchCenterFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12485,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIDigFltrNotchCenterFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Digital Filter:Notch:Center Frequency',
                'lvMenuWeight': 14755.0,
                'name': 'AI.DigFltr.Notch.CenterFreq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Notch_Width',
                'description': 'Specifies the width of the stopband centered around the center frequency for the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterNotchWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12486,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIDigFltrNotchWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Digital Filter:Notch:Width',
                'lvMenuWeight': 14760.0,
                'name': 'AI.DigFltr.Notch.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Coeff',
                'description': 'Specifies the digital filter coefficients.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterCoefficients',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12487,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIDigFltrCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Digital Filter:Advanced:Coefficients',
                'lvMenuWeight': 14765.0,
                'name': 'AI.DigFltr.Coeff',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Filter_Enable',
                'description': 'Specifies the corresponding filter enable/disable state.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FilterEnabled',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIHardwareFilterAPI',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12659,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIFilterEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Enable',
                'lvMenuWeight': 14770.0,
                'name': 'AI.Filter.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_4_AIHardwareFilterAPI.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Filter_Freq',
                'description': 'Specifies the corresponding filter frequency (cutoff or center) of the filter response.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FilterFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIHardwareFilterAPI',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12660,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIFilterFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Frequency',
                'lvMenuWeight': 14775.0,
                'name': 'AI.Filter.Freq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_4_AIHardwareFilterAPI.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Filter_Response',
                'description': 'Specifies the corresponding filter response and defines the shape of the filter response.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIFilterResponse',
                'dotNetName': 'FilterResponse',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIHardwareFilterAPI',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12661,
                'internalDataType': 'enum tFilterResponse',
                'internalDescription': '',
                'internalName': 'AIFilterResponse',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FilterResponse1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Response',
                'lvMenuWeight': 14780.0,
                'name': 'AI.Filter.Response',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_4_AIHardwareFilterAPI.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Filter_Order',
                'description': 'Specifies the corresponding filter order and defines the slope of the filter response.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FilterOrder',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AIHardwareFilterAPI',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12662,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AIFilterOrder',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Order',
                'lvMenuWeight': 14785.0,
                'name': 'AI.Filter.Order',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_4_AIHardwareFilterAPI.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_FilterDelay',
                'description': 'Indicates the amount of time between when the ADC samples data and when the sample is read by the host device. This value is in the units you specify with &attr3071;. You can adjust this amount of time using &attr3074;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FilterDelay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12269,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIFilterDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Filter Delay',
                'lvMenuWeight': 14800.0,
                'name': 'AI.FilterDelay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_FilterDelayUnits',
                'description': 'Specifies the units of &attr2FED; and &attr3074;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIFilterDelayUnits',
                'dotNetName': 'FilterDelayUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12401,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'AIFilterDelayUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits4:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Filter Delay Units',
                'lvMenuWeight': 14900.0,
                'name': 'AI.FilterDelayUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_RemoveFilterDelay',
                'description': 'Specifies if filter delay removal is enabled on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RemoveFilterDelay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12221,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIRemoveFilterDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Remove Filter Delay',
                'lvMenuWeight': 15000.0,
                'name': 'AI.RemoveFilterDelay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_FilterDelayAdjustment',
                'description': 'Specifies the amount of filter delay that gets removed if &attr2FBD; is enabled. This delay adjustment is in addition to the value indicated by &attr2FED;. This delay adjustment is in the units you specify with &attr3071;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FilterDelayAdjustment',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12404,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIFilterDelayAdjustment',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Filter Delay Adjustment',
                'lvMenuWeight': 15100.0,
                'name': 'AI.FilterDelayAdjustment',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_AveragingWinSize',
                'description': 'Specifies the number of samples to average while acquiring data. Increasing the number of samples to average reduces noise in your measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AveragingWindowSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12270,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AIAveragingWinSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Filter:Averaging Window Size',
                'lvMenuWeight': 15200.0,
                'name': 'AI.AveragingWinSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIResolutionUnits',
                'cviName': 'AI_ResolutionUnits',
                'description': 'Indicates the units of &attr1765;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIResolutionUnits',
                'dotNetName': 'ResolutionUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 5988,
                'internalDataType': 'enum tResolutionType',
                'internalDescription': '',
                'internalName': 'AIResolutionUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum ResolutionType1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Digitizer/ADC:Resolution Units',
                'lvMenuWeight': 15300.0,
                'name': 'AI.ResolutionUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Resolution',
                'description': 'Indicates the resolution of the analog-to-digital converter of the channel. This value is in the units you specify with &attr1764;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Resolution',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 5989,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIResolution',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Digitizer/ADC:Resolution Value',
                'lvMenuWeight': 15400.0,
                'name': 'AI.Resolution',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_RawSampSize',
                'description': 'Indicates in bits the size of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/rawdata.html\');">raw sample</see> from the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RawSampleSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8922,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AIRawSampSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Digitizer/ADC:Raw Sample Size',
                'lvMenuWeight': 15500.0,
                'name': 'AI.RawSampSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIRawSampleJustification',
                'cviName': 'AI_RawSampJustification',
                'description': 'Indicates the justification of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/rawdata.html\');">raw sample</see> from the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIRawSampleJustification',
                'dotNetName': 'RawSampleJustification',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 80,
                'internalDataType': 'enum tDataJustification',
                'internalDescription': '',
                'internalName': 'AIRawSampJustification',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum DataJustification1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Digitizer/ADC:Raw Sample Justification',
                'lvMenuWeight': 15600.0,
                'name': 'AI.RawSampJustification',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIAdcTimingMode',
                'cviName': 'AI_ADCTimingMode',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/configadctiming.html\');">ADC timing mode</see>, controlling the tradeoff between speed and effective resolution. Some ADC timing modes provide increased powerline noise rejection. On devices that have an AI Convert clock, this setting affects both the maximum and default values for &attr1848;. You must use the same ADC timing mode for all channels on a device, but you can use different ADC timing modes for different devices in the same task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIAdcTimingMode',
                'dotNetName': 'AdcTimingMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10745,
                'internalDataType': 'enum tADCTimingMode',
                'internalDescription': '',
                'internalName': 'AIADCTimingMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ADCTimingMode:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Digitizer/ADC:Timing Mode',
                'lvMenuWeight': 15700.0,
                'name': 'AI.ADCTimingMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ADCCustomTimingMode',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/configADCTiming.html\');">timing mode of the ADC</see> when &attr29F9; is &val29F9.10137;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AdcCustomTimingMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12139,
                'internalDataType': 'u32',
                'internalDescription': 'Added for signal conditioning devices specifically',
                'internalName': 'AIADCCustomTimingMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Digitizer/ADC:Custom Timing Mode',
                'lvMenuWeight': 15800.0,
                'name': 'AI.ADCCustomTimingMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Dither_Enable',
                'description': 'Specifies whether to enable dithering.  Dithering adds Gaussian noise to the input signal. You can use dithering to achieve higher resolution measurements by over sampling the input signal and averaging the results.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DitherEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 104,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIDitherEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Digitizer/ADC:Dither:Enable',
                'lvMenuWeight': 15900.0,
                'name': 'AI.Dither.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChanCal_HasValidCalInfo',
                'description': 'Indicates if the channel has calibration information.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CalibrationHasValidInfo',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8855,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIChanCalHasValidCalInfo',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Has Valid Calibration Information',
                'lvMenuWeight': 16000.0,
                'name': 'AI.ChanCal.HasValidCalInfo',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChanCal_EnableCal',
                'description': 'Specifies whether to enable the channel calibration associated with the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CalibrationEnable',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8856,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIChanCalEnableCal',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Enable Calibration',
                'lvMenuWeight': 16100.0,
                'name': 'AI.ChanCal.EnableCal',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChanCal_ApplyCalIfExp',
                'description': 'Specifies whether to apply the channel calibration to the channel after the expiration date has passed.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CalibrationApplyIfExpired',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8857,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIChanCalApplyCalIfExp',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Apply Calibration If Expired',
                'lvMenuWeight': 16200.0,
                'name': 'AI.ChanCal.ApplyCalIfExp',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIChannelCalibrationScaleType',
                'cviName': 'AI_ChanCal_ScaleType',
                'description': 'Specifies the method or equation form that the calibration scale uses.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIChannelCalibrationScaleType',
                'dotNetName': 'CalibrationScaleType',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8860,
                'internalDataType': 'enum tScaleType',
                'internalDescription': '',
                'internalName': 'AIChanCalScaleType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ScaleType3:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Scaling Parameters:Scale Type',
                'lvMenuWeight': 16500.0,
                'name': 'AI.ChanCal.ScaleType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChanCal_Table_PreScaledVals',
                'description': 'Specifies the reference values collected when calibrating the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CalibrationTablePreScaledValues',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8861,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIChanCalTablePreScaledVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Scaling Parameters:Table:Pre-Scaled Values',
                'lvMenuWeight': 16600.0,
                'name': 'AI.ChanCal.Table.PreScaledVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChanCal_Table_ScaledVals',
                'description': 'Specifies the acquired values collected when calibrating the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CalibrationTableScaledValues',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8862,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIChanCalTableScaledVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Scaling Parameters:Table:Scaled Values',
                'lvMenuWeight': 16700.0,
                'name': 'AI.ChanCal.Table.ScaledVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChanCal_Poly_ForwardCoeff',
                'description': 'Specifies the forward polynomial values used for calibrating the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CalibrationPolynomialForwardCoefficients',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8863,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIChanCalPolyForwardCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Scaling Parameters:Polynomial:Forward Coefficients',
                'lvMenuWeight': 16800.0,
                'name': 'AI.ChanCal.Poly.ForwardCoeff',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChanCal_Poly_ReverseCoeff',
                'description': 'Specifies the reverse polynomial values used for calibrating the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CalibrationPolynomialReverseCoefficients',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8864,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIChanCalPolyReverseCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Scaling Parameters:Polynomial:Reverse Coefficients',
                'lvMenuWeight': 16900.0,
                'name': 'AI.ChanCal.Poly.ReverseCoeff',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChanCal_OperatorName',
                'description': 'Specifies the name of the operator who performed the channel calibration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CalibrationOperatorName',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8867,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AIChanCalOperatorName',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Operator Name',
                'lvMenuWeight': 17000.0,
                'name': 'AI.ChanCal.OperatorName',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChanCal_Desc',
                'description': 'Specifies the description entered for the calibration of the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CalibrationDescription',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8868,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AIChanCalDesc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Description',
                'lvMenuWeight': 17100.0,
                'name': 'AI.ChanCal.Desc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChanCal_Verif_RefVals',
                'description': 'Specifies the reference values collected when verifying the calibration. NI-DAQmx stores these values as a record of calibration accuracy and does not use them in the scaling process.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CalibrationVerificationReferenceValues',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8865,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIChanCalVerifRefVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Verification:Reference Values',
                'lvMenuWeight': 17200.0,
                'name': 'AI.ChanCal.Verif.RefVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChanCal_Verif_AcqVals',
                'description': 'Specifies the acquired values collected when verifying the calibration. NI-DAQmx stores these values as a record of calibration accuracy and does not use them in the scaling process.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CalibrationVerificationAcquiredValues',
                'embeddedXMLHelpFiles': 'protoolschannelcal.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8866,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIChanCalVerifAcqVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Channel Calibration:Verification:Acquired Values',
                'lvMenuWeight': 17300.0,
                'name': 'AI.ChanCal.Verif.AcqVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Rng_High',
                'description': 'Specifies the upper limit of the input range of the device. This value is in the native units of the device. On E Series devices, for example, the native units is volts.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RangeHigh',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6165,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIRngHigh',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Range:High',
                'lvMenuWeight': 17400.0,
                'name': 'AI.Rng.High',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Rng_Low',
                'description': 'Specifies the lower limit of the input range of the device. This value is in the native units of the device. On E Series devices, for example, the native units is volts.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RangeLow',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6166,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIRngLow',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Range:Low',
                'lvMenuWeight': 17500.0,
                'name': 'AI.Rng.Low',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DCOffset',
                'description': 'Specifies the DC value to add to the input range of the device. Use &attr1815; and &attr1816; to specify the input range. This offset is in the native units of the device .',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DCOffset',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10889,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIDCOffset',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:DC Offset',
                'lvMenuWeight': 17600.0,
                'name': 'AI.DCOffset',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_Gain',
                'description': 'Specifies a gain factor to apply to the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Gain',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6168,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIGain',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Gain',
                'lvMenuWeight': 17800.0,
                'name': 'AI.Gain',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_SampAndHold_Enable',
                'description': 'Specifies whether to enable the sample and hold circuitry of the device. When you disable sample and hold circuitry, a small voltage offset might be introduced into the signal.  You can eliminate this offset by using &attr1760; to perform an auto zero on the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleAndHoldEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6170,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AISampAndHoldEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Sample and Hold Enable',
                'lvMenuWeight': 17900.0,
                'name': 'AI.SampAndHold.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIAutoZeroMode',
                'cviName': 'AI_AutoZeroMode',
                'description': 'Specifies how often to measure ground. NI-DAQmx subtracts the measured ground voltage from every sample.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIAutoZeroMode',
                'dotNetName': 'AutoZeroMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 5984,
                'internalDataType': 'enum tAutoZeroType',
                'internalDescription': '',
                'internalName': 'AIAutoZeroMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AutoZeroType1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:High Accuracy Settings:Auto Zero Mode',
                'lvMenuWeight': 18000.0,
                'name': 'AI.AutoZeroMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_ChopEnable',
                'description': 'Specifies whether the device will chop its inputs. Chopping removes offset voltages and other low frequency errors.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ChopEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'ChopEnable',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12611,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIChopEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:High Accuracy Settings:Chop:Enable',
                'lvMenuWeight': 18050.0,
                'name': 'AI.Chop.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_4_ChopEnable.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DataXferMaxRate',
                'description': 'Specifies the rate in B/s to transfer data from the device. If this value is not set, then the device will transfer data at a rate based on the bus detected. Modify this value to affect performance under different combinations of operating system, configuration, and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DataTransferMaximumRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': '9775ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12567,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIDataXferMaxRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Maximum Rate',
                'lvMenuWeight': 18150.0,
                'name': 'AI.DataXferMaxRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_2_9775ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIDataTransferMechanism',
                'cviName': 'AI_DataXferMech',
                'description': 'Specifies the data transfer mode for the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIDataTransferMechanism',
                'dotNetName': 'DataTransferMechanism',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6177,
                'internalDataType': 'enum tDataTransferActiveTransferMode',
                'internalDescription': '',
                'internalName': 'AIDataXferMech',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DataTransferMechanism:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Mechanism',
                'lvMenuWeight': 18200.0,
                'name': 'AI.DataXferMech',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIDataTransferRequestCondition',
                'cviName': 'AI_DataXferReqCond',
                'description': 'Specifies under what condition to transfer data from the onboard memory of the device to the buffer.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIDataTransferRequestCondition',
                'dotNetName': 'DataTransferRequestCondition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6283,
                'internalDataType': 'enum tInputDataTransferCondition',
                'internalDescription': '',
                'internalName': 'AIDataXferReqCond',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputDataTransferCondition:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Request Condition',
                'lvMenuWeight': 18300.0,
                'name': 'AI.DataXferReqCond',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DataXferCustomThreshold',
                'description': 'Specifies the number of samples that must be in the FIFO to transfer data from the device if &attr188B; is &val188B.12577;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DataTransferCustomThreshold',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8972,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AIDataXferCustomThreshold',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Custom Threshold',
                'lvMenuWeight': 18400.0,
                'name': 'AI.DataXferCustomThreshold',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_UsbXferReqSize',
                'description': 'Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10894,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AIUsbXferReqSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Size',
                'lvMenuWeight': 18500.0,
                'name': 'AI.UsbXferReqSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_UsbXferReqCount',
                'description': 'Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestCount',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12288,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AIUsbXferReqCount',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Count',
                'lvMenuWeight': 18600.0,
                'name': 'AI.UsbXferReqCount',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_MemMapEnable',
                'description': 'Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MemoryMappingEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6284,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIMemMapEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable',
                'lvMenuWeight': 18700.0,
                'name': 'AI.MemMapEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'AIRawDataCompressionType',
                'cviName': 'AI_RawDataCompressionType',
                'description': 'Specifies the type of compression to apply to <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/rawdata.html\');">raw samples</see> returned from the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'AIRawDataCompressionType',
                'dotNetName': 'RawDataCompressionType',
                'embeddedXMLHelpFiles': 'protoolsstreaming.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8920,
                'internalDataType': 'enum tRawDataCompressionType',
                'internalDescription': '',
                'internalName': 'AIRawDataCompressionType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum RawDataCompressionType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Data Transfer and Memory:Compression:Raw Data Compression Type',
                'lvMenuWeight': 18800.0,
                'name': 'AI.RawDataCompressionType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_LossyLSBRemoval_CompressedSampSize',
                'description': 'Specifies the number of bits to return in a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/rawdata.html\');">raw sample</see> when &attr22D8; is set to &val22D8.12556;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LossyLsbRemovalCompressedSampleSize',
                'embeddedXMLHelpFiles': 'protoolsstreaming.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8921,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AILossyLSBRemovalCompressedSampSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Data Transfer and Memory:Compression:Lossy LSB Removal:Compressed Sample Size',
                'lvMenuWeight': 18900.0,
                'name': 'AI.LossyLSBRemoval.CompressedSampSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DevScalingCoeff',
                'description': 'Indicates the coefficients of a polynomial equation that NI-DAQmx uses to scale values from the native format of the device to volts. Each element of the &array; corresponds to a term of the equation. For example, if index two of the &array; is 4, the third term of the equation is 4x^2. Scaling coefficients do not account for any custom scales or sensors contained by the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DeviceScalingCoefficients',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6448,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AIDevScalingCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Device Scaling Coefficients:Device Scaling Coefficients',
                'lvMenuWeight': 19000.0,
                'name': 'AI.DevScalingCoeff',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AI_EnhancedAliasRejectionEnable',
                'description': 'Specifies whether to enable <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/enhancedaliasrej.html\');">enhanced alias rejection</see>. Leave this property set to the default value for most applications.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EnhancedAliasRejectionEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8852,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIEnhancedAliasRejectionEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Enhanced Alias Rejection Enable',
                'lvMenuWeight': 19100.0,
                'name': 'AI.EnhancedAliasRejectionEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_OpenChanDetectEnable',
                'description': 'Specifies whether to enable open channel detection.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OpenChannelDetectEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'OpenChans',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12543,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIOpenChanDetectEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Open Channel Detection Enable',
                'lvMenuWeight': 19150.0,
                'name': 'AI.OpenChanDetectEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.5.0_2_OpenChans.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': 'http://niweb.natinst.com/confluence/display/CMSW/Fault+Condition+Properties',
                'supportEnds': 'never',
                'supportStarts': '15.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_InputLimitsFaultDetect_UpperLimit',
                'description': 'Specifies the level of the upper limit for input limits detection. An input sample outside the upper and lower bounds causes a fault. Note: Fault detection applies to both positive and negative inputs. For instance, if you specify a lower limit of 2 mA and an upper limit of 12 mA, NI-DAQmx detects a fault at 15 mA and -15 mA, but not at -6 mA because it is in the range of -12 mA to -2 mA.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'InputLimitsFaultDetectUpperLimit',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': '9253ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12684,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIInputLimitsFaultDetectUpperLimit',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Input Limits Fault Detection:Upper Limit',
                'lvMenuWeight': 19160.0,
                'name': 'AI.InputLimitsFaultDetect.UpperLimit',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.0.0_0_9253ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '19.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_InputLimitsFaultDetect_LowerLimit',
                'description': 'Specifies the level of the lower limit for input limits detection. An input sample outside the upper and lower bounds causes a fault. Note: Fault detection applies to both positive and negative inputs. For instance, if you specify a lower limit of 2 mA and an upper limit of 12 mA, NI-DAQmx detects a fault at 15 mA and -15 mA, but not at -6 mA because it is in the range of -12 mA to -2 mA.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'InputLimitsFaultDetectLowerLimit',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': '9253ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12685,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIInputLimitsFaultDetectLowerLimit',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Input Limits Fault Detection:Lower Limit',
                'lvMenuWeight': 19163.0,
                'name': 'AI.InputLimitsFaultDetect.LowerLimit',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.0.0_0_9253ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '19.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_InputLimitsFaultDetectEnable',
                'description': 'Specifies whether to enable input limits fault detection.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'InputLimitsFaultDetectEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': '9253ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12686,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIInputLimitsFaultDetectEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Input Limits Fault Detection:Enable',
                'lvMenuWeight': 19166.0,
                'name': 'AI.InputLimitsFaultDetectEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.0.0_0_9253ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '19.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_PowerSupplyFaultDetectEnable',
                'description': 'Specifies whether to enable power supply fault detection.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PowerSupplyFaultDetectEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': '9253ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12689,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIPowerSupplyFaultDetectEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Power Supply Fault Detection:Enable',
                'lvMenuWeight': 19170.0,
                'name': 'AI.PowerSupplyFaultDetectEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.0.0_0_9253ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '19.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_OvercurrentDetectEnable',
                'description': 'Specifies whether to enable overcurrent detection.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OvercurrentDetectEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': '9253ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12692,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIOvercurrentDetectEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Input:General Properties:Advanced:Overcurrent Detection:Enable',
                'lvMenuWeight': 19180.0,
                'name': 'AI.OvercurrentDetectEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.0.0_0_9253ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '19.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_Max',
                'description': 'Specifies the maximum value you expect to generate. The value is in the units you specify with a units property. If you try to write a value larger than the maximum value, NI-DAQmx generates an error. NI-DAQmx might coerce this value to a smaller value if other task settings restrict the device from generating the desired maximum.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Maximum',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4486,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOMax',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Maximum Value',
                'lvMenuWeight': 19200.0,
                'name': 'AO.Max',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_Min',
                'description': 'Specifies the minimum value you expect to generate. The value is in the units you specify with a units property. If you try to write a value smaller than the minimum value, NI-DAQmx generates an error. NI-DAQmx might coerce this value to a larger value if other task settings restrict the device from generating the desired minimum.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Minimum',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4487,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOMin',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Minimum Value',
                'lvMenuWeight': 19300.0,
                'name': 'AO.Min',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_CustomScaleName',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/customScales.html\');">custom scale</see> for the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CustomScaleName',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4488,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AOCustomScaleName',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQScale',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Custom Scale Name',
                'lvMenuWeight': 19400.0,
                'name': 'AO.CustomScaleName',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ScaleName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AOOutputType',
                'cviName': 'AO_OutputType',
                'description': 'Indicates whether the channel generates voltage,  current, or a waveform.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AOOutputType',
                'dotNetName': 'OutputType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4360,
                'internalDataType': 'enum tUsageTypeAO',
                'internalDescription': '',
                'internalName': 'AOOutputType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AOOutputChannelType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Output Type',
                'lvMenuWeight': 19500.0,
                'name': 'AO.OutputType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AOVoltageUnits',
                'cviName': 'AO_Voltage_Units',
                'description': 'Specifies in what units to generate voltage on the channel. Write data to the channel in the units you select.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AOVoltageUnits',
                'dotNetName': 'VoltageUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4484,
                'internalDataType': 'enum tVoltageUnits',
                'internalDescription': '',
                'internalName': 'AOVoltageUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum VoltageUnits2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Voltage:Units',
                'lvMenuWeight': 19600.0,
                'name': 'AO.Voltage.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_Voltage_CurrentLimit',
                'description': 'Specifies the current limit, in amperes, for the voltage channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VoltageCurrentLimit',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10781,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOVoltageCurrentLimit',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Voltage:Current Limit',
                'lvMenuWeight': 19700.0,
                'name': 'AO.Voltage.CurrentLimit',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AOCurrentUnits',
                'cviName': 'AO_Current_Units',
                'description': 'Specifies in what units to generate current on the channel. Write data to the channel in the units you select.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AOCurrentUnits',
                'dotNetName': 'CurrentUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4361,
                'internalDataType': 'enum tCurrentUnits',
                'internalDescription': '',
                'internalName': 'AOCurrentUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum CurrentUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Current:Units',
                'lvMenuWeight': 19900.0,
                'name': 'AO.Current.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AOFunctionGenerationType',
                'cviName': 'AO_FuncGen_Type',
                'description': 'Specifies the kind of the waveform to generate.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AOFunctionGenerationType',
                'dotNetName': 'FunctionGenerationType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10776,
                'internalDataType': 'enum tFuncGenType',
                'internalDescription': '',
                'internalName': 'AOFuncGenType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FuncGenType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Function Generation:Type',
                'lvMenuWeight': 20100.0,
                'name': 'AO.FuncGen.Type',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_FuncGen_Freq',
                'description': 'Specifies the frequency of the waveform to generate in hertz.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FunctionGenerationFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10777,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOFuncGenFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Function Generation:Frequency',
                'lvMenuWeight': 20200.0,
                'name': 'AO.FuncGen.Freq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_FuncGen_Amplitude',
                'description': 'Specifies the zero-to-peak amplitude of the waveform to generate in volts. Zero and negative values are valid.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FunctionGenerationAmplitude',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10778,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOFuncGenAmplitude',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Function Generation:Amplitude',
                'lvMenuWeight': 20300.0,
                'name': 'AO.FuncGen.Amplitude',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_FuncGen_Offset',
                'description': 'Specifies the voltage offset of the waveform to generate.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FunctionGenerationOffset',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10779,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOFuncGenOffset',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Function Generation:Offset',
                'lvMenuWeight': 20400.0,
                'name': 'AO.FuncGen.Offset',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO_FuncGen_StartPhase',
                'description': 'Specifies the starting phase in degrees of the waveform to generate.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FunctionGenerationStartPhase',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'FuncGenAttr_4466',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12740,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOFuncGenStartPhase',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Function Generation:Start Phase',
                'lvMenuWeight': 20450.0,
                'name': 'AO.FuncGen.StartPhase',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '20.1.0_0_FuncGenAttr_4466.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '21.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_FuncGen_Square_DutyCycle',
                'description': 'Specifies the square wave duty cycle of the waveform to generate.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FunctionGenerationSquareDutyCycle',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10780,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOFuncGenSquareDutyCycle',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Function Generation:Square:DutyCycle',
                'lvMenuWeight': 20500.0,
                'name': 'AO.FuncGen.Square.DutyCycle',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AOFunctionGenerationModulationType',
                'cviName': 'AO_FuncGen_ModulationType',
                'description': 'Specifies if the device generates a modulated version of the waveform using the original waveform as a carrier and input from an external terminal as the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AOFunctionGenerationModulationType',
                'dotNetName': 'FunctionGenerationModulationType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10786,
                'internalDataType': 'enum tModulationType',
                'internalDescription': '',
                'internalName': 'AOFuncGenModulationType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ModulationType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Function Generation:Modulation:Type',
                'lvMenuWeight': 20600.0,
                'name': 'AO.FuncGen.ModulationType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_FuncGen_FMDeviation',
                'description': 'Specifies the FM deviation in hertz per volt when &attr2A22; is &val2A22.14757;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FunctionGenerationFMDeviation',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10787,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOFuncGenFMDeviation',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:Function Generation:Modulation:FM Deviation',
                'lvMenuWeight': 20700.0,
                'name': 'AO.FuncGen.FMDeviation',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_OutputImpedance',
                'description': 'Specifies in ohms the impedance of the analog output stage of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OutputImpedance',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 5264,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOOutputImpedance',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Output Configuration:Output Impedance',
                'lvMenuWeight': 20900.0,
                'name': 'AO.OutputImpedance',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_LoadImpedance',
                'description': 'Specifies in ohms the load impedance connected to the analog output channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LoadImpedance',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 289,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOLoadImpedance',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Output Configuration:Load Impedance',
                'lvMenuWeight': 21000.0,
                'name': 'AO.LoadImpedance',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AOIdleOutputBehavior',
                'cviName': 'AO_IdleOutputBehavior',
                'description': 'Specifies the state of the channel when no generation is in progress.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AOIdleOutputBehavior',
                'dotNetName': 'IdleOutputBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8768,
                'internalDataType': 'enum tAOIdleOutputBehavior',
                'internalDescription': '',
                'internalName': 'AOIdleOutputBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AOIdleOutputBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Output Configuration:Idle Output Behavior',
                'lvMenuWeight': 21100.0,
                'name': 'AO.IdleOutputBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AOTerminalConfiguration',
                'cviName': 'AO_TermCfg',
                'description': 'Specifies the terminal configuration of the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AOTerminalConfiguration',
                'dotNetName': 'TerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6286,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'AOTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum OutputTermCfg:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Output Configuration:Terminal Configuration',
                'lvMenuWeight': 21200.0,
                'name': 'AO.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO_Common_Mode_Offset',
                'description': 'Specifies the common-mode offset of the AO channel. Use the property only when Terminal Configuration is set to Differential.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CommonModeOffset',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'AOCommonMode_4466',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12748,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOCommonModeOffset',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Output Configuration:Common Mode Offset',
                'lvMenuWeight': 21400.0,
                'name': 'AO.CommonModeOffset',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '20.6.0_0_AOCommonMode_4466.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.7.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AOResolutionUnits',
                'cviName': 'AO_ResolutionUnits',
                'description': 'Specifies the units of &attr182C;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AOResolutionUnits',
                'dotNetName': 'ResolutionUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6187,
                'internalDataType': 'enum tResolutionType',
                'internalDescription': '',
                'internalName': 'AOResolutionUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ResolutionType1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Resolution Units',
                'lvMenuWeight': 21600.0,
                'name': 'AO.ResolutionUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_Resolution',
                'description': 'Indicates the resolution of the digital-to-analog converter of the channel. This value is in the units you specify with &attr182B;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Resolution',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6188,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOResolution',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Resolution Value',
                'lvMenuWeight': 21700.0,
                'name': 'AO.Resolution',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_DAC_Rng_High',
                'description': 'Specifies the upper limit of the output range of the device. This value is in the native units of the device. On E Series devices, for example, the native units is volts.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DacRangeHigh',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6190,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AODACRngHigh',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Range:High',
                'lvMenuWeight': 21800.0,
                'name': 'AO.DAC.Rng.High',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_DAC_Rng_Low',
                'description': 'Specifies the lower limit of the output range of the device. This value is in the native units of the device. On E Series devices, for example, the native units is volts.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DacRangeLow',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6189,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AODACRngLow',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Range:Low',
                'lvMenuWeight': 21900.0,
                'name': 'AO.DAC.Rng.Low',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_DAC_Ref_ConnToGnd',
                'description': 'Specifies whether to ground the internal DAC reference. Grounding the internal DAC reference has the effect of grounding all analog output channels and stopping waveform generation across all analog output channels regardless of whether the channels belong to the current task. You can ground the internal DAC reference only when &attr132; is &val132.10200; and &attr1830; is &true;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DacConnectReferenceToGround',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 304,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AODACRefConnToGnd',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Reference Voltage:Connect DAC Reference to Ground',
                'lvMenuWeight': 22000.0,
                'name': 'AO.DAC.Ref.ConnToGnd',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_DAC_Ref_AllowConnToGnd',
                'description': 'Specifies whether to allow grounding the internal DAC reference at run time. You must set this property to &true; and set &attr132; to &val132.10200; before you can set &attr130; to &true;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DacAllowConnectReferenceToGround',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6192,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AODACRefAllowConnToGnd',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Reference Voltage:Allow Connecting DAC Reference to Ground at Runtime',
                'lvMenuWeight': 22100.0,
                'name': 'AO.DAC.Ref.AllowConnToGnd',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AODacReferenceSource',
                'cviName': 'AO_DAC_Ref_Src',
                'description': 'Specifies the source of the DAC reference voltage. The value of this voltage source determines the full-scale value of the DAC.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AODacReferenceSource',
                'dotNetName': 'DacReferenceSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 306,
                'internalDataType': 'enum tSourceSelection',
                'internalDescription': '',
                'internalName': 'AODACRefSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SourceSelection:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Reference Voltage:Source',
                'lvMenuWeight': 22200.0,
                'name': 'AO.DAC.Ref.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_DAC_Ref_ExtSrc',
                'description': 'Specifies the source of the DAC reference voltage if &attr132; is &val132.10167;. The valid sources for this signal <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/MSeriesExtRefSrc.html\');">vary by device</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DacReferenceExternalSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8786,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AODACRefExtSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Reference Voltage:External Source',
                'lvMenuWeight': 22300.0,
                'name': 'AO.DAC.Ref.ExtSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_DAC_Ref_Val',
                'description': 'Specifies in volts the value of the DAC reference voltage. This voltage determines the full-scale range of the DAC. Smaller reference voltages result in smaller ranges, but increased resolution.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DacReferenceValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6194,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AODACRefVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Reference Voltage:Value',
                'lvMenuWeight': 22400.0,
                'name': 'AO.DAC.Ref.Val',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AODacOffsetSource',
                'cviName': 'AO_DAC_Offset_Src',
                'description': 'Specifies the source of the DAC offset voltage. The value of this voltage source determines the full-scale value of the DAC.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AODacOffsetSource',
                'dotNetName': 'DacOffsetSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8787,
                'internalDataType': 'enum tSourceSelection',
                'internalDescription': '',
                'internalName': 'AODACOffsetSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SourceSelection:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Offset Voltage:Source',
                'lvMenuWeight': 22500.0,
                'name': 'AO.DAC.Offset.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_DAC_Offset_ExtSrc',
                'description': 'Specifies the source of the DAC offset voltage if &attr2253; is &val2253.10167;. The valid sources for this signal <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/MSeriesExtRefSrc.html\');">vary by device</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DacOffsetExternalSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8788,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AODACOffsetExtSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Offset Voltage:External Source',
                'lvMenuWeight': 22600.0,
                'name': 'AO.DAC.Offset.ExtSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_DAC_Offset_Val',
                'description': 'Specifies in volts the value of the DAC offset voltage. To achieve best accuracy, the DAC offset value should be hand calibrated.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DacOffsetValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8789,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AODACOffsetVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Offset Voltage:Value',
                'lvMenuWeight': 22700.0,
                'name': 'AO.DAC.Offset.Val',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_ReglitchEnable',
                'description': 'Specifies whether to enable reglitching.  The output of a DAC normally glitches whenever the DAC is updated with a new value. The amount of glitching differs from code to code and is generally largest at major code transitions.  Reglitching generates uniform glitch energy at each code transition and provides for more uniform glitches.  Uniform glitch energy makes it easier to filter out the noise introduced from glitching during spectrum analysis.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReglitchEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 307,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AOReglitchEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:DAC:Reglitching Enable',
                'lvMenuWeight': 23000.0,
                'name': 'AO.ReglitchEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO_FilterDelay',
                'description': 'Specifies the amount of time between when the sample is written by the host device and when the sample is output by the DAC. This value is in the units you specify with &attr3076;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FilterDelay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12405,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOFilterDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Filter:Filter Delay',
                'lvMenuWeight': 23600.0,
                'name': 'AO.FilterDelay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO_FilterDelayUnits',
                'description': 'Specifies the units of &attr3075; and &attr3072;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AOFilterDelayUnits',
                'dotNetName': 'FilterDelayUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12406,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'AOFilterDelayUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits4:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Filter:Filter Delay Units',
                'lvMenuWeight': 23700.0,
                'name': 'AO.FilterDelayUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO_FilterDelayAdjustment',
                'description': 'Specifies an additional amount of time to wait between when the sample is written by the host device and when the sample is output by the DAC. This delay adjustment is in addition to the value indicated by &attr3075;. This delay adjustment is in the units you specify with &attr3076;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FilterDelayAdjustment',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12402,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOFilterDelayAdjustment',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Filter:Filter Delay Adjustment',
                'lvMenuWeight': 23800.0,
                'name': 'AO.FilterDelayAdjustment',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_Gain',
                'description': 'Specifies in decibels the gain factor to apply to the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Gain',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 280,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOGain',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Advanced:Gain:Gain Value',
                'lvMenuWeight': 24000.0,
                'name': 'AO.Gain',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_UseOnlyOnBrdMem',
                'description': 'Specifies whether to write samples directly to the onboard memory of the device, bypassing the memory buffer. Generally, you cannot update onboard memory directly after you start the task. Onboard memory includes data FIFOs.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UseOnlyOnBoardMemory',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6202,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AOUseOnlyOnBrdMem',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Advanced:Data Transfer and Memory:Use Only Onboard Memory',
                'lvMenuWeight': 24300.0,
                'name': 'AO.UseOnlyOnBrdMem',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AODataTransferMechanism',
                'cviName': 'AO_DataXferMech',
                'description': 'Specifies the data transfer mode for the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AODataTransferMechanism',
                'dotNetName': 'DataTransferMechanism',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 308,
                'internalDataType': 'enum tDataTransferActiveTransferMode',
                'internalDescription': '',
                'internalName': 'AODataXferMech',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DataTransferMechanism:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Advanced:Data Transfer and Memory:Data Transfer Mechanism',
                'lvMenuWeight': 24600.0,
                'name': 'AO.DataXferMech',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'AODataTransferRequestCondition',
                'cviName': 'AO_DataXferReqCond',
                'description': 'Specifies under what condition to transfer data from the buffer to the onboard memory of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AODataTransferRequestCondition',
                'dotNetName': 'DataTransferRequestCondition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6204,
                'internalDataType': 'enum tOutputDataTransferCondition',
                'internalDescription': '',
                'internalName': 'AODataXferReqCond',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum OutputDataTransferCondition:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Advanced:Data Transfer and Memory:Data Transfer Request Condition',
                'lvMenuWeight': 24700.0,
                'name': 'AO.DataXferReqCond',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_UsbXferReqSize',
                'description': 'Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10895,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AOUsbXferReqSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Size',
                'lvMenuWeight': 24800.0,
                'name': 'AO.UsbXferReqSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO_UsbXferReqCount',
                'description': 'Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestCount',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12289,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AOUsbXferReqCount',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Count',
                'lvMenuWeight': 24900.0,
                'name': 'AO.UsbXferReqCount',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_MemMapEnable',
                'description': 'Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MemoryMappingEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6287,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AOMemMapEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable',
                'lvMenuWeight': 25000.0,
                'name': 'AO.MemMapEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_DevScalingCoeff',
                'description': 'Indicates the coefficients of a linear equation that NI-DAQmx uses to scale values from a voltage to the native format of the device. Each element of the &array; corresponds to a term of the equation. The first element of the &array; corresponds to the y-intercept, and the second element corresponds to the slope. Scaling coefficients do not account for any custom scales that may be applied to the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DeviceScalingCoefficients',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6449,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AODevScalingCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Advanced:Device Scaling Coefficients:Device Scaling Coefficients',
                'lvMenuWeight': 25200.0,
                'name': 'AO.DevScalingCoeff',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'AO_EnhancedImageRejectionEnable',
                'description': 'Specifies whether to enable the DAC interpolation filter. Disable the interpolation filter to improve DAC signal-to-noise ratio at the expense of degraded image rejection.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EnhancedImageRejectionEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8769,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AOEnhancedImageRejectionEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Analog Output:General Properties:Advanced:Enhanced Image Rejection Enable',
                'lvMenuWeight': 25300.0,
                'name': 'AO.EnhancedImageRejectionEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DI_InvertLines',
                'description': 'Specifies whether to invert the lines in the channel. If you set this property to &true;, the lines are at high logic when off and at low logic when on.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'InvertLines',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 1939,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DIInvertLines',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:Invert Lines',
                'lvMenuWeight': 25400.0,
                'name': 'DI.InvertLines',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DI_NumLines',
                'description': 'Indicates the number of digital lines in the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'NumberOfLines',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8568,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DINumLines',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:Number of Lines',
                'lvMenuWeight': 25500.0,
                'name': 'DI.NumLines',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DI_DigFltr_Enable',
                'description': 'Specifies whether to enable the digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> for the line(s) or port(s). You can enable the filter on a line-by-line basis. You do not have to enable the filter for all lines in a channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8662,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DIDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:Digital Filter:Enable',
                'lvMenuWeight': 25900.0,
                'name': 'DI.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': True,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DI_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes as a valid high or low state transition.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8663,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DIDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 26000.0,
                'name': 'DI.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DI_DigFltr_EnableBusMode',
                'description': 'Specifies whether to enable bus mode for digital filtering. If you set this property to &true;, NI-DAQmx treats all lines that use common filtering settings as a bus. If any line in the bus has jitter, all lines in the bus hold state until the entire bus stabilizes, or until 2 times the minimum pulse width elapses. If you set this property to &false;, NI-DAQmx filters all lines individually. Jitter in one line does not affect other lines.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnableBusMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12030,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DIDigFltrEnableBusMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:Digital Filter:Enable Bus Mode',
                'lvMenuWeight': 26100.0,
                'name': 'DI.DigFltr.EnableBusMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DI_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 11988,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DIDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 26200.0,
                'name': 'DI.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DI_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 11989,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DIDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 26300.0,
                'name': 'DI.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DI_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 11990,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DIDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:Digital Synchronization:Enable',
                'lvMenuWeight': 26400.0,
                'name': 'DI.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DI_Tristate',
                'description': 'Specifies whether to tristate the lines in the channel. If you set this property to &true;, NI-DAQmx tristates the lines in the channel. If you set this property to &false;, NI-DAQmx does not modify the configuration of the lines even if the lines were previously tristated. Set this property to &false; to read lines in other tasks or to read output-only lines.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Tristate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6288,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DITristate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:Tristate',
                'lvMenuWeight': 26500.0,
                'name': 'DI.Tristate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'DILogicFamily',
                'cviName': 'DI_LogicFamily',
                'description': 'Specifies the logic family to use for acquisition. A logic family corresponds to voltage thresholds that are compatible with a group of voltage standards. Refer to the device documentation for information on the logic high and logic low voltages for these logic families.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'DILogicFamily',
                'dotNetName': 'LogicFamily',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10605,
                'internalDataType': 'enum tLogicFamily',
                'internalDescription': '',
                'internalName': 'DILogicFamily',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicFamily:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:Logic Family',
                'lvMenuWeight': 26600.0,
                'name': 'DI.LogicFamily',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'DIDataTransferMechanism',
                'cviName': 'DI_DataXferMech',
                'description': 'Specifies the data transfer mode for the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'DIDataTransferMechanism',
                'dotNetName': 'DataTransferMechanism',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8803,
                'internalDataType': 'enum tDataTransferActiveTransferMode',
                'internalDescription': '',
                'internalName': 'DIDataXferMech',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DataTransferMechanism:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Mechanism',
                'lvMenuWeight': 27000.0,
                'name': 'DI.DataXferMech',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'DIDataTransferRequestCondition',
                'cviName': 'DI_DataXferReqCond',
                'description': 'Specifies under what condition to transfer data from the onboard memory of the device to the buffer.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'DIDataTransferRequestCondition',
                'dotNetName': 'DataTransferRequestCondition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8804,
                'internalDataType': 'enum tInputDataTransferCondition',
                'internalDescription': '',
                'internalName': 'DIDataXferReqCond',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputDataTransferCondition:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:General Properties:Advanced:Data Transfer and Memory:Data Transfer Request Condition',
                'lvMenuWeight': 27100.0,
                'name': 'DI.DataXferReqCond',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DI_UsbXferReqSize',
                'description': 'Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10896,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DIUsbXferReqSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Size',
                'lvMenuWeight': 27200.0,
                'name': 'DI.UsbXferReqSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'DI_UsbXferReqCount',
                'description': 'Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestCount',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12290,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DIUsbXferReqCount',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Count',
                'lvMenuWeight': 27300.0,
                'name': 'DI.UsbXferReqCount',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DI_MemMapEnable',
                'description': 'Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MemoryMappingEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10602,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DIMemMapEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:General Properties:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable',
                'lvMenuWeight': 27400.0,
                'name': 'DI.MemMapEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDIChannel',
                'cppEnumName': 'DIAcquireOn',
                'cviName': 'DI_AcquireOn',
                'description': 'Specifies on which edge of the sample clock to acquire samples.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DIChannel',
                'dotNetEnumName': 'DIAcquireOn',
                'dotNetName': 'AcquireOn',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10598,
                'internalDataType': 'enum tActiveOrInactiveEdgeSelection',
                'internalDescription': '',
                'internalName': 'DIAcquireOn',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SampleClockActiveOrInactiveEdgeSelection:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Input:General Properties:Advanced:Acquire On',
                'lvMenuWeight': 27500.0,
                'name': 'DI.AcquireOn',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'DOOutputDriveType',
                'cviName': 'DO_OutputDriveType',
                'description': 'Specifies the drive type for digital output channels.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'DOOutputDriveType',
                'dotNetName': 'OutputDriveType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4407,
                'internalDataType': 'enum tDigitalDriveType',
                'internalDescription': '',
                'internalName': 'DOOutputDriveType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalDriveType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:Output Drive Type',
                'lvMenuWeight': 27700.0,
                'name': 'DO.OutputDriveType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DO_InvertLines',
                'description': 'Specifies whether to invert the lines in the channel. If you set this property to &true;, the lines are at high logic when off and at low logic when on.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'InvertLines',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4403,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DOInvertLines',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:Invert Lines',
                'lvMenuWeight': 27800.0,
                'name': 'DO.InvertLines',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DO_NumLines',
                'description': 'Indicates the number of digital lines in the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'NumberOfLines',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8569,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DONumLines',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:Number of Lines',
                'lvMenuWeight': 27900.0,
                'name': 'DO.NumLines',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DO_Tristate',
                'description': 'Specifies whether to stop driving the channel and set it to a high-impedance state. You must commit the task for this setting to take effect.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Tristate',
                'embeddedXMLHelpFiles': 'tristating.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6387,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DOTristate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:Tristate',
                'lvMenuWeight': 28300.0,
                'name': 'DO.Tristate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': True,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'DOLineStatesStartState',
                'cviName': 'DO_LineStates_StartState',
                'description': 'Specifies the state of the lines in a digital output task when the task starts.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'DOLineStatesStartState',
                'dotNetName': 'LineStatesStartState',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10610,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'DOLineStatesStartState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalLineState:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:Line States:Start State',
                'lvMenuWeight': 28400.0,
                'name': 'DO.LineStates.StartState',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'DOLineStatesPausedState',
                'cviName': 'DO_LineStates_PausedState',
                'description': 'Specifies the state of the lines in a digital output task when the task pauses.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'DOLineStatesPausedState',
                'dotNetName': 'LineStatesPausedState',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10599,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'DOLineStatesPausedState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalLineState:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:Line States:Paused State',
                'lvMenuWeight': 28500.0,
                'name': 'DO.LineStates.PausedState',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'DOLineStatesDoneState',
                'cviName': 'DO_LineStates_DoneState',
                'description': 'Specifies the state of the lines in a digital output task when the task <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/whenTaskDone.html\');">completes execution</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'DOLineStatesDoneState',
                'dotNetName': 'LineStatesDoneState',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10600,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'DOLineStatesDoneState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalLineState:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:Line States:Done State',
                'lvMenuWeight': 28600.0,
                'name': 'DO.LineStates.DoneState',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'DOLogicFamily',
                'cviName': 'DO_LogicFamily',
                'description': 'Specifies the logic family to use for generation. A logic family corresponds to voltage thresholds that are compatible with a group of voltage standards. Refer to the device documentation for information on the logic high and logic low voltages for these logic families.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'DOLogicFamily',
                'dotNetName': 'LogicFamily',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10606,
                'internalDataType': 'enum tLogicFamily',
                'internalDescription': '',
                'internalName': 'DOLogicFamily',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicFamily:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:Logic Family',
                'lvMenuWeight': 28700.0,
                'name': 'DO.LogicFamily',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DO_Overcurrent_Limit',
                'description': 'Specifies the current threshold in Amperes for the channel. A value of 0 means the channel observes no limit. Devices can monitor only a finite number of current thresholds simultaneously. If you attempt to monitor additional thresholds, NI-DAQmx returns an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OvercurrentLimit',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10885,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DOOvercurrentLimit',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:Overcurrent:Current Limit',
                'lvMenuWeight': 28800.0,
                'name': 'DO.Overcurrent.Limit',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DO_Overcurrent_AutoReenable',
                'description': 'Specifies whether to automatically reenable channels after they no longer exceed the current limit specified by &attr2A85;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OvercurrentAutoReenable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10886,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DOOvercurrentAutoReenable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:Overcurrent:Automatic Re-enable',
                'lvMenuWeight': 28900.0,
                'name': 'DO.Overcurrent.AutoReenable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DO_Overcurrent_ReenablePeriod',
                'description': 'Specifies the delay in seconds between the time a channel no longer exceeds the current limit and the reactivation of that channel, if &attr2A86; is &true;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OvercurrentReenablePeriod',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10887,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DOOvercurrentReenablePeriod',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:Overcurrent:Re-enable Period',
                'lvMenuWeight': 29000.0,
                'name': 'DO.Overcurrent.ReenablePeriod',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DO_UseOnlyOnBrdMem',
                'description': 'Specifies whether to write samples directly to the onboard memory of the device, bypassing the memory buffer. Generally, you cannot update onboard memory after you start the task. Onboard memory includes data FIFOs.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UseOnlyOnBoardMemory',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8805,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DOUseOnlyOnBrdMem',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:General Properties:Advanced:Data Transfer and Memory:Use Only Onboard Memory',
                'lvMenuWeight': 29300.0,
                'name': 'DO.UseOnlyOnBrdMem',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'DODataTransferMechanism',
                'cviName': 'DO_DataXferMech',
                'description': 'Specifies the data transfer mode for the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'DODataTransferMechanism',
                'dotNetName': 'DataTransferMechanism',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8806,
                'internalDataType': 'enum tDataTransferActiveTransferMode',
                'internalDescription': '',
                'internalName': 'DODataXferMech',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DataTransferMechanism:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:General Properties:Advanced:Data Transfer and Memory:Data Transfer Mechanism',
                'lvMenuWeight': 29400.0,
                'name': 'DO.DataXferMech',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'DODataTransferRequestCondition',
                'cviName': 'DO_DataXferReqCond',
                'description': 'Specifies under what condition to transfer data from the buffer to the onboard memory of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'DODataTransferRequestCondition',
                'dotNetName': 'DataTransferRequestCondition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8807,
                'internalDataType': 'enum tOutputDataTransferCondition',
                'internalDescription': '',
                'internalName': 'DODataXferReqCond',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum OutputDataTransferCondition:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:General Properties:Advanced:Data Transfer and Memory:Data Transfer Request Condition',
                'lvMenuWeight': 29500.0,
                'name': 'DO.DataXferReqCond',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DO_UsbXferReqSize',
                'description': 'Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10897,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DOUsbXferReqSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Size',
                'lvMenuWeight': 29600.0,
                'name': 'DO.UsbXferReqSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'DO_UsbXferReqCount',
                'description': 'Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestCount',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12291,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DOUsbXferReqCount',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:General Properties:Advanced:Data Transfer and Memory:USB Transfer Request Count',
                'lvMenuWeight': 29700.0,
                'name': 'DO.UsbXferReqCount',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'DO_MemMapEnable',
                'description': 'Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MemoryMappingEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10603,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DOMemMapEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:General Properties:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable',
                'lvMenuWeight': 29800.0,
                'name': 'DO.MemMapEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDOChannel',
                'cppEnumName': 'DOGenerateOn',
                'cviName': 'DO_GenerateOn',
                'description': 'Specifies on which edge of the sample clock to generate samples.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DOChannel',
                'dotNetEnumName': 'DOGenerateOn',
                'dotNetName': 'GenerateOn',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10601,
                'internalDataType': 'enum tActiveOrInactiveEdgeSelection',
                'internalDescription': '',
                'internalName': 'DOGenerateOn',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SampleClockActiveOrInactiveEdgeSelection:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Digital Output:General Properties:Advanced:Generate On',
                'lvMenuWeight': 29900.0,
                'name': 'DO.GenerateOn',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Max',
                'description': 'Specifies the maximum value you expect to measure. This value is in the units you specify with a units property. When you query this property, it returns the coerced maximum value that the hardware can measure with the current settings.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Maximum',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6300,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIMax',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Maximum Value',
                'lvMenuWeight': 30000.0,
                'name': 'CI.Max',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Min',
                'description': 'Specifies the minimum value you expect to measure. This value is in the units you specify with a units property. When you query this property, it returns the coerced minimum value that the hardware can measure with the current settings.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Minimum',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6301,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIMin',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Minimum Value',
                'lvMenuWeight': 30100.0,
                'name': 'CI.Min',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CustomScaleName',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/customScales.html\');">custom scale</see> for the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CustomScaleName',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6302,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CICustomScaleName',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQScale',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Custom Scale Name',
                'lvMenuWeight': 30200.0,
                'name': 'CI.CustomScaleName',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ScaleName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIMeasurementType',
                'cviName': 'CI_MeasType',
                'description': 'Indicates the measurement to take with the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIMeasurementType',
                'dotNetName': 'MeasurementType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6304,
                'internalDataType': 'enum tUsageTypeCI',
                'internalDescription': '',
                'internalName': 'CIMeasType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum CIMeasurementType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Measurement Type',
                'lvMenuWeight': 30300.0,
                'name': 'CI.MeasType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIFrequencyUnits',
                'cviName': 'CI_Freq_Units',
                'description': 'Specifies the units to use to return frequency measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIFrequencyUnits',
                'dotNetName': 'FrequencyUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6305,
                'internalDataType': 'enum tFrequencyUnits',
                'internalDescription': '',
                'internalName': 'CIFreqUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FrequencyUnits3:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Units',
                'lvMenuWeight': 30400.0,
                'name': 'CI.Freq.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_Term',
                'description': 'Specifies the <see href="javascript:LaunchHelp(\'daqhelp.chm::/connectCounter.html\');">input terminal</see> of the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6306,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIFreqTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Input:Terminal',
                'lvMenuWeight': 30500.0,
                'name': 'CI.Freq.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_TermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIFrequencyTerminalConfiguration',
                'dotNetName': 'FrequencyTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12439,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIFreqTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Input:Terminal Configuration',
                'lvMenuWeight': 30510.0,
                'name': 'CI.Freq.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the input line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIFrequencyLogicLevelBehavior',
                'dotNetName': 'FrequencyLogicalLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12440,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIFreqLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Input:Logic Level Behavior',
                'lvMenuWeight': 30511.0,
                'name': 'CI.Freq.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_ThreshVoltage',
                'description': 'Specifies the voltage level at which to recognize waveform repetitions. Select a voltage level that occurs only once within the entire period of a waveform. You also can select a voltage that occurs only once while the voltage rises or falls.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyThresholdVoltage',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12715,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIFreqThreshVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Input:Threshold Level',
                'lvMenuWeight': 30520.0,
                'name': 'CI.Freq.ThreshVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_Hyst',
                'description': 'Specifies a hysteresis level to apply to &attr31AB;. When &attr799; is rising, the source signal must first fall below &attr31AB; minus the hysteresis before a rising edge is detected at &attr31AB;. When &attr799; is falling, the source signal must first rise above &attr31AB; plus the hysteresis before a falling edge is detected at &attr31AB;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyHysteresis',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12716,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIFreqHyst',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Input:Hysteresis',
                'lvMenuWeight': 30521.0,
                'name': 'CI.Freq.Hyst',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8679,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIFreqDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Input:Digital Filter:Enable',
                'lvMenuWeight': 30550.0,
                'name': 'CI.Freq.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8680,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIFreqDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 30560.0,
                'name': 'CI.Freq.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8681,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIFreqDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 30570.0,
                'name': 'CI.Freq.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8682,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIFreqDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 30580.0,
                'name': 'CI.Freq.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8683,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIFreqDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 30590.0,
                'name': 'CI.Freq.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIFrequencyStartingEdge',
                'cviName': 'CI_Freq_StartingEdge',
                'description': 'Specifies between which edges to measure the frequency of the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIFrequencyStartingEdge',
                'dotNetName': 'FrequencyStartingEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 1945,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CIFreqStartingEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Starting Edge',
                'lvMenuWeight': 30600.0,
                'name': 'CI.Freq.StartingEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIFrequencyMeasurementMethod',
                'cviName': 'CI_Freq_MeasMeth',
                'description': 'Specifies the method to use to measure the frequency of the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIFrequencyMeasurementMethod',
                'dotNetName': 'FrequencyMeasurementMethod',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 324,
                'internalDataType': 'enum tCounterFrequencyMethod',
                'internalDescription': '',
                'internalName': 'CIFreqMeasMeth',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum CounterFrequencyMethod:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Measurement Specifications:Method',
                'lvMenuWeight': 30700.0,
                'name': 'CI.Freq.MeasMeth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_EnableAveraging',
                'description': 'Specifies whether to enable <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/ConfigTimeMeas.html\');">averaging mode</see> for Sample Clock-timed frequency measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyEnableAveraging',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 11984,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIFreqEnableAveraging',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Measurement Specifications:Enable Averaging',
                'lvMenuWeight': 30800.0,
                'name': 'CI.Freq.EnableAveraging',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_MeasTime',
                'description': 'Specifies in seconds the length of time to measure the frequency of the signal if &attr144; is &val144.10157;. Measurement accuracy increases with increased measurement time and with increased signal frequency. If you measure a high-frequency signal for too long, however, the count register could roll over, which results in an incorrect measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyMeasurementTime',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 325,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIFreqMeasTime',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Measurement Specifications:High Frequency:Measurement Time',
                'lvMenuWeight': 30900.0,
                'name': 'CI.Freq.MeasTime',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Freq_Div',
                'description': 'Specifies the value by which to divide the input signal if  &attr144; is &val144.10205;. The larger the divisor, the more accurate the measurement. However, too large a value could cause the count register to roll over, which results in an incorrect measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FrequencyDivisor',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 327,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CIFreqDiv',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Frequency:Measurement Specifications:Large Range:Divisor',
                'lvMenuWeight': 31000.0,
                'name': 'CI.Freq.Div',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIPeriodUnits',
                'cviName': 'CI_Period_Units',
                'description': 'Specifies the unit to use to return period measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPeriodUnits',
                'dotNetName': 'PeriodUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6307,
                'internalDataType': 'enum tTimeUnits',
                'internalDescription': '',
                'internalName': 'CIPeriodUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TimeUnits3:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Units',
                'lvMenuWeight': 31600.0,
                'name': 'CI.Period.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_Term',
                'description': 'Specifies the <see href="javascript:LaunchHelp(\'daqhelp.chm::/connectCounter.html\');">input terminal</see> of the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PeriodTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6308,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIPeriodTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Input:Terminal',
                'lvMenuWeight': 31700.0,
                'name': 'CI.Period.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_TermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPeriodTerminalConfiguration',
                'dotNetName': 'PeriodTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12441,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIPeriodTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Input:Terminal Configuration',
                'lvMenuWeight': 31710.0,
                'name': 'CI.Period.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the input line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPeriodLogicLevelBehavior',
                'dotNetName': 'PeriodLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12442,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIPeriodLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Input:Logic Level Behavior',
                'lvMenuWeight': 31711.0,
                'name': 'CI.Period.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_ThreshVoltage',
                'description': 'Specifies the voltage level at which to recognize waveform repetitions. Select a voltage level that occurs only once within the entire period of a waveform. You also can select a voltage that occurs only once while the voltage rises or falls.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PeriodThresholdVoltage',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12717,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPeriodThreshVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Input:Threshold Level',
                'lvMenuWeight': 31720.0,
                'name': 'CI.Period.ThreshVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_Hyst',
                'description': 'Specifies a hysteresis level to apply to &attr31AD;. When &attr852; is rising, the source signal must first fall below &attr31AD; minus the hysteresis before a rising edge is detected at &attr31AD;. When &attr852; is falling, the source signal must first rise above &attr31AD; plus the hysteresis before a falling edge is detected at &attr31AD;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PeriodHysteresis',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12718,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPeriodHyst',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Input:Hysteresis',
                'lvMenuWeight': 31721.0,
                'name': 'CI.Period.Hyst',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PeriodDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8684,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIPeriodDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Input:Digital Filter:Enable',
                'lvMenuWeight': 31750.0,
                'name': 'CI.Period.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PeriodDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8685,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPeriodDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 31760.0,
                'name': 'CI.Period.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PeriodDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8686,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIPeriodDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 31770.0,
                'name': 'CI.Period.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PeriodDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8687,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPeriodDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 31780.0,
                'name': 'CI.Period.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PeriodDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8688,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIPeriodDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 31790.0,
                'name': 'CI.Period.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIPeriodStartingEdge',
                'cviName': 'CI_Period_StartingEdge',
                'description': 'Specifies between which edges to measure the period of the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPeriodStartingEdge',
                'dotNetName': 'PeriodStartingEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2130,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CIPeriodStartingEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Starting Edge',
                'lvMenuWeight': 31800.0,
                'name': 'CI.Period.StartingEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIPeriodMeasurementMethod',
                'cviName': 'CI_Period_MeasMeth',
                'description': 'Specifies the method to use to measure the period of the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPeriodMeasurementMethod',
                'dotNetName': 'PeriodMeasurementMethod',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6444,
                'internalDataType': 'enum tCounterFrequencyMethod',
                'internalDescription': '',
                'internalName': 'CIPeriodMeasMeth',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum CounterFrequencyMethod:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Measurement Specifications:Method',
                'lvMenuWeight': 31900.0,
                'name': 'CI.Period.MeasMeth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_EnableAveraging',
                'description': 'Specifies whether to enable <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/ConfigTimeMeas.html\');">averaging mode</see> for Sample Clock-timed period measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PeriodEnableAveraging',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 11985,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIPeriodEnableAveraging',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Measurement Specifications:Enable Averaging',
                'lvMenuWeight': 32000.0,
                'name': 'CI.Period.EnableAveraging',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_MeasTime',
                'description': 'Specifies in seconds the length of time to measure the period of the signal if &attr192C; is &val192C.10157;. Measurement accuracy increases with increased measurement time and with increased signal frequency. If you measure a high-frequency signal for too long, however, the count register could roll over, which results in an incorrect measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PeriodMeasurementTime',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6445,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPeriodMeasTime',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Measurement Specifications:High Frequency:Measurement Time',
                'lvMenuWeight': 32100.0,
                'name': 'CI.Period.MeasTime',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Period_Div',
                'description': 'Specifies the value by which to divide the input signal if &attr192C; is &val192C.10205;. The larger the divisor, the more accurate the measurement. However, too large a value could cause the count register to roll over, which results in an incorrect measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PeriodDivisor',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6446,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CIPeriodDiv',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Period:Measurement Specifications:Large Range:Divisor',
                'lvMenuWeight': 32200.0,
                'name': 'CI.Period.Div',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Term',
                'description': 'Specifies the <see href="javascript:LaunchHelp(\'daqhelp.chm::/connectCounter.html\');">input terminal</see> of the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6343,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CICountEdgesTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Input:Terminal',
                'lvMenuWeight': 32800.0,
                'name': 'CI.CountEdges.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_TermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesTerminalConfiguration',
                'dotNetName': 'CountEdgesTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12443,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CICountEdgesTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Input:Terminal Configuration',
                'lvMenuWeight': 32810.0,
                'name': 'CI.CountEdges.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the input line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesLogicLevelBehavior',
                'dotNetName': 'CountEdgesLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12444,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CICountEdgesLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Input:Logic Level Behavior',
                'lvMenuWeight': 32811.0,
                'name': 'CI.CountEdges.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_ThreshVoltage',
                'description': 'Specifies the voltage level at which to recognize waveform repetitions. Select a voltage level that occurs only once within the entire period of a waveform. You also can select a voltage that occurs only once while the voltage rises or falls.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesThresholdVoltage',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12719,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesThreshVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Input:Threshold Level',
                'lvMenuWeight': 32820.0,
                'name': 'CI.CountEdges.ThreshVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Hyst',
                'description': 'Specifies a hysteresis level to apply to &attr31AF;. When &attr697; is rising, the source signal must first fall below &attr31AF; minus the hysteresis before a rising edge is detected at &attr31AF;. When &attr697; is falling, the source signal must first rise above &attr31AF; plus the hysteresis before a falling edge is detected at &attr31AF;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesHysteresis',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12720,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesHyst',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Input:Hysteresis',
                'lvMenuWeight': 32821.0,
                'name': 'CI.CountEdges.Hyst',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8694,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CICountEdgesDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Input:Digital Filter:Enable',
                'lvMenuWeight': 32850.0,
                'name': 'CI.CountEdges.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8695,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 32860.0,
                'name': 'CI.CountEdges.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8696,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CICountEdgesDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 32870.0,
                'name': 'CI.CountEdges.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8697,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 32880.0,
                'name': 'CI.CountEdges.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8698,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CICountEdgesDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 32890.0,
                'name': 'CI.CountEdges.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CICountEdgesCountDirection',
                'cviName': 'CI_CountEdges_Dir',
                'description': 'Specifies whether to increment or decrement the counter on each edge.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesCountDirection',
                'dotNetName': 'CountEdgesCountDirection',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 1686,
                'internalDataType': 'enum tCountDirection',
                'internalDescription': '',
                'internalName': 'CICountEdgesDir',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum CountDirection1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Direction:Direction',
                'lvMenuWeight': 32900.0,
                'name': 'CI.CountEdges.Dir',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_DirTerm',
                'description': 'Specifies the source <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the digital signal that controls the count direction if &attr696; is &val696.10326;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountDirectionTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8673,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CICountEdgesDirTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Direction:Input:Terminal',
                'lvMenuWeight': 33000.0,
                'name': 'CI.CountEdges.DirTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountDir_TermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesCountDirectionTerminalConfiguration',
                'dotNetName': 'CountEdgesCountDirectionTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12445,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountDirTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Direction:Input:Terminal Configuration',
                'lvMenuWeight': 33010.0,
                'name': 'CI.CountEdges.CountDir.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountDir_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the count reset line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesCountDirectionLogicLevelBehavior',
                'dotNetName': 'CountEdgesCountDirectionLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12446,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountDirLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Direction:Input:Logic Level Behavior',
                'lvMenuWeight': 33011.0,
                'name': 'CI.CountEdges.CountDir.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountDir_ThreshVoltage',
                'description': 'Specifies the voltage level applied to the Count Direction terminal. When the signal is above this threshold, the counter counts up. When the signal is below this threshold, the counter counts down.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountDirectionThresholdVoltage',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12721,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountDirThreshVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Direction:Input:Threshold Level',
                'lvMenuWeight': 33020.0,
                'name': 'CI.CountEdges.CountDir.ThreshVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountDir_Hyst',
                'description': 'Specifies a hysteresis level applied to the &attr31B1;. The source signal must fall below &attr31B1; minus the hysteresis before a change in count direction occurs.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountDirectionHysteresis',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12722,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountDirHyst',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Direction:Input:Hysteresis',
                'lvMenuWeight': 33021.0,
                'name': 'CI.CountEdges.CountDir.Hyst',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountDir_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountDirectionDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8689,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountDirDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Direction:Input:Digital Filter:Enable',
                'lvMenuWeight': 33050.0,
                'name': 'CI.CountEdges.CountDir.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountDir_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountDirectionDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8690,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountDirDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Direction:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 33060.0,
                'name': 'CI.CountEdges.CountDir.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountDir_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountDirectionDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8691,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountDirDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Direction:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 33070.0,
                'name': 'CI.CountEdges.CountDir.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountDir_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountDirectionDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8692,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountDirDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Direction:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 33080.0,
                'name': 'CI.CountEdges.CountDir.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountDir_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountDirectionDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8693,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountDirDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Direction:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 33090.0,
                'name': 'CI.CountEdges.CountDir.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_InitialCnt',
                'description': 'Specifies the starting value from which to count.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesInitialCount',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 1688,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CICountEdgesInitialCnt',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Initial Count',
                'lvMenuWeight': 33600.0,
                'name': 'CI.CountEdges.InitialCnt',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CICountEdgesActiveEdge',
                'cviName': 'CI_CountEdges_ActiveEdge',
                'description': 'Specifies on which edges to increment or decrement the counter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesActiveEdge',
                'dotNetName': 'CountEdgesActiveEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 1687,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CICountEdgesActiveEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Active Edge',
                'lvMenuWeight': 33700.0,
                'name': 'CI.CountEdges.ActiveEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_Enable',
                'description': 'Specifies whether to reset the count on the active edge specified with &attr2FB1;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountResetEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12207,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Enable',
                'lvMenuWeight': 33800.0,
                'name': 'CI.CountEdges.CountReset.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_ResetCount',
                'description': 'Specifies the value to reset the count to.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountResetResetCount',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12208,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetResetCnt',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Reset Count',
                'lvMenuWeight': 33900.0,
                'name': 'CI.CountEdges.CountReset.ResetCnt',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_Term',
                'description': 'Specifies the input terminal of the signal to reset the count.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountResetTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12209,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Input:Terminal',
                'lvMenuWeight': 34000.0,
                'name': 'CI.CountEdges.CountReset.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_TermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesCountResetTerminalConfiguration',
                'dotNetName': 'CountEdgesCountResetTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12447,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Input:Terminal Configuration',
                'lvMenuWeight': 34010.0,
                'name': 'CI.CountEdges.CountReset.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the count reset line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesCountResetLogicLevelBehavior',
                'dotNetName': 'CountEdgesCountResetLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12448,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Input:Logic Level Behavior',
                'lvMenuWeight': 34011.0,
                'name': 'CI.CountEdges.CountReset.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_ThreshVoltage',
                'description': 'Specifies the voltage level at which to recognize the counter reset event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountResetThresholdVoltage',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12723,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetThreshVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Input:Threshold Level',
                'lvMenuWeight': 34020.0,
                'name': 'CI.CountEdges.CountReset.ThreshVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_Hyst',
                'description': 'Specifies a hysteresis level applied to &attr31B3;. When &attr2FB2; is rising, the source signal must first fall below &attr31B3; minus the hysteresis before a rising edge is detected at &attr31B3;. When &attr2FB2; is falling, the source signal must first rise above &attr31B3; plus the hysteresis before a falling edge is detected at &attr31B3;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountResetHysteresis',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12724,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetHyst',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Input:Hysteresis',
                'lvMenuWeight': 34021.0,
                'name': 'CI.CountEdges.CountReset.Hyst',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width filter to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountResetDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12211,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Input:Digital Filter:Enable',
                'lvMenuWeight': 34050.0,
                'name': 'CI.CountEdges.CountReset.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_DigFltr_MinPulseWidth',
                'description': 'Specifies the minimum pulse width the filter recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountResetDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12212,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 34060.0,
                'name': 'CI.CountEdges.CountReset.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_DigFltr_TimebaseSrc',
                'description': 'Specifies the input of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountResetDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12213,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 34070.0,
                'name': 'CI.CountEdges.CountReset.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountResetDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12214,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 34080.0,
                'name': 'CI.CountEdges.CountReset.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_CountReset_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesCountResetDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12215,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 34090.0,
                'name': 'CI.CountEdges.CountReset.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CICountEdgesCountResetActiveEdge',
                'cviName': 'CI_CountEdges_CountReset_ActiveEdge',
                'description': 'Specifies on which edge of the signal to reset the count.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesCountResetActiveEdge',
                'dotNetName': 'CountEdgesCountResetActiveEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12210,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CICountEdgesCountResetActiveEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Count Reset:Active Edge',
                'lvMenuWeight': 34100.0,
                'name': 'CI.CountEdges.CountReset.ActiveEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Gate_Enable',
                'description': 'Specifies whether to enable the functionality to gate the counter input signal for a count edges measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesGateEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CICountEdgesGate',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12525,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CICountEdgesGateEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Gate:Enable',
                'lvMenuWeight': 34150.0,
                'name': 'CI.CountEdges.Gate.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_2_CICountEdgesGate.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Gate_Term',
                'description': 'Specifies the gate terminal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesGateTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CICountEdgesGate',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12526,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CICountEdgesGateTerminal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Gate:Input:Terminal',
                'lvMenuWeight': 34152.0,
                'name': 'CI.CountEdges.Gate.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_2_CICountEdgesGate.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Gate_TermCfg',
                'description': 'Specifies the gate terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesGateTerminalConfiguration',
                'dotNetName': 'CountEdgesGateTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CICountEdgesGate',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12527,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CICountEdgesGateTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Gate:Input:Terminal Configuration',
                'lvMenuWeight': 34154.0,
                'name': 'CI.CountEdges.Gate.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_2_CICountEdgesGate.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Gate_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the gate input line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesGateLogicLevelBehavior',
                'dotNetName': 'CountEdgesGateLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CICountEdgesGate',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12528,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CICountEdgesGateLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Gate:Input:Logic Level Behavior',
                'lvMenuWeight': 34156.0,
                'name': 'CI.CountEdges.Gate.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_2_CICountEdgesGate.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Gate_ThreshVoltage',
                'description': 'Specifies the voltage level at which to recognize the counter gate signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesGateThresholdVoltage',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12725,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesGateThreshVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Gate:Input:Threshold Level',
                'lvMenuWeight': 34157.0,
                'name': 'CI.CountEdges.Gate.ThreshVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Gate_Hyst',
                'description': 'Specifies a hysteresis level applied to the &attr31B5;. When &attr30F5; is High, the source signal must fall below &attr31B5; minus the hysteresis before the counter resumes counting. When &attr30F5; is Low, the source signal must rise above &attr31B5; plus the hysteresis before the counter resumes counting.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesGateHysteresis',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIThreshold',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12726,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesGateHyst',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Gate:Input:Hysteresis',
                'lvMenuWeight': 34157.1,
                'name': 'CI.CountEdges.Gate.Hyst',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_0_CIThreshold.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Gate_DigFltrEnable',
                'description': 'Specifies whether to apply the pulse width filter to the gate input signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesGateDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CICountEdgesGate',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12529,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CICountEdgesGateDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Gate:Input:Digital Filter:Enable',
                'lvMenuWeight': 34158.0,
                'name': 'CI.CountEdges.Gate.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_2_CICountEdgesGate.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Gate_DigFltrMinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the digital filter recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesGateDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CICountEdgesGate',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12530,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesGateDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Gate:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 34160.0,
                'name': 'CI.CountEdges.Gate.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_2_CICountEdgesGate.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Gate_DigFltrTimebaseSrc',
                'description': 'Specifies the input terminal of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesGateDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CICountEdgesGate',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12531,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CICountEdgesGateDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Gate:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 34162.0,
                'name': 'CI.CountEdges.Gate.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_2_CICountEdgesGate.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_Gate_DigFltrTimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CountEdgesGateDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CICountEdgesGate',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12532,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICountEdgesGateDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Gate:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 34164.0,
                'name': 'CI.CountEdges.Gate..DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_2_CICountEdgesGate.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CountEdges_GateWhen',
                'description': 'Specifies whether the counter gates input pulses while the signal is high or low.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICountEdgesGatePauseState',
                'dotNetName': 'CountEdgesGatePauseState',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CICountEdgesGate',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12533,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'CICountEdgesGateWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Level1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Count Edges:Gate:Pause When',
                'lvMenuWeight': 34166.0,
                'name': 'CI.CountEdges.Gate.When',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_2_CICountEdgesGate.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_DutyCycle_Term',
                'description': 'Specifies the input terminal of the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DutyCycleTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIDutyCycle',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12429,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIDutyCycleTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Duty Cycle:Input:Terminal',
                'lvMenuWeight': 34200.0,
                'name': 'CI.DutyCycle.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_0_CIDutyCycle.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_DutyCycle_TermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIDutyCycleTerminalConfiguration',
                'dotNetName': 'DutyCycleTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12449,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIDutyCycleTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Duty Cycle:Input:Terminal Configuration',
                'lvMenuWeight': 34210.0,
                'name': 'CI.DutyCycle.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_DutyCycle_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the input line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIDutyCycleLogicLevelBehavior',
                'dotNetName': 'DutyCycleLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12450,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIDutyCycleLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Duty Cycle:Input:Logic Level Behavior',
                'lvMenuWeight': 34211.0,
                'name': 'CI.DutyCycle.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_DutyCycle_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width filter to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DutyCycleDigitalFilterEnabled',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIDutyCycle',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12430,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIDutyCycleDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Duty Cycle:Input:Digital Filter:Enable',
                'lvMenuWeight': 34250.0,
                'name': 'CI.DutyCycle.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_0_CIDutyCycle.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_DutyCycle_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the digital filter recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DutyCycleDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIDutyCycle',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12431,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIDutyCycleDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Duty Cycle:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 34260.0,
                'name': 'CI.DutyCycle.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_0_CIDutyCycle.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_DutyCycle_DigFltr_TimebaseSrc',
                'description': 'Specifies the input terminal of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DutyCycleDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIDutyCycle',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12432,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIDutyCycleDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Duty Cycle:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 34270.0,
                'name': 'CI.DutyCycle.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_0_CIDutyCycle.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_DutyCycle_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DutyCycleDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIDutyCycle',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12433,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIDutyCycleDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Duty Cycle:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 34280.0,
                'name': 'CI.DutyCycle.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_0_CIDutyCycle.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_DutyCycle_StartingEdge',
                'description': 'Specifies which edge of the input signal to begin the duty cycle measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIDutyCycleStartingEdge',
                'dotNetName': 'DutyCycleStartingEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIDutyCycle',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12434,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CIDutyCycleStartingEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Duty Cycle:StartingEdge',
                'lvMenuWeight': 34300.0,
                'name': 'CI.DutyCycle.StartingEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_0_CIDutyCycle.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIAngularEncoderUnits',
                'cviName': 'CI_AngEncoder_Units',
                'description': 'Specifies the units to use to return angular position measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIAngularEncoderUnits',
                'dotNetName': 'AngularEncoderUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6310,
                'internalDataType': 'enum tAngleUnits',
                'internalDescription': '',
                'internalName': 'CIAngEncoderUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AngleUnits2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Angular Encoder:Units',
                'lvMenuWeight': 35200.0,
                'name': 'CI.AngEncoder.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_AngEncoder_PulsesPerRev',
                'description': 'Specifies the number of pulses the encoder generates per revolution. This value is the number of pulses on either signal A or signal B, not the total number of pulses on both signal A and signal B.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AngularEncoderPulsesPerRevolution',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2165,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CIAngEncoderPulsesPerRev',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Angular Encoder:Pulses Per Revolution',
                'lvMenuWeight': 35300.0,
                'name': 'CI.AngEncoder.PulsesPerRev',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_AngEncoder_InitialAngle',
                'description': 'Specifies the starting angle of the encoder. This value is in the units you specify with &attr18A6;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AngularEncoderInitialAngle',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2177,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIAngEncoderInitialAngle',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Angular Encoder:Initial Angle',
                'lvMenuWeight': 35400.0,
                'name': 'CI.AngEncoder.InitialAngle',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CILinearEncoderUnits',
                'cviName': 'CI_LinEncoder_Units',
                'description': 'Specifies the units to use to return linear encoder measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CILinearEncoderUnits',
                'dotNetName': 'LinearEncoderUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6313,
                'internalDataType': 'enum tLengthUnits',
                'internalDescription': '',
                'internalName': 'CILinEncoderUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LengthUnits3:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Linear Encoder:Units',
                'lvMenuWeight': 35500.0,
                'name': 'CI.LinEncoder.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_LinEncoder_DistPerPulse',
                'description': 'Specifies the distance to measure for each pulse the encoder generates on signal A or signal B. This value is in the units you specify with &attr18A9;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LinearEncoderDistancePerPulse',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2321,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CILinEncoderDistPerPulse',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Linear Encoder:Distance Per Pulse',
                'lvMenuWeight': 35600.0,
                'name': 'CI.LinEncoder.DistPerPulse',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_LinEncoder_InitialPos',
                'description': 'Specifies the position of the encoder when the measurement begins. This value is in the units you specify with &attr18A9;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LinearEncoderInitialPosition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2325,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CILinEncoderInitialPos',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Linear Encoder:Initial Position',
                'lvMenuWeight': 35700.0,
                'name': 'CI.LinEncoder.InitialPos',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIEncoderDecodingType',
                'cviName': 'CI_Encoder_DecodingType',
                'description': 'Specifies how to count and interpret the pulses the encoder generates on signal A and signal B. &val21E6.10090;, &val21E6.10091;, and &val21E6.10092; are valid for <see href="javascript:launchSharedHelp(\'measfunds.chm::/quadEncoders.html\');">quadrature encoders</see> only. &val21E6.10313; is valid for <see href="javascript:launchSharedHelp(\'measfunds.chm::/twoPulse.html\');">two-pulse encoders</see> only.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIEncoderDecodingType',
                'dotNetName': 'EncoderDecodingType',
                'embeddedXMLHelpFiles': 'decodingtype.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8678,
                'internalDataType': 'enum tEncoderType',
                'internalDescription': '',
                'internalName': 'CIEncoderDecodingType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum EncoderType2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Decoding Type',
                'lvMenuWeight': 35800.0,
                'name': 'CI.Encoder.DecodingType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_AInputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which signal A is connected.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderAInputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8605,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIEncoderAInputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:A Input:Terminal',
                'lvMenuWeight': 35900.0,
                'name': 'CI.Encoder.AInputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_AInputTermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIEncoderAInputTerminalConfiguration',
                'dotNetName': 'EncoderAInputTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12451,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIEncoderAInputTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:A Input:Terminal Configuration',
                'lvMenuWeight': 35910.0,
                'name': 'CI.Encoder.AInput.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_AInputLogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the input line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIEncoderAInputLogicLevelBehavior',
                'dotNetName': 'EncoderAInputLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12452,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIEncoderAInputLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:A Input:Logic Level Behavior',
                'lvMenuWeight': 35911.0,
                'name': 'CI.Encoder.AInput.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_AInput_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderAInputDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8699,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIEncoderAInputDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:A Input:Digital Filter:Enable',
                'lvMenuWeight': 36000.0,
                'name': 'CI.Encoder.AInput.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_AInput_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderAInputDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8700,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIEncoderAInputDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:A Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 36100.0,
                'name': 'CI.Encoder.AInput.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_AInput_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderAInputDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8701,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIEncoderAInputDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:A Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 36200.0,
                'name': 'CI.Encoder.AInput.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_AInput_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderAInputDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8702,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIEncoderAInputDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:A Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 36300.0,
                'name': 'CI.Encoder.AInput.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_AInput_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderAInputDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8703,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIEncoderAInputDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:A Input:Digital Synchronization:Enable',
                'lvMenuWeight': 36400.0,
                'name': 'CI.Encoder.AInput.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_BInputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which signal B is connected.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderBInputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8606,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIEncoderBInputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:B Input:Terminal',
                'lvMenuWeight': 36500.0,
                'name': 'CI.Encoder.BInputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_BInputTermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIEncoderBInputTerminalConfiguration',
                'dotNetName': 'EncoderBInputTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12453,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIEncoderBInputTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:B Input:Terminal Configuration',
                'lvMenuWeight': 36510.0,
                'name': 'CI.Encoder.BInput.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_BInputLogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the input line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIEncoderBInputLogicLevelBehavior',
                'dotNetName': 'EncoderBInputLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12454,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIEncoderBInputLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:B Input:Logic Level Behavior',
                'lvMenuWeight': 36511.0,
                'name': 'CI.Encoder.BInput.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_BInput_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderBInputDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8704,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIEncoderBInputDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:B Input:Digital Filter:Enable',
                'lvMenuWeight': 36600.0,
                'name': 'CI.Encoder.BInput.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_BInput_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderBInputDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8705,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIEncoderBInputDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:B Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 36700.0,
                'name': 'CI.Encoder.BInput.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_BInput_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderBInputDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8706,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIEncoderBInputDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:B Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 36800.0,
                'name': 'CI.Encoder.BInput.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_BInput_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderBInputDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8707,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIEncoderBInputDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:B Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 36900.0,
                'name': 'CI.Encoder.BInput.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_BInput_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderBInputDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8708,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIEncoderBInputDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:B Input:Digital Synchronization:Enable',
                'lvMenuWeight': 37000.0,
                'name': 'CI.Encoder.BInput.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_ZInputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which signal Z is connected.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderZInputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8607,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIEncoderZInputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Z Input:Terminal',
                'lvMenuWeight': 37100.0,
                'name': 'CI.Encoder.ZInputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_ZInputTermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIEncoderZInputTerminalConfiguration',
                'dotNetName': 'EncoderZInputTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12455,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIEncoderZInputTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Z Input:Terminal Configuration',
                'lvMenuWeight': 37110.0,
                'name': 'CI.Encoder.ZInput.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_ZInputLogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the input line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIEncoderZInputLogicLevelBehavior',
                'dotNetName': 'EncoderZInputLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12456,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIEncoderZInputLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Z Input:Logic Level Behavior',
                'lvMenuWeight': 37111.0,
                'name': 'CI.Encoder.ZInput.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_ZInput_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderZInputDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8709,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIEncoderZInputDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Z Input:Digital Filter:Enable',
                'lvMenuWeight': 37200.0,
                'name': 'CI.Encoder.ZInput.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_ZInput_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderZInputDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8710,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIEncoderZInputDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Z Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 37300.0,
                'name': 'CI.Encoder.ZInput.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_ZInput_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderZInputDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8711,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIEncoderZInputDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Z Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 37400.0,
                'name': 'CI.Encoder.ZInput.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_ZInput_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderZInputDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8712,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIEncoderZInputDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Z Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 37500.0,
                'name': 'CI.Encoder.ZInput.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_ZInput_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderZInputDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8713,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIEncoderZInputDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Z Input:Digital Synchronization:Enable',
                'lvMenuWeight': 37600.0,
                'name': 'CI.Encoder.ZInput.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_ZIndexEnable',
                'description': 'Specifies whether to use <see href="javascript:launchSharedHelp(\'measfunds.chm::/zIndexing.html\');">Z indexing</see> for the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderZIndexEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2192,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIEncoderZIndexEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Z Index Enable',
                'lvMenuWeight': 37700.0,
                'name': 'CI.Encoder.ZIndexEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Encoder_ZIndexVal',
                'description': 'Specifies the value to which to reset the measurement when signal Z is high and signal A and signal B are at the states you specify with &attr889;. Specify this value in the units of the measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EncoderZIndexValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2184,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIEncoderZIndexVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Z Index Value',
                'lvMenuWeight': 37800.0,
                'name': 'CI.Encoder.ZIndexVal',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIEncoderZIndexPhase',
                'cviName': 'CI_Encoder_ZIndexPhase',
                'description': 'Specifies the states at which signal A and signal B must be while signal Z is high for NI-DAQmx to reset the measurement. If signal Z is never high while signal A and signal B are high, for example, you must choose a phase other than &val889.10040;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIEncoderZIndexPhase',
                'dotNetName': 'EncoderZIndexPhase',
                'embeddedXMLHelpFiles': 'zindexphase.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2185,
                'internalDataType': 'enum tEncoderZIndexPhase',
                'internalDescription': '',
                'internalName': 'CIEncoderZIndexPhase',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum EncoderZIndexPhase1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Position:Z Index Phase',
                'lvMenuWeight': 37900.0,
                'name': 'CI.Encoder.ZIndexPhase',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIPulseWidthUnits',
                'cviName': 'CI_PulseWidth_Units',
                'description': 'Specifies the units to use to return pulse width measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseWidthUnits',
                'dotNetName': 'PulseWidthUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2083,
                'internalDataType': 'enum tTimeUnits',
                'internalDescription': '',
                'internalName': 'CIPulseWidthUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TimeUnits3:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse Width:Units',
                'lvMenuWeight': 38000.0,
                'name': 'CI.PulseWidth.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_PulseWidth_Term',
                'description': 'Specifies the <see href="javascript:LaunchHelp(\'daqhelp.chm::/connectCounter.html\');">input terminal</see> of the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseWidthTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6314,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIPulseWidthTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse Width:Input:Terminal',
                'lvMenuWeight': 38100.0,
                'name': 'CI.PulseWidth.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_PulseWidth_TermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseWidthTerminalConfiguration',
                'dotNetName': 'PulseWidthTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12457,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIPulseWidthTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse Width:Input:Terminal Configuration',
                'lvMenuWeight': 38110.0,
                'name': 'CI.PulseWidth.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_PulseWidth_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the input line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseWidthLogicLevelBehavior',
                'dotNetName': 'PulseWidthLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12458,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIPulseWidthLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse Width:Input:Logic Level Behavior',
                'lvMenuWeight': 38111.0,
                'name': 'CI.PulseWidth.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_PulseWidth_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseWidthDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8714,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIPulseWidthDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse Width:Input:Digital Filter:Enable',
                'lvMenuWeight': 38150.0,
                'name': 'CI.PulseWidth.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_PulseWidth_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseWidthDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8715,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPulseWidthDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse Width:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 38160.0,
                'name': 'CI.PulseWidth.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_PulseWidth_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseWidthDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8716,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIPulseWidthDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse Width:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 38170.0,
                'name': 'CI.PulseWidth.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_PulseWidth_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseWidthDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8717,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPulseWidthDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse Width:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 38180.0,
                'name': 'CI.PulseWidth.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_PulseWidth_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseWidthDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8718,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIPulseWidthDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse Width:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 38190.0,
                'name': 'CI.PulseWidth.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIPulseWidthStartingEdge',
                'cviName': 'CI_PulseWidth_StartingEdge',
                'description': 'Specifies on which edge of the input signal to begin each pulse width measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseWidthStartingEdge',
                'dotNetName': 'PulseWidthStartingEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2085,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CIPulseWidthStartingEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse Width:Starting Edge',
                'lvMenuWeight': 38200.0,
                'name': 'CI.PulseWidth.StartingEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CITimestampUnits',
                'cviName': 'CI_Timestamp_Units',
                'description': 'Specifies the units to use to return timestamp measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CITimestampUnits',
                'dotNetName': 'TimestampUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8883,
                'internalDataType': 'enum tTimeUnits',
                'internalDescription': '',
                'internalName': 'CITimestampUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TimeUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Timestamp:Units',
                'lvMenuWeight': 38800.0,
                'name': 'CI.Timestamp.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Timestamp_Term',
                'description': 'Specifies the <see href="javascript:LaunchHelp(\'daqhelp.chm::/connectCounter.html\');">input terminal</see> of the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12345,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CITimestampTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Timestamp:Input Terminal',
                'lvMenuWeight': 38900.0,
                'name': 'CI.Timestamp.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Timestamp_Edge',
                'description': 'Indicates the edge of the input terminal to timestamp in a streaming task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12346,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CITimestampEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Timestamp:Edge',
                'lvMenuWeight': 39000.0,
                'name': 'CI.Timestamp.Edge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Timestamp_Timescale',
                'description': 'Indicates the timescale that will be used when returning time to a user.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12347,
                'internalDataType': 'enum tTimescale',
                'internalDescription': '',
                'internalName': 'CITimestampTimescale',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Timescale:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Timestamp:Timescale',
                'lvMenuWeight': 39100.0,
                'name': 'CI.Timestamp.Timescale',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Timestamp_InitialSeconds',
                'description': 'Specifies the number of seconds that elapsed since the beginning of the current year. This value is ignored if  &attr1092; is &val1092.10070;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TimestampInitialSeconds',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8884,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CITimestampInitialSeconds',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Timestamp:Initial Seconds',
                'lvMenuWeight': 39110.0,
                'name': 'CI.Timestamp.InitialSeconds',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIGpsSyncMethod',
                'cviName': 'CI_GPS_SyncMethod',
                'description': 'Specifies the method to use to synchronize the counter to a GPS receiver.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIGpsSyncMethod',
                'dotNetName': 'GpsSyncMethod',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4242,
                'internalDataType': 'enum tGpsSignalType',
                'internalDescription': '',
                'internalName': 'CIGPSSyncMethod',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum GpsSignalType1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Timestamp:GPS:Synchronization Method',
                'lvMenuWeight': 39120.0,
                'name': 'CI.GPS.SyncMethod',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_GPS_SyncSrc',
                'description': 'Specifies the <see href="javascript:LaunchHelp(\'daqhelp.chm::/connectCounter.html\');">terminal</see> to which the GPS synchronization signal is connected.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'GpsSyncSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4243,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIGPSSyncSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Timestamp:GPS:Synchronization Source',
                'lvMenuWeight': 39130.0,
                'name': 'CI.GPS.SyncSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_AngEncoder_Units',
                'description': 'Specifies the units to use to return angular velocity counter measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIVelocityAngularEncoderUnits',
                'dotNetName': 'VelocityAngularEncoderUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12504,
                'internalDataType': 'enum tAngularVelocityUnits',
                'internalDescription': '',
                'internalName': 'CIVelocityAngEncoderUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AngularVelocityUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:Angular Encoder:Units',
                'lvMenuWeight': 39145.0,
                'name': 'CI.Velocity.AngEncoder.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_AngEncoder_PulsesPerRev',
                'description': 'Specifies the number of pulses the encoder generates per revolution. This value is the number of pulses on either signal A or signal B, not the total number of pulses on both signal A and signal B.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityAngularEncoderPulsesPerRevolution',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12505,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CIVelocityAngEncoderPulsesPerRev',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:Angular Encoder:Pulses Per Revolution',
                'lvMenuWeight': 39147.0,
                'name': 'CI.Velocity.AngEncoder.PulsesPerRev',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_LinEncoder_Units',
                'description': 'Specifies the units to use to return linear encoder velocity measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIVelocityLinearEncoderUnits',
                'dotNetName': 'VelocityLinearEncoderUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12506,
                'internalDataType': 'enum tVelocityUnits',
                'internalDescription': '',
                'internalName': 'CIVelocityLinEncoderUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum VelocityUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:Linear Encoder:Units',
                'lvMenuWeight': 39149.0,
                'name': 'CI.Velocity.LinEncoder.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_LinEncoder_DistPerPulse',
                'description': 'Specifies the distance to measure for each pulse the encoder generates on signal A or signal B. This value is in the units you specify in CI.Velocity.LinEncoder.DistUnits.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityLinearEncoderDistancePerPulse',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12507,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIVelocityLinEncoderDistPerPulse',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:Linear Encoder:Distance per Pulse',
                'lvMenuWeight': 39151.0,
                'name': 'CI.Velocity.LinEncoder.DistPerPulse',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_DecodingType',
                'description': 'Specifies how to count and interpret the pulses the encoder generates on signal A and signal B. X1, X2, and X4 are valid for quadrature encoders only. Two Pulse Counting is valid for two-pulse encoders only.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIVelocityEncoderType',
                'dotNetName': 'VelocityDecodingType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12508,
                'internalDataType': 'enum tEncoderType',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderDecodingType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum EncoderType2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:Decoding Type',
                'lvMenuWeight': 39153.0,
                'name': 'CI.Velocity.Encoder.DecodingType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_AInputTerm',
                'description': 'Specifies the terminal to which signal A is connected.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityAInputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12509,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderAInputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:A Input:Terminal',
                'lvMenuWeight': 39155.0,
                'name': 'CI.Velocity.AInput.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_AInputTermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIVelocityAInputTerminalConfiguration',
                'dotNetName': 'VelocityAInputTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12510,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderAInputTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:A Input:Terminal Configuration',
                'lvMenuWeight': 39157.0,
                'name': 'CI.Velocity.AInput.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_AInputLogicLvlBehavior',
                'description': 'Specifies the logic level behavior of the input terminal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIVelocityAInputLogicLevelBehavior',
                'dotNetName': 'VelocityAInputLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12511,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderAInputLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:A Input:Logic Level Behavior',
                'lvMenuWeight': 39159.0,
                'name': 'CI.Velocity.AInput.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_AInputDigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width filter to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityAInputDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12512,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderAInputDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:A Input:Digital Filter:Enable',
                'lvMenuWeight': 39161.0,
                'name': 'CI.Velocity.AInput.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_AInputDigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the digital filter recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityAInputDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12513,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderAInputDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:A Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 39163.0,
                'name': 'CI.Velocity.AInput.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_AInputDigFltr_TimebaseSrc',
                'description': 'Specifies the input terminal of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityAInputDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12514,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderAInputDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:A Input:Digital Filter:Timebase Source',
                'lvMenuWeight': 39165.0,
                'name': 'CI.Velocity.AInput.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_AInputDigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityAInputDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12515,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderAInputDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:A Input:Digital Filter:Timebase Rate',
                'lvMenuWeight': 39167.0,
                'name': 'CI.Velocity.AInput.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_BInputTerm',
                'description': 'Specifies the terminal to which signal B is connected.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityBInputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12516,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderBInputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:B Input:Terminal',
                'lvMenuWeight': 39169.0,
                'name': 'CI.Velocity.BInput.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_BInputTermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIVelocityBInputTerminalConfiguration',
                'dotNetName': 'VelocityBInputTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12517,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderBInputTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:B Input:Terminal Configuration',
                'lvMenuWeight': 39171.0,
                'name': 'CI.Velocity.BInput.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_BInputLogicLvlBehavior',
                'description': 'Specifies the logic level behavior of the input terminal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIVelocityBInputLogicLevelBehavior',
                'dotNetName': 'VelocityBInputLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12518,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderBInputLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:B Input:Logic Level Behavior',
                'lvMenuWeight': 39173.0,
                'name': 'CI.Velocity.BInput.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_BInputDigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width filter to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityBInputDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12519,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderBInputDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:B Input:Digital Filter:Enable',
                'lvMenuWeight': 39175.0,
                'name': 'CI.Velocity.BInput.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_BInputDigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the digital filter recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityBInputDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12520,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderBInputDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:B Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 39177.0,
                'name': 'CI.Velocity.BInput.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_BInputDigFltr_TimebaseSrc',
                'description': 'Specifies the input terminal of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityBInputDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12521,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderBInputDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:B Input:Digital Filter:Timebase Source',
                'lvMenuWeight': 39179.0,
                'name': 'CI.Velocity.BInput.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Encoder_BInputDigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityBInputDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12522,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIVelocityEncoderBInputDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:B Input:Digital Filter:Timebase Rate',
                'lvMenuWeight': 39181.0,
                'name': 'CI.Velocity.BInput.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_MeasTime',
                'description': 'Specifies in seconds the length of time to measure the velocity of the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityMeasurementTime',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12523,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIVelocityMeasTime',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:Advanced:Measurement Time',
                'lvMenuWeight': 39183.0,
                'name': 'CI.Velocity.MeasTime',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Velocity_Div',
                'description': 'Specifies the value by which to divide the input signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VelocityDivisor',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIVelocity',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12524,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CIVelocityDiv',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Velocity:Advanced:Divisor',
                'lvMenuWeight': 39185.0,
                'name': 'CI.Velocity.Div',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.1.0_1_CIVelocity.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CITwoEdgeSeparationUnits',
                'cviName': 'CI_TwoEdgeSep_Units',
                'description': 'Specifies the units to use to return two-edge separation measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CITwoEdgeSeparationUnits',
                'dotNetName': 'TwoEdgeSeparationUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6316,
                'internalDataType': 'enum tTimeUnits',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TimeUnits3:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:Units',
                'lvMenuWeight': 39200.0,
                'name': 'CI.TwoEdgeSep.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_FirstTerm',
                'description': 'Specifies the source <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the digital signal that starts each measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationFirstTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6317,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepFirstTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:First:Input:Terminal',
                'lvMenuWeight': 39300.0,
                'name': 'CI.TwoEdgeSep.First.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_FirstTermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CITwoEdgeSeparationFirstTerminalConfiguration',
                'dotNetName': 'TwoEdgeSeparationFirstTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12459,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepFirstTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:First:Input:Terminal Configuration',
                'lvMenuWeight': 39310.0,
                'name': 'CI.TwoEdgeSep.First.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_FirstLogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the input line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CITwoEdgeSeparationFirstLogicLevelBehavior',
                'dotNetName': 'TwoEdgeSeparationFirstLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12460,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepFirstLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:First:Input:Logic Level Behavior',
                'lvMenuWeight': 39311.0,
                'name': 'CI.TwoEdgeSep.First.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_First_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationFirstEdgeDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8719,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepFirstDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:First:Input:Digital Filter:Enable',
                'lvMenuWeight': 39350.0,
                'name': 'CI.TwoEdgeSep.First.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_First_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationFirstEdgeDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8720,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepFirstDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:First:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 39360.0,
                'name': 'CI.TwoEdgeSep.First.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_First_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8721,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepFirstDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:First:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 39370.0,
                'name': 'CI.TwoEdgeSep.First.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_First_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationFirstEdgeDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8722,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepFirstDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:First:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 39380.0,
                'name': 'CI.TwoEdgeSep.First.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_First_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationFirstEdgeDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8723,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepFirstDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:First:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 39390.0,
                'name': 'CI.TwoEdgeSep.First.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CITwoEdgeSeparationFirstEdge',
                'cviName': 'CI_TwoEdgeSep_FirstEdge',
                'description': 'Specifies on which edge of the first signal to start each measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CITwoEdgeSeparationFirstEdge',
                'dotNetName': 'TwoEdgeSeparationFirstEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2099,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepFirstEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:First:Edge',
                'lvMenuWeight': 39400.0,
                'name': 'CI.TwoEdgeSep.First.Edge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_SecondTerm',
                'description': 'Specifies the source <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the digital signal that stops each measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationSecondTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6318,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepSecondTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:Second:Input:Terminal',
                'lvMenuWeight': 40000.0,
                'name': 'CI.TwoEdgeSep.Second.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_SecondTermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CITwoEdgeSeparationSecondTerminalConfiguration',
                'dotNetName': 'TwoEdgeSeparationSecondTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12461,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepSecondTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:Second:Input:Terminal Configuration',
                'lvMenuWeight': 40010.0,
                'name': 'CI.TwoEdgeSep.Second.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_SecondLogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the count reset line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CITwoEdgeSeparationSecondLogicLevelBehavior',
                'dotNetName': 'TwoEdgeSeparationSecondLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12462,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepSecondLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:Second:Input:Logic Level Behavior',
                'lvMenuWeight': 40011.0,
                'name': 'CI.TwoEdgeSep.Second.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_Second_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationSecondEdgeDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8724,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepSecondDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:Second:Input:Digital Filter:Enable',
                'lvMenuWeight': 40050.0,
                'name': 'CI.TwoEdgeSep.Second.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationSecondEdgeDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8725,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepSecondDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:Second:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 40060.0,
                'name': 'CI.TwoEdgeSep.Second.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8726,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepSecondDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:Second:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 40070.0,
                'name': 'CI.TwoEdgeSep.Second.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_Second_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationSecondEdgeDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8727,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepSecondDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:Second:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 40080.0,
                'name': 'CI.TwoEdgeSep.Second.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TwoEdgeSep_Second_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TwoEdgeSeparationSecondEdgeDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8728,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepSecondDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:Second:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 40090.0,
                'name': 'CI.TwoEdgeSep.Second.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CITwoEdgeSeparationSecondEdge',
                'cviName': 'CI_TwoEdgeSep_SecondEdge',
                'description': 'Specifies on which edge of the second signal to stop each measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CITwoEdgeSeparationSecondEdge',
                'dotNetName': 'TwoEdgeSeparationSecondEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 2100,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CITwoEdgeSepSecondEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Two Edge Separation:Second:Edge',
                'lvMenuWeight': 40100.0,
                'name': 'CI.TwoEdgeSep.Second.Edge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CISemiPeriodUnits',
                'cviName': 'CI_SemiPeriod_Units',
                'description': 'Specifies the units to use to return semi-period measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CISemiPeriodUnits',
                'dotNetName': 'SemiPeriodUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6319,
                'internalDataType': 'enum tTimeUnits',
                'internalDescription': '',
                'internalName': 'CISemiPeriodUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TimeUnits3:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Semi-Period:Units',
                'lvMenuWeight': 40700.0,
                'name': 'CI.SemiPeriod.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_SemiPeriod_Term',
                'description': 'Specifies the <see href="javascript:LaunchHelp(\'daqhelp.chm::/connectCounter.html\');">input terminal</see> of the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SemiPeriodTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6320,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CISemiPeriodTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Semi-Period:Input:Terminal',
                'lvMenuWeight': 40800.0,
                'name': 'CI.SemiPeriod.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_SemiPeriod_TermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CISemiPeriodTerminalConfiguration',
                'dotNetName': 'SemiPeriodTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12463,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CISemiPeriodTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Semi-Period:Input:Terminal Configuration',
                'lvMenuWeight': 40810.0,
                'name': 'CI.SemiPeriod.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_SemiPeriod_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the count reset line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CISemiPeriodLogicLevelBehavior',
                'dotNetName': 'SemiPeriodLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12464,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CISemiPeriodLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Semi-Period:Input:Logic Level Behavior',
                'lvMenuWeight': 40811.0,
                'name': 'CI.SemiPeriod.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_SemiPeriod_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SemiPeriodDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8729,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CISemiPeriodDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Semi-Period:Input:Digital Filter:Enable',
                'lvMenuWeight': 40850.0,
                'name': 'CI.SemiPeriod.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_SemiPeriod_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SemiPeriodDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8730,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CISemiPeriodDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Semi-Period:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 40860.0,
                'name': 'CI.SemiPeriod.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_SemiPeriod_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SemiPeriodDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8731,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CISemiPeriodDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Semi-Period:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 40870.0,
                'name': 'CI.SemiPeriod.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_SemiPeriod_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SemiPeriodDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8732,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CISemiPeriodDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Semi-Period:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 40880.0,
                'name': 'CI.SemiPeriod.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_SemiPeriod_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SemiPeriodDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8733,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CISemiPeriodDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Semi-Period:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 40890.0,
                'name': 'CI.SemiPeriod.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CISemiPeriodStartingEdge',
                'cviName': 'CI_SemiPeriod_StartingEdge',
                'description': 'Specifies on which edge of the input signal to begin semi-period measurement. Semi-period measurements alternate between high time and low time, starting on this edge.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CISemiPeriodStartingEdge',
                'dotNetName': 'SemiPeriodStartingEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8958,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CISemiPeriodStartingEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Semi-Period:Starting Edge',
                'lvMenuWeight': 40900.0,
                'name': 'CI.SemiPeriod.StartingEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIPulseFrequencyUnits',
                'cviName': 'CI_Pulse_Freq_Units',
                'description': 'Specifies the units to use to return pulse specifications in terms of frequency.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseFrequencyUnits',
                'dotNetName': 'PulseFrequencyUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12043,
                'internalDataType': 'enum tFrequencyUnits',
                'internalDescription': '',
                'internalName': 'CIPulseFreqUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FrequencyUnits2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Frequency:Units',
                'lvMenuWeight': 41500.0,
                'name': 'CI.Pulse.Freq.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Freq_Term',
                'description': 'Specifies the <see href="javascript:LaunchHelp(\'daqhelp.chm::/connectCounter.html\');">input terminal</see> of the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseFrequencyTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12036,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIPulseFreqTerminal',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Frequency:Input:Terminal',
                'lvMenuWeight': 41600.0,
                'name': 'CI.Pulse.Freq.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Freq_TermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseFrequencyTerminalConfiguration',
                'dotNetName': 'PulseFrequencyTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12465,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIPulseFreqTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Frequency:Input:Terminal Configuration',
                'lvMenuWeight': 41610.0,
                'name': 'CI.Pulse.Freq.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Freq_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the count reset line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseFrequencyLogicLevelBehavior',
                'dotNetName': 'PulseFrequencyLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12466,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIPulseFreqLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Frequency:Input:Logic Level Behavior',
                'lvMenuWeight': 41611.0,
                'name': 'CI.Pulse.Freq.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Freq_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseFrequencyDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12038,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIPulseFreqDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Frequency:Input:Digital Filter:Enable',
                'lvMenuWeight': 41650.0,
                'name': 'CI.Pulse.Freq.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Freq_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseFrequencyDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12039,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPulseFreqDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Frequency:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 41660.0,
                'name': 'CI.Pulse.Freq.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Freq_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseFrequencyDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12040,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIPulseFreqDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Frequency:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 41670.0,
                'name': 'CI.Pulse.Freq.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Freq_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseFrequencyDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12041,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPulseFreqDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Frequency:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 41680.0,
                'name': 'CI.Pulse.Freq.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Freq_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseFrequencyDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12042,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIPulseFreqDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Frequency:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 41690.0,
                'name': 'CI.Pulse.Freq.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIPulseFrequencyStartingEdge',
                'cviName': 'CI_Pulse_Freq_Start_Edge',
                'description': 'Specifies on which edge of the input signal to begin pulse measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseFrequencyStartingEdge',
                'dotNetName': 'PulseFrequencyStartingEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12037,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CIPulseFreqStartEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Frequency:Starting Edge',
                'lvMenuWeight': 41700.0,
                'name': 'CI.Pulse.Freq.StartingEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIPulseTimeUnits',
                'cviName': 'CI_Pulse_Time_Units',
                'description': 'Specifies the units to use to return pulse specifications in terms of high time and low time.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseTimeUnits',
                'dotNetName': 'PulseTimeUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12051,
                'internalDataType': 'enum tTimeUnits',
                'internalDescription': '',
                'internalName': 'CIPulseTimeUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TimeUnits2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Time:Units',
                'lvMenuWeight': 42300.0,
                'name': 'CI.Pulse.Time.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Time_Term',
                'description': 'Specifies the <see href="javascript:LaunchHelp(\'daqhelp.chm::/connectCounter.html\');">input terminal</see> of the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTimeTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12044,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIPulseTimeTerminal',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Time:Input:Terminal',
                'lvMenuWeight': 42400.0,
                'name': 'CI.Pulse.Time.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Time_TermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseTimeTerminalConfiguration',
                'dotNetName': 'PulseTimeTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12467,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIPulseTimeTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Time:Input:Terminal Configuration',
                'lvMenuWeight': 42410.0,
                'name': 'CI.Pulse.Time.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Time_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the count reset line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseTimeLogicLevelBehavior',
                'dotNetName': 'PulseTimeLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12468,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIPulseTimeLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Time:Input:Logic Level Behavior',
                'lvMenuWeight': 42411.0,
                'name': 'CI.Pulse.Time.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Time_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTimeDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12046,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIPulseTimeDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Time:Input:Digital Filter:Enable',
                'lvMenuWeight': 42450.0,
                'name': 'CI.Pulse.Time.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Time_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTimeDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12047,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPulseTimeDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Time:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 42460.0,
                'name': 'CI.Pulse.Time.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Time_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTimeDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12048,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIPulseTimeDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Time:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 42470.0,
                'name': 'CI.Pulse.Time.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Time_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTimeDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12049,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPulseTimeDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Time:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 42480.0,
                'name': 'CI.Pulse.Time.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Time_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTimeDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12050,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIPulseTimeDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Time:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 42490.0,
                'name': 'CI.Pulse.Time.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIPulseTimeStartingEdge',
                'cviName': 'CI_Pulse_Time_StartEdge',
                'description': 'Specifies on which edge of the input signal to begin pulse measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseTimeStartingEdge',
                'dotNetName': 'PulseTimeStartingEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12045,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CIPulseTimeStartingEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Time:Starting Edge',
                'lvMenuWeight': 42500.0,
                'name': 'CI.Pulse.Time.StartingEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Ticks_Term',
                'description': 'Specifies the <see href="javascript:LaunchHelp(\'daqhelp.chm::/connectCounter.html\');">input terminal</see> of the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTicksTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12052,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIPulseTicksTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Ticks:Input:Terminal',
                'lvMenuWeight': 43100.0,
                'name': 'CI.Pulse.Ticks.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Ticks_TermCfg',
                'description': 'Specifies the input terminal configuration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseTicksTerminalConfiguration',
                'dotNetName': 'PulseTicksTerminalConfiguration',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12469,
                'internalDataType': 'enum tTerminalConfiguration',
                'internalDescription': '',
                'internalName': 'CIPulseTicksTermCfg',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputTermCfg2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Ticks:Input:Terminal Configuration',
                'lvMenuWeight': 43110.0,
                'name': 'CI.Pulse.Ticks.TermCfg',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Ticks_LogicLvlBehavior',
                'description': 'Specifies the logic level behavior on the count reset line.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseTicksLogicLevelBehavior',
                'dotNetName': 'PulseTicksLogicLevelBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12470,
                'internalDataType': 'enum tLogicLvlBehavior',
                'internalDescription': '',
                'internalName': 'CIPulseTicksLogicLvlBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LogicLvlBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Ticks:Input:Logic Level Behavior',
                'lvMenuWeight': 43111.0,
                'name': 'CI.Pulse.Ticks.LogicLvlBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Ticks_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal to measure.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTicksDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12054,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIPulseTicksDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Ticks:Input:Digital Filter:Enable',
                'lvMenuWeight': 43150.0,
                'name': 'CI.Pulse.Ticks.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Ticks_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTicksDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12055,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPulseTicksDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Ticks:Input:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 43160.0,
                'name': 'CI.Pulse.Ticks.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Ticks_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTicksDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12056,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CIPulseTicksDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Ticks:Input:Digital Filter:Timebase:Source',
                'lvMenuWeight': 43170.0,
                'name': 'CI.Pulse.Ticks.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Ticks_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTicksDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12057,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIPulseTicksDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Ticks:Input:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 43180.0,
                'name': 'CI.Pulse.Ticks.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Pulse_Ticks_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTicksDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12058,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIPulseTicksDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Ticks:Input:Digital Synchronization:Enable',
                'lvMenuWeight': 43190.0,
                'name': 'CI.Pulse.Ticks.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIPulseTicksStartingEdge',
                'cviName': 'CI_Pulse_Ticks_StartEdge',
                'description': 'Specifies on which edge of the input signal to begin pulse measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIPulseTicksStartingEdge',
                'dotNetName': 'PulseTicksStartingEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12053,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CIPulseTicksStartingEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:Pulse:Ticks:Starting Edge',
                'lvMenuWeight': 43200.0,
                'name': 'CI.Pulse.Ticks.StartingEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CtrTimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the timebase to use for the counter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseSource',
                'embeddedXMLHelpFiles': 'CITimebaseSrc.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 323,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CICtrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Counter Timebase:Source',
                'lvMenuWeight': 44100.0,
                'name': 'CI.CtrTimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CtrTimebaseRate',
                'description': 'Specifies in Hertz the frequency of the counter timebase. Specifying the rate of a counter timebase allows you to take measurements in terms of time or frequency rather than in ticks of the timebase. If you use an external timebase and do not specify the rate, you can take measurements only in terms of ticks of the timebase.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6322,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICtrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Counter Timebase:Rate',
                'lvMenuWeight': 44200.0,
                'name': 'CI.CtrTimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CICounterTimebaseActiveEdge',
                'cviName': 'CI_CtrTimebaseActiveEdge',
                'description': 'Specifies whether a timebase cycle is from rising edge to rising edge or from falling edge to falling edge.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CICounterTimebaseActiveEdge',
                'dotNetName': 'CounterTimebaseActiveEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 322,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'CICtrTimebaseActiveEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Counter Timebase:Active Edge',
                'lvMenuWeight': 44300.0,
                'name': 'CI.CtrTimebaseActiveEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CtrTimebase_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8817,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CICtrTimebaseDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Counter Timebase:Digital Filter:Enable',
                'lvMenuWeight': 44400.0,
                'name': 'CI.CtrTimebase.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CtrTimebase_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8818,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICtrTimebaseDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Counter Timebase:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 44500.0,
                'name': 'CI.CtrTimebase.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CtrTimebase_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8819,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CICtrTimebaseDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Counter Timebase:Digital Filter:Timebase:Source',
                'lvMenuWeight': 44600.0,
                'name': 'CI.CtrTimebase.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CtrTimebase_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8820,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CICtrTimebaseDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Counter Timebase:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 44700.0,
                'name': 'CI.CtrTimebase.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CtrTimebase_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8821,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CICtrTimebaseDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Counter Timebase:Digital Synchronization:Enable',
                'lvMenuWeight': 44800.0,
                'name': 'CI.CtrTimebase.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_ThreshVoltage',
                'description': 'Specifies the digital threshold value in Volts for high and low input transitions. Some devices do not support this for differential channels.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'VoltageThresholdLevel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CITermCfg',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12471,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIThreshVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Input Configuration:Voltage Threshold Level',
                'lvMenuWeight': 44810.0,
                'name': 'CI.ThreshVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_2_CITermCfg.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Filter_Enable',
                'description': 'Specifies the corresponding filter enable/disable state.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FilterEnabled',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIFiltering',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12727,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIFilterEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Filter:Enable',
                'lvMenuWeight': 44850.0,
                'name': 'CI.Filter.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_1_CIFiltering.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Filter_Freq',
                'description': 'Specifies the corresponding filter frequency (cutoff or center) of the filter response.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FilterFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIFiltering',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12728,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIFilterFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Filter:Frequency',
                'lvMenuWeight': 44851.0,
                'name': 'CI.Filter.Freq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_1_CIFiltering.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Filter_Response',
                'description': 'Specifies the corresponding filter response and defines the shape of the filter response.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIFilterResponse',
                'dotNetName': 'FilterResponse',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIFiltering',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12729,
                'internalDataType': 'enum tFilterResponse',
                'internalDescription': '',
                'internalName': 'CIFilterResponse',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FilterResponse1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Filter:Response',
                'lvMenuWeight': 44852.0,
                'name': 'CI.Filter.Response',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_1_CIFiltering.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Filter_Order',
                'description': 'Specifies the corresponding filter order and defines the slope of the filter response.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FilterOrder',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIFiltering',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12730,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CIFilterOrder',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Filter:Order',
                'lvMenuWeight': 44853.0,
                'name': 'CI.Filter.Order',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_1_CIFiltering.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_FilterDelay',
                'description': 'Indicates the amount of time between when the input signal transitions and when the filtered sample is read by the host device. This value is in the units specified with &attr31BC;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FilterDelay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIFiltering',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12731,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIFilterDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Filter:Filter Delay',
                'lvMenuWeight': 44854.0,
                'name': 'CI.FilterDelay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_1_CIFiltering.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_FilterDelayUnits',
                'description': 'Specifies the units of &attr31BB;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIFilterDelayUnits',
                'dotNetName': 'FilterDelayUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIFiltering',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12732,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'CIFilterDelayUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits4:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:Filter:Filter Delay Units',
                'lvMenuWeight': 44855.0,
                'name': 'CI.FilterDelayUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.6.0_1_CIFiltering.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '20.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Count',
                'description': 'Indicates the current value of the count register.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Count',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 328,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CICount',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Count',
                'lvMenuWeight': 44900.0,
                'name': 'CI.Count',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIOutputState',
                'cviName': 'CI_OutputState',
                'description': 'Indicates the current state of the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/CounterParts.html\');">out terminal</see> of the counter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIOutputState',
                'dotNetName': 'OutputState',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 329,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'CIOutputState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum Level1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Output State',
                'lvMenuWeight': 45000.0,
                'name': 'CI.OutputState',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_TCReached',
                'description': 'Indicates whether the counter rolled over. When you query this property, NI-DAQmx resets it to &false;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TerminalCountReached',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 336,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CITCReached',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Terminal Count Reached',
                'lvMenuWeight': 45100.0,
                'name': 'CI.TCReached',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_CtrTimebaseMasterTimebaseDiv',
                'description': 'Specifies the divisor for an external counter timebase. You can divide the counter timebase in order to measure slower signals without causing the count register to roll over.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseMasterTimebaseDivisor',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6323,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CICtrTimebaseMasterTimebaseDiv',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Counter Timebase Master Timebase Divisor',
                'lvMenuWeight': 45200.0,
                'name': 'CI.CtrTimebaseMasterTimebaseDiv',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_SampClkOverrunBehavior',
                'description': 'Specifies the counter behavior when data is read but a new value was not detected during a sample clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CISampleClockOverrunBehavior',
                'dotNetName': 'SampleClockOverrunBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIMultiCounterRead',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12435,
                'internalDataType': 'enum tSampClkOverrunBehavior',
                'internalDescription': '',
                'internalName': 'CISampClkOverrunBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SampClkOverrunBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Sample Clock Overrun Behavior',
                'lvMenuWeight': 45210.0,
                'name': 'CI.SampClkOverrunBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_1_CIMultiCounterRead.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_SampClkOverrunSentinelVal',
                'description': 'Specifies the sentinel value returned when the No New Sample Behavior is set to Sentinel Value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockOverrunSentinelValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIMultiCounterRead',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12436,
                'internalDataType': 'i32',
                'internalDescription': '',
                'internalName': 'CISampClkOverrunSentinelVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Sample Clock Overrun Sentinel Value',
                'lvMenuWeight': 45211.0,
                'name': 'CI.SampClkOverrunSentinelVal',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_1_CIMultiCounterRead.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIDataTransferMechanism',
                'cviName': 'CI_DataXferMech',
                'description': 'Specifies the data transfer mode for the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIDataTransferMechanism',
                'dotNetName': 'DataTransferMechanism',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 512,
                'internalDataType': 'enum tDataTransferActiveTransferMode',
                'internalDescription': '',
                'internalName': 'CIDataXferMech',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DataTransferMechanism:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Advanced:Data Transfer and Memory:Data Transfer Mechanism',
                'lvMenuWeight': 45500.0,
                'name': 'CI.DataXferMech',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'CIDataTransferRequestCondition',
                'cviName': 'CI_DataXferReqCond',
                'description': 'Specifies under what condition to transfer data from the onboard memory of the device to the buffer.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'CIDataTransferRequestCondition',
                'dotNetName': 'DataTransferRequestCondition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12027,
                'internalDataType': 'enum tInputDataTransferCondition',
                'internalDescription': '',
                'internalName': 'CIDataXferReqCond',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum InputDataTransferCondition:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Advanced:Data Transfer and Memory:Data Transfer Request Condition',
                'lvMenuWeight': 45600.0,
                'name': 'CI.DataXferReqCond',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_UsbXferReqSize',
                'description': 'Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10898,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CIUsbXferReqSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Advanced:Data Transfer and Memory:USB Transfer Request Size',
                'lvMenuWeight': 45700.0,
                'name': 'CI.UsbXferReqSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_UsbXferReqCount',
                'description': 'Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestCount',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12292,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CIUsbXferReqCount',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Advanced:Data Transfer and Memory:USB Transfer Request Count',
                'lvMenuWeight': 45800.0,
                'name': 'CI.UsbXferReqCount',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_MemMapEnable',
                'description': 'Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MemoryMappingEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 11986,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIMemMapEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable',
                'lvMenuWeight': 45900.0,
                'name': 'CI.MemMapEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_NumPossiblyInvalidSamps',
                'description': 'Indicates the number of samples that the device might have overwritten before it could transfer them to the buffer.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'NumberPossiblyInvalidSamples',
                'embeddedXMLHelpFiles': 'numinvalidsamps.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6460,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CINumPossiblyInvalidSamps',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Advanced:Data Transfer and Memory:Number Of Possibly Invalid Samples',
                'lvMenuWeight': 46000.0,
                'name': 'CI.NumPossiblyInvalidSamps',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_DupCountPrevent',
                'description': 'Specifies whether to enable <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/dupCountPrevention.html\');">duplicate count prevention</see> for the channel. Duplicate count prevention is enabled by default. Setting  &attr2239; disables duplicate count prevention unless you explicitly enable it.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DuplicateCountPrevention',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8620,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CIDupCountPrevention',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Advanced:Duplicate Count Prevention',
                'lvMenuWeight': 46100.0,
                'name': 'CI.DupCountPrevention',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCIChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CI_Prescaler',
                'description': 'Specifies the divisor to apply to the signal you connect to the counter source terminal. Scaled data that you read takes this setting into account. You should use a prescaler only when you connect an external signal to the counter source terminal and when that signal has a higher frequency than the fastest onboard timebase. Setting this value disables duplicate count prevention unless you explicitly set &attr21AC; to &true;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Prescaler',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8761,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CIPrescaler',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Advanced:Prescaler',
                'lvMenuWeight': 46200.0,
                'name': 'CI.Prescaler',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CI_MaxMeasPeriod',
                'description': 'Specifies the maximum period (in seconds) in which the device will recognize signals. For frequency measurements, a signal with a higher period than the one set in this property will return 0 Hz. For duty cycle, the device will return 0 or 1 depending on the state of the line during the max defined period of time. Period measurements will return NaN. Pulse width measurement will return zero.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'CIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MaximumMeasurementPeriod',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'CIMultiCounterRead',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12437,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CIMaxMeasPeriod',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Input:General Properties:More:Advanced:Maximum Measurable Period',
                'lvMenuWeight': 46210.0,
                'name': 'CI.MaxMeasPeriod',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_1_CIMultiCounterRead.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'COOutputType',
                'cviName': 'CO_OutputType',
                'description': 'Indicates how to define pulses generated on the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'COOutputType',
                'dotNetName': 'OutputType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6325,
                'internalDataType': 'enum tUsageTypeCO',
                'internalDescription': '',
                'internalName': 'COOutputType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum COOutputType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Output Type',
                'lvMenuWeight': 46300.0,
                'name': 'CO.OutputType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'COPulseIdleState',
                'cviName': 'CO_Pulse_IdleState',
                'description': 'Specifies the resting state of the output terminal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'COPulseIdleState',
                'dotNetName': 'PulseIdleState',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4464,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'COPulseIdleState',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Level1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Idle State',
                'lvMenuWeight': 46400.0,
                'name': 'CO.Pulse.IdleState',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Pulse_Term',
                'description': 'Specifies on which <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to generate pulses.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6369,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'COPulseTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Output Terminal',
                'lvMenuWeight': 46500.0,
                'name': 'CO.Pulse.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'COPulseTimeUnits',
                'cviName': 'CO_Pulse_Time_Units',
                'description': 'Specifies the units in which to define high and low pulse time.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'COPulseTimeUnits',
                'dotNetName': 'PulseTimeUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6358,
                'internalDataType': 'enum tTimeUnits',
                'internalDescription': '',
                'internalName': 'COPulseTimeUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TimeUnits2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Time:Units',
                'lvMenuWeight': 46600.0,
                'name': 'CO.Pulse.Time.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Pulse_HighTime',
                'description': 'Specifies the amount of time that the pulse is at a high voltage. This value is in the units you specify with &attr18D6; or when you create the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseHighTime',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6330,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'COPulseHighTime',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Time:High Time',
                'lvMenuWeight': 46700.0,
                'name': 'CO.Pulse.HighTime',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Pulse_LowTime',
                'description': 'Specifies the amount of time that the pulse is at a low voltage. This value is in the units you specify with &attr18D6; or when you create the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseLowTime',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6331,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'COPulseLowTime',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Time:Low Time',
                'lvMenuWeight': 46800.0,
                'name': 'CO.Pulse.LowTime',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Pulse_Time_InitialDelay',
                'description': 'Specifies in seconds the amount of time to wait before generating the first pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTimeInitialDelay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6332,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'COPulseTimeInitialDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Time:Initial Delay',
                'lvMenuWeight': 46900.0,
                'name': 'CO.Pulse.Time.InitialDelay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Pulse_DutyCyc',
                'description': 'Specifies the duty cycle of the pulses. The duty cycle of a signal is the width of the pulse divided by period. NI-DAQmx uses this ratio and the pulse frequency to determine the width of the pulses and the delay between pulses.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseDutyCycle',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4470,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'COPulseDutyCyc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Frequency:Duty Cycle',
                'lvMenuWeight': 47000.0,
                'name': 'CO.Pulse.DutyCyc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'COPulseFrequencyUnits',
                'cviName': 'CO_Pulse_Freq_Units',
                'description': 'Specifies the units in which to define pulse frequency.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'COPulseFrequencyUnits',
                'dotNetName': 'PulseFrequencyUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6357,
                'internalDataType': 'enum tFrequencyUnits',
                'internalDescription': '',
                'internalName': 'COPulseFreqUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum FrequencyUnits2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Frequency:Units',
                'lvMenuWeight': 47100.0,
                'name': 'CO.Pulse.Freq.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Pulse_Freq',
                'description': 'Specifies the frequency of the pulses to generate. This value is in the units you specify with &attr18D5; or when you create the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4472,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'COPulseFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Frequency:Frequency',
                'lvMenuWeight': 47200.0,
                'name': 'CO.Pulse.Freq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Pulse_Freq_InitialDelay',
                'description': 'Specifies in seconds the amount of time to wait before generating the first pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseFrequencyInitialDelay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 665,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'COPulseFreqInitialDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Frequency:Initial Delay',
                'lvMenuWeight': 47300.0,
                'name': 'CO.Pulse.Freq.InitialDelay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Pulse_HighTicks',
                'description': 'Specifies the number of ticks the pulse is high.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseHighTicks',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4457,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'COPulseHighTicks',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Ticks:High Ticks',
                'lvMenuWeight': 47400.0,
                'name': 'CO.Pulse.HighTicks',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Pulse_LowTicks',
                'description': 'Specifies the number of ticks the pulse is low.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseLowTicks',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 4465,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'COPulseLowTicks',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Ticks:Low Ticks',
                'lvMenuWeight': 47500.0,
                'name': 'CO.Pulse.LowTicks',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Pulse_Ticks_InitialDelay',
                'description': 'Specifies the number of ticks to wait before generating the first pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseTicksInitialDelay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 664,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'COPulseTicksInitialDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:Pulse:Ticks:Initial Delay',
                'lvMenuWeight': 47600.0,
                'name': 'CO.Pulse.Ticks.InitialDelay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_CtrTimebaseSrc',
                'description': 'Specifies the terminal of the timebase to use for the counter. Typically, NI-DAQmx uses one of the internal counter timebases when generating pulses. Use this property to specify an external timebase and produce custom pulse widths that are not possible using the internal timebases.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 825,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'COCtrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:Counter Timebase:Source',
                'lvMenuWeight': 47700.0,
                'name': 'CO.CtrTimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_CtrTimebaseRate',
                'description': 'Specifies in Hertz the frequency of the counter timebase. Specifying the rate of a counter timebase allows you to define output pulses in seconds rather than in ticks of the timebase. If you use an external timebase and do not specify the rate, you can define output pulses only in ticks of the timebase.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6338,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'COCtrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:Counter Timebase:Rate',
                'lvMenuWeight': 47800.0,
                'name': 'CO.CtrTimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'COCounterTimebaseActiveEdge',
                'cviName': 'CO_CtrTimebaseActiveEdge',
                'description': 'Specifies whether a timebase cycle is from rising edge to rising edge or from falling edge to falling edge.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'COCounterTimebaseActiveEdge',
                'dotNetName': 'CounterTimebaseActiveEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 833,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'COCtrTimebaseActiveEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:Counter Timebase:Active Edge',
                'lvMenuWeight': 47900.0,
                'name': 'CO.CtrTimebaseActiveEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_CtrTimebase_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8822,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'COCtrTimebaseDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:Counter Timebase:Digital Filter:Enable',
                'lvMenuWeight': 48000.0,
                'name': 'CO.CtrTimebase.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_CtrTimebase_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8823,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'COCtrTimebaseDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:Counter Timebase:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 48100.0,
                'name': 'CO.CtrTimebase.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_CtrTimebase_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8824,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'COCtrTimebaseDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:Counter Timebase:Digital Filter:Timebase:Source',
                'lvMenuWeight': 48200.0,
                'name': 'CO.CtrTimebase.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_CtrTimebase_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8825,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'COCtrTimebaseDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:Counter Timebase:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 48300.0,
                'name': 'CO.CtrTimebase.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_CtrTimebase_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8826,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'COCtrTimebaseDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:Counter Timebase:Digital Synchronization:Enable',
                'lvMenuWeight': 48400.0,
                'name': 'CO.CtrTimebase.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Count',
                'description': 'Indicates the current value of the count register.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Count',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 659,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'COCount',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Count',
                'lvMenuWeight': 48500.0,
                'name': 'CO.Count',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'COOutputState',
                'cviName': 'CO_OutputState',
                'description': 'Indicates the current state of the output terminal of the counter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'COOutputState',
                'dotNetName': 'OutputState',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 660,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'COOutputState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum Level1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Output State',
                'lvMenuWeight': 48600.0,
                'name': 'CO.OutputState',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_AutoIncrCnt',
                'description': 'Specifies a number of timebase ticks by which to increase the time spent in the idle state for each successive pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AutoIncrementCount',
                'embeddedXMLHelpFiles': 'autoinccnt.xml',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 661,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'COAutoIncrCnt',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Auto Increment Count',
                'lvMenuWeight': 48700.0,
                'name': 'CO.AutoIncrCnt',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_CtrTimebaseMasterTimebaseDiv',
                'description': 'Specifies the divisor for an external counter timebase. You can divide the counter timebase in order to generate slower signals without causing the count register to roll over.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterTimebaseMasterTimebaseDivisor',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6339,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'COCtrTimebaseMasterTimebaseDiv',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Counter Timebase Master Timebase Divisor',
                'lvMenuWeight': 48800.0,
                'name': 'CO.CtrTimebaseMasterTimebaseDiv',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_PulseDone',
                'description': 'Indicates if the task completed pulse generation. Use this value for retriggerable pulse generation when you need to determine if the device generated the current pulse. For retriggerable tasks, when you query this property, NI-DAQmx resets it to &false;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PulseDone',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6414,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'COPulseDone',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Pulse Done',
                'lvMenuWeight': 48900.0,
                'name': 'CO.PulseDone',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_EnableInitialDelayOnRetrigger',
                'description': 'Specifies whether to apply the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/pulseTrainPolarity.html\');">initial delay</see> to retriggered pulse trains.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'EnableInitialDelayOnRetrigger',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 11977,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'COEnableInitialDelayOnRetrigger',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Enable Initial Delay on Retrigger',
                'lvMenuWeight': 49000.0,
                'name': 'CO.EnableInitialDelayOnRetrigger',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'COConstrainedGenerationMode',
                'cviName': 'CO_ConstrainedGenMode',
                'description': 'Specifies constraints to apply when the counter generates pulses. Constraining the counter reduces the device resources required for counter operation. Constraining the counter can also allow additional analog or counter tasks on the device to run concurrently. For continuous counter tasks, NI-DAQmx consumes no device resources when the counter is constrained. For finite counter tasks, resource use increases with the frequency regardless of the constraint mode. However, fixed frequency constraints significantly reduce resource usage, and fixed duty cycle constraint marginally reduces it.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'COConstrainedGenerationMode',
                'dotNetName': 'ConstrainedGenerationMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10738,
                'internalDataType': 'enum tConstrainedGenMode',
                'internalDescription': '',
                'internalName': 'COConstrainedGenMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ConstrainedGenMode:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Advanced:Constrained Generation Mode',
                'lvMenuWeight': 49100.0,
                'name': 'CO.ConstrainedGenMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_UseOnlyOnBrdMem',
                'description': 'Specifies whether to write samples directly to the onboard memory of the device, bypassing the memory buffer. Generally, you cannot update onboard memory directly after you start the task. Onboard memory includes data FIFOs.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UseOnlyOnBoardMemory',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 11979,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'COUseOnlyOnBrdMem',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Advanced:Data Transfer and Memory:Use Only Onboard Memory',
                'lvMenuWeight': 49200.0,
                'name': 'CO.UseOnlyOnBrdMem',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'CODataTransferMechanism',
                'cviName': 'CO_DataXferMech',
                'description': 'Specifies the data transfer mode for the device. For buffered operations, use DMA or USB Bulk. For non-buffered operations, use Polled.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'CODataTransferMechanism',
                'dotNetName': 'DataTransferMechanism',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 11980,
                'internalDataType': 'enum tDataTransferActiveTransferMode',
                'internalDescription': '',
                'internalName': 'CODataXferMech',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DataTransferMechanism:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Advanced:Data Transfer and Memory:Data Transfer Mechanism',
                'lvMenuWeight': 49300.0,
                'name': 'CO.DataXferMech',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'CODataTransferRequestCondition',
                'cviName': 'CO_DataXferReqCond',
                'description': 'Specifies under what condition to transfer data from the buffer to the onboard memory of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'CODataTransferRequestCondition',
                'dotNetName': 'DataTransferRequestCondition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 11981,
                'internalDataType': 'enum tOutputDataTransferCondition',
                'internalDescription': '',
                'internalName': 'CODataXferReqCond',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum OutputDataTransferCondition:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Advanced:Data Transfer and Memory:Data Transfer Request Condition',
                'lvMenuWeight': 49400.0,
                'name': 'CO.DataXferReqCond',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_UsbXferReqSize',
                'description': 'Specifies the maximum size of a USB transfer request in bytes. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 10899,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'COUsbXferReqSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Advanced:Data Transfer and Memory:USB Transfer Request Size',
                'lvMenuWeight': 49500.0,
                'name': 'CO.UsbXferReqSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'CO_UsbXferReqCount',
                'description': 'Specifies the maximum number of simultaneous USB transfers used to stream data. Modify this value to affect performance under different combinations of operating system and device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UsbTransferRequestCount',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12293,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'COUsbXferReqCount',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Advanced:Data Transfer and Memory:USB Transfer Request Count',
                'lvMenuWeight': 49600.0,
                'name': 'CO.UsbXferReqCount',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_MemMapEnable',
                'description': 'Specifies for NI-DAQmx to map hardware registers to the memory space of the application, if possible. Normally, NI-DAQmx maps hardware registers to memory accessible only to the kernel. Mapping the registers to the memory space of the application increases performance. However, if the application accesses the memory space mapped to the registers, it can adversely affect the operation of the device and possibly result in a system crash.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MemoryMappingEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 11987,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'COMemMapEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Advanced:Data Transfer and Memory:Memory Mapping for Programmed IO Enable',
                'lvMenuWeight': 49700.0,
                'name': 'CO.MemMapEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_Prescaler',
                'description': 'Specifies the divisor to apply to the signal you connect to the counter source terminal. Pulse generations defined by frequency or time take this setting into account, but pulse generations defined by ticks do not. You should use a prescaler only when you connect an external signal to the counter source terminal and when that signal has a higher frequency than the fastest onboard timebase.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Prescaler',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8813,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'COPrescaler',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Advanced:Prescaler',
                'lvMenuWeight': 49800.0,
                'name': 'CO.Prescaler',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxCOChannel',
                'cppEnumName': 'N/A',
                'cviName': 'CO_RdyForNewVal',
                'description': 'Indicates whether the counter is ready for new continuous pulse train values.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'COChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadyForNewValue',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 8959,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'CORdyForNewVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Counter Output:General Properties:More:Advanced:Ready For New Value',
                'lvMenuWeight': 49900.0,
                'name': 'CO.RdyForNewVal',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Pwr_Voltage_Setpoint',
                'description': 'Specifies the constant output voltage, in volts. Can be set while a task is running. Can be read at any time during a task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PowerVoltageSetpoint',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12756,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'PwrVoltageSetpoint',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Power:Voltage:Setpoint',
                'lvMenuWeight': 49900.0,
                'name': 'Pwr.Voltage.Setpoint',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '21.3.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '21.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Pwr_Voltage_DevScalingCoeff',
                'description': 'Indicates the coefficients of the polynomial equation that NI-DAQmx uses to scale values from the native format of the device to volts. Can be read at any time during a task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PowerVoltageScalingCoefficients',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12761,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'PwrVoltageDevScalingCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Power:Voltage:Advanced:Device Scaling Coefficients',
                'lvMenuWeight': 49901.0,
                'name': 'Pwr.Voltage.DevScalingCoeff',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '21.8.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '21.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Pwr_Current_Setpoint',
                'description': 'Specifies the output current, in amperes. If the load draws current greater than the specified value, the device will operate in Constant Current mode.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PowerCurrentSetpoint',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12757,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'PwrCurrentSetpoint',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Power:Current:Setpoint',
                'lvMenuWeight': 49910.0,
                'name': 'Pwr.Current.Setpoint',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '21.3.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '21.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Pwr_Current_DevScalingCoeff',
                'description': 'Indicates the coefficients of the polynomial equation that NI-DAQmx uses to scale values from the native format of the device to amperes. Can be read at any time during a task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PowerCurrentScalingCoefficients',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12762,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'PwrCurrentDevScalingCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Power:Current:Advanced:Device Scaling Coefficients',
                'lvMenuWeight': 49911.0,
                'name': 'Pwr.Current.DevScalingCoeff',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '21.8.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '21.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Pwr_OutputEnable',
                'description': 'Specifies whether to enable or disable power module output. Can be set while a task is running. Can be read at any time during a task. When a task is running, the output is enabled immediately. Otherwise, the output is not enabled until the task enters the Committed state.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PowerOutputEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12758,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PwrOutputEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Power:Output Enable',
                'lvMenuWeight': 49920.0,
                'name': 'Pwr.OutputEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '21.3.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '21.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Pwr_OutputState',
                'description': 'Indicates power channel operating state. Can be read at any time during a task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'PowerOutputState',
                'dotNetName': 'PowerOutputState',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12759,
                'internalDataType': 'enum tPowerOutputState',
                'internalDescription': '',
                'internalName': 'PwrOutputState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum PowerOutputState:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Power:Output State',
                'lvMenuWeight': 49930.0,
                'name': 'Pwr.OutputState',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '21.5.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '21.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Pwr_IdleOutputBehavior',
                'description': 'Specifies whether to disable the output or maintain the existing value after the task is uncommitted.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'PowerIdleOutputBehavior',
                'dotNetName': 'PowerIdleOutputBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12760,
                'internalDataType': 'enum tPowerIdleOutputBehavior',
                'internalDescription': '',
                'internalName': 'PwrIdleOutputBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum PowerIdleOutputBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Power:Idle Output Behavior',
                'lvMenuWeight': 49940.0,
                'name': 'Pwr.IdleOutputBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '21.5.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '21.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Pwr_RemoteSense',
                'description': 'Specifies whether to use local or remote sense to sense the output voltage. DAQmx Read (Power) will return remote or local voltage based on the Remote Sense attribute value. Reading this property will return the user-defined value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'Sense',
                'dotNetName': 'PowerRemoteSense',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12763,
                'internalDataType': 'enum tSense',
                'internalDescription': '',
                'internalName': 'PwrRemoteSense',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Sense:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Power:Remote Sense:Remote Sense',
                'lvMenuWeight': 49950.0,
                'name': 'Pwr.RemoteSense',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '21.8.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '21.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Nav_CustomScaleName',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/customScales.html\');">custom scale</see> for the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12348,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'NavCustomScaleName',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQScale',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Navigation:Custom Scale Name',
                'lvMenuWeight': 50000.0,
                'name': 'Nav.CustomScaleName',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ScaleName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Nav_MeasType',
                'description': 'Indicates the measurement to take with the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12349,
                'internalDataType': 'enum tUsageTypeNav',
                'internalDescription': '',
                'internalName': 'NavMeasType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum NavMeasurementType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Navigation:Measurement Type',
                'lvMenuWeight': 50100.0,
                'name': 'Nav.MeasType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Nav_Lat_Units',
                'description': 'Specifies the units to use to return latitude measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12351,
                'internalDataType': 'enum tAngleUnits',
                'internalDescription': '',
                'internalName': 'NavLatUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AngleUnits3:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Navigation:Latitude:Units',
                'lvMenuWeight': 50200.0,
                'name': 'Nav.Lat.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Nav_Long_Units',
                'description': 'Specifies the units to use to return longitude measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12352,
                'internalDataType': 'enum tAngleUnits',
                'internalDescription': '',
                'internalName': 'NavLongUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AngleUnits3:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Navigation:Longitude:Units',
                'lvMenuWeight': 50300.0,
                'name': 'Nav.Long.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Nav_Alt_Units',
                'description': 'Specifies the units to use to return altitude measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12350,
                'internalDataType': 'enum tLengthUnits',
                'internalDescription': '',
                'internalName': 'NavAltUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LengthUnits4:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Navigation:Altitude:Units',
                'lvMenuWeight': 50400.0,
                'name': 'Nav.Alt.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Nav_SpeedOverGround_Units',
                'description': 'Specifies the units to use to return speed over ground measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12353,
                'internalDataType': 'enum tVelocityUnits',
                'internalDescription': '',
                'internalName': 'NavSpeedOverGroundUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum VelocityUnits2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Navigation:Speed Over Ground:Units',
                'lvMenuWeight': 50500.0,
                'name': 'Nav.SpeedOverGround.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Nav_Track_Units',
                'description': 'Specifies the units to use to return track measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12354,
                'internalDataType': 'enum tAngleUnits',
                'internalDescription': '',
                'internalName': 'NavTrackUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AngleUnits1:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Navigation:Track:Units',
                'lvMenuWeight': 50600.0,
                'name': 'Nav.Track.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Nav_VertVelocity_Units',
                'description': 'Specifies the units to use to return vertical velocity measurements from the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12355,
                'internalDataType': 'enum tVelocityUnits',
                'internalDescription': '',
                'internalName': 'NavVertVelocityUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum VelocityUnits2:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Navigation:Vertical Velocity:Units',
                'lvMenuWeight': 50700.0,
                'name': 'Nav.VertVelocity.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': True,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Nav_Timestamp_Units',
                'description': 'Specifies the units to use to return timestamp measurements.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12356,
                'internalDataType': 'enum tTimeUnits',
                'internalDescription': '',
                'internalName': 'NavTimestampUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TimeUnits:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Navigation:Timestamp:Units',
                'lvMenuWeight': 50800.0,
                'name': 'Nav.Timestamp.Units',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Nav_Timestamp_Timescale',
                'description': 'Indicates the timescale that will be used when returning time to a user.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12357,
                'internalDataType': 'enum tTimescale',
                'internalDescription': '',
                'internalName': 'NavTimestampTimescale',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Timescale:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'Navigation:Timestamp:Timescale',
                'lvMenuWeight': 50900.0,
                'name': 'Nav.Timestamp.Timescale',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxChannel',
                'cppEnumName': 'ChannelType',
                'cviName': 'ChanType',
                'description': 'Indicates the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/virtChanTypes.html\');">type</see> of the virtual channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Channel',
                'dotNetEnumName': 'ChannelType',
                'dotNetName': 'Type',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6271,
                'internalDataType': 'enum tChannelType',
                'internalDescription': '',
                'internalName': 'ChanType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum ChannelType:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'General Properties:Channel Type',
                'lvMenuWeight': 51000.0,
                'name': 'ChanType',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChanName',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">name</see> of the physical channel upon which this virtual channel is based.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Channel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PhysicalName',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Channel',
                'id': 6389,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'PhysicalChanName',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQPhysChan',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'General Properties:Physical Channel Name',
                'lvMenuWeight': 51100.0,
                'name': 'PhysicalChanName',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxChannel',
                'cppEnumName': 'N/A',
                'cviName': 'ChanDescr',
                'description': 'Specifies a user-defined description for the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Channel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Description',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 6438,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'ChanDescr',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'General Properties:Description',
                'lvMenuWeight': 51200.0,
                'name': 'Descr',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'ChanIsGlobal',
                'description': 'Indicates whether the channel is a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\')">global channel</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Channel',
                'id': 8964,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ChanIsGlobal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'General Properties:Is Global',
                'lvMenuWeight': 51300.0,
                'name': 'IsGlobal',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Chan_SyncUnlockBehavior',
                'description': 'Specifies the action to take if the target loses its synchronization to the grand master.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Channel',
                'dotNetEnumName': 'ChannelSynchronizationUnlockBehavior',
                'dotNetName': 'SynchronizationUnlockBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Channel',
                'extraTypes': '',
                'feature': 'TimeAPISyncUnlocked',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Channel',
                'id': 12604,
                'internalDataType': 'enum tSyncUnlockBehavior',
                'internalDescription': '',
                'internalName': 'ChanSyncUnlockBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SyncUnlockBehavior:iL',
                'lvFilter': [
                    'Channel'
                ],
                'lvMenuName': 'General Properties:Synchronization Unlock Behavior',
                'lvMenuWeight': 51350.0,
                'name': 'SyncUnlockBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_2_TimeAPISyncUnlocked.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Channel properties to configure virtual channels.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Channel',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'SampleQuantityMode',
                'cviName': 'SampQuant_SampMode',
                'description': 'Specifies if a task acquires or generates a finite number of samples or if it continuously acquires or generates samples.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'SampleQuantityMode',
                'dotNetName': 'SampleQuantityMode',
                'embeddedXMLHelpFiles': 'samplemode.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4864,
                'internalDataType': 'enum tAcquisitionType',
                'internalDescription': '',
                'internalName': 'SampQuantSampMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AcquisitionType:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Quantity:Sample Mode',
                'lvMenuWeight': 0.0,
                'name': 'SampQuant.SampMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampQuant_SampPerChan',
                'description': 'Specifies the number of samples to acquire or generate for each channel if &attr1300; is &val1300.10178;. If &attr1300; is &val1300.10123;, NI-DAQmx uses this value to <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/bufferSize.html\');">determine the buffer size</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SamplesPerChannel',
                'embeddedXMLHelpFiles': 'sampsperchan.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4880,
                'internalDataType': 'u64',
                'internalDescription': '',
                'internalName': 'SampQuantSampPerChan',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Quantity:Samples Per Channel',
                'lvMenuWeight': 100.0,
                'name': 'SampQuant.SampPerChan',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'SampleTimingType',
                'cviName': 'SampTimingType',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/smpleTimingType.html\');">type of sample timing</see> to use for the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'SampleTimingType',
                'dotNetName': 'SampleTimingType',
                'embeddedXMLHelpFiles': 'samptimingtype.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4935,
                'internalDataType': 'enum tSampleTimingType',
                'internalDescription': '',
                'internalName': 'SampTimingType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SampleTimingType:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Timing Type',
                'lvMenuWeight': 400.0,
                'name': 'SampTimingType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_Rate',
                'description': 'Specifies the sampling rate in samples per channel per second. If you use an external source for the Sample Clock, set this input to the maximum expected rate of that clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4932,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SampClkRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Rate',
                'lvMenuWeight': 500.0,
                'name': 'SampClk.Rate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_MaxRate',
                'description': 'Indicates the maximum Sample Clock rate supported by the task, based on other timing settings. For output tasks, the maximum Sample Clock rate is the maximum rate of the DAC. For input tasks, NI-DAQmx calculates the maximum sampling rate differently for <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/MultiSimulSamp.html\');">multiplexed devices than simultaneous sampling devices</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockMaximumRate',
                'embeddedXMLHelpFiles': 'sampclkmaxrate.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8904,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SampClkMaxRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Maximum Rate',
                'lvMenuWeight': 600.0,
                'name': 'SampClk.MaxRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_Src',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the Sample Clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 6226,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'SampClkSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Source',
                'lvMenuWeight': 700.0,
                'name': 'SampClk.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'SampleClockActiveEdge',
                'cviName': 'SampClk_ActiveEdge',
                'description': 'Specifies on which edge of a clock pulse sampling takes place. This property is useful primarily when the signal you use as the Sample Clock is not a periodic clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'SampleClockActiveEdge',
                'dotNetName': 'SampleClockActiveEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4865,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'SampClkActiveEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Active Edge',
                'lvMenuWeight': 800.0,
                'name': 'SampClk.ActiveEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'SampleClockOverrunBehavior',
                'cviName': 'SampClk_OverrunBehavior',
                'description': 'Specifies the action to take if Sample Clock edges occur faster than the device can handle them.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'SampleClockOverrunBehavior',
                'dotNetName': 'SampleClockOverrunBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12028,
                'internalDataType': 'enum tOverflowBehavior',
                'internalDescription': '',
                'internalName': 'SampClkOverrunBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum OverflowBehavior:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Overrun Behavior',
                'lvMenuWeight': 900.0,
                'name': 'SampClk.OverrunBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'SampleClockUnderflowBehavior',
                'cviName': 'SampClk_UnderflowBehavior',
                'description': 'Specifies the action to take when the onboard memory of the device becomes empty. In either case, the sample clock does not stop.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'SampleClockUnderflowBehavior',
                'dotNetName': 'SampleClockUnderflowBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 10593,
                'internalDataType': 'enum tUnderflowBehavior',
                'internalDescription': '',
                'internalName': 'SampClkUnderflowBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum UnderflowBehavior:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Underflow Behavior',
                'lvMenuWeight': 1000.0,
                'name': 'SampClk.UnderflowBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_TimebaseDiv',
                'description': 'Specifies the number of Sample Clock Timebase pulses needed to produce a single Sample Clock pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockTimebaseDivisor',
                'embeddedXMLHelpFiles': 'sampclktimebasediv.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 6379,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SampClkTimebaseDiv',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Timebase Divisor',
                'lvMenuWeight': 1100.0,
                'name': 'SampClk.TimebaseDiv',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_Term',
                'description': 'Indicates the name of the internal Sample Clock terminal for the task. This property does not return the name of the Sample Clock source terminal specified with &attr1852;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12059,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'SampClkTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Terminal',
                'lvMenuWeight': 1200.0,
                'name': 'SampClk.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_Timebase_Rate',
                'description': 'Specifies the rate of the Sample Clock Timebase. Some applications require that you specify a rate when you use any signal other than the onboard Sample Clock Timebase. NI-DAQmx requires this rate to calculate other timing parameters.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4867,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SampClkTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Timebase:Rate',
                'lvMenuWeight': 1400.0,
                'name': 'SampClk.Timebase.Rate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_Timebase_Src',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the Sample Clock Timebase.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4872,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'SampClkTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Timebase:Source',
                'lvMenuWeight': 1500.0,
                'name': 'SampClk.Timebase.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'SampleClockTimebaseActiveEdge',
                'cviName': 'SampClk_Timebase_ActiveEdge',
                'description': 'Specifies on which edge to recognize a Sample Clock Timebase pulse. This property is useful primarily when the signal you use as the Sample Clock Timebase is not a periodic clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'SampleClockTimebaseActiveEdge',
                'dotNetName': 'SampleClockTimebaseActiveEdge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 6380,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'SampClkTimebaseActiveEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Timebase:Active Edge',
                'lvMenuWeight': 1600.0,
                'name': 'SampClk.Timebase.ActiveEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_Timebase_MasterTimebaseDiv',
                'description': 'Specifies the number of pulses of the Master Timebase needed to produce a single pulse of the Sample Clock Timebase.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockTimebaseMasterTimebaseDivisor',
                'embeddedXMLHelpFiles': 'mastertimebasediv.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4869,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SampClkTimebaseMasterTimebaseDiv',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Timebase:Master Timebase Divisor',
                'lvMenuWeight': 1700.0,
                'name': 'SampClk.Timebase.MasterTimebaseDiv',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClkTimebase_Term',
                'description': 'Indicates the name of the internal Sample Clock Timebase terminal for the task. This property does not return the name of the Sample Clock Timebase source terminal specified with &attr1308;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockTimebaseTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12060,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'SampClkTimebaseTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Timebase:Terminal',
                'lvMenuWeight': 1800.0,
                'name': 'SampClk.Timebase.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockDigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8734,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'SampClkDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Digital Filter:Enable',
                'lvMenuWeight': 1900.0,
                'name': 'SampClk.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockDigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8735,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SampClkDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 2000.0,
                'name': 'SampClk.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockDigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8736,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'SampClkDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Digital Filter:Timebase:Source',
                'lvMenuWeight': 2100.0,
                'name': 'SampClk.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockDigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8737,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SampClkDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 2200.0,
                'name': 'SampClk.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockDigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8738,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'SampClkDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Digital Synchronization:Enable',
                'lvMenuWeight': 2300.0,
                'name': 'SampClk.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'SampClk_WriteWfm_UseInitialWfmDT',
                'description': 'Specifies that the value of &attr1344; will be determined by the dt component of the initial DAQmx Write waveform input for Output tasks.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'WriteWfm',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12540,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'SampClkWriteWfmUseInitialWfmDT',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Sample Clock:Write Waveform:Use Initial Waveform dt',
                'lvMenuWeight': 2350.0,
                'name': 'SampClk.WriteWfm.UseInitialWfmDT',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '15.4.0_0_WriteWfm.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'Hshk_DelayAfterXfer',
                'description': 'Specifies the number of seconds to wait after a handshake cycle before starting a new handshake cycle.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'HandshakeDelayAfterTransfer',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8898,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'HshkDelayAfterXfer',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Handshake:Delay After Transfer',
                'lvMenuWeight': 2800.0,
                'name': 'Hshk.DelayAfterXfer',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'HandshakeStartCondition',
                'cviName': 'Hshk_StartCond',
                'description': 'Specifies the point in the handshake cycle that the device is in when the task starts.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'HandshakeStartCondition',
                'dotNetName': 'HandshakeStartCondition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8899,
                'internalDataType': 'enum tHandshakeStartCondition',
                'internalDescription': '',
                'internalName': 'HshkStartCond',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum HandshakeStartCondition:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Handshake:Start Condition',
                'lvMenuWeight': 2900.0,
                'name': 'Hshk.StartCond',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'HandshakeSampleInputDataCondition',
                'cviName': 'Hshk_SampleInputDataWhen',
                'description': 'Specifies on which edge of the Handshake Trigger an input task latches the data from the peripheral device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'HandshakeSampleInputDataCondition',
                'dotNetName': 'HandshakeSampleInputDataCondition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8900,
                'internalDataType': 'enum tSampleInputDataWhen',
                'internalDescription': '',
                'internalName': 'HshkSampleInputDataWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SampleInputDataWhen:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Handshake:Sample Input Data When',
                'lvMenuWeight': 3000.0,
                'name': 'Hshk.SampleInputDataWhen',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'ChangeDetect_DI_RisingEdgePhysicalChans',
                'description': 'Specifies the names of the digital lines or ports on which to detect rising edges. The lines or ports must be used by virtual channels in the task. You also can specify a string that contains a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">list or range</see> of digital lines or ports.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ChangeDetectionDIRisingEdgePhysicalChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8597,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ChangeDetectDIRisingEdgePhysicalChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQPhysChan:DI',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Change Detection:Digital Input:Rising Edge Physical Channels',
                'lvMenuWeight': 3100.0,
                'name': 'ChangeDetect.DI.RisingEdgePhysicalChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'ChangeDetect_DI_FallingEdgePhysicalChans',
                'description': 'Specifies the names of the digital lines or ports on which to detect falling edges. The lines or ports must be used by virtual channels in the task. You also can specify a string that contains a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">list or range</see> of digital lines or ports.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ChangeDetectionDIFallingEdgePhysicalChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8598,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ChangeDetectDIFallingEdgePhysicalChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQPhysChan:DI',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Change Detection:Digital Input:Falling Edge Physical Channels',
                'lvMenuWeight': 3200.0,
                'name': 'ChangeDetect.DI.FallingEdgePhysicalChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'ChangeDetect_DI_Tristate',
                'description': 'Specifies whether to tristate lines specified with &attr2195; and &attr2196; that are not in a virtual channel in the task. If you set this property to &true;, NI-DAQmx tristates rising/falling edge lines that are not in a virtual channel in the task. If you set this property to &false;, NI-DAQmx does not modify the configuration of rising/falling edge lines that are not in a virtual channel in the task, even if the lines were previously tristated. Set this property to &false; to detect changes on lines in other tasks or to detect changes on output-only lines.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ChangeDetectionDITristate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12026,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ChangeDetectDITristate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Change Detection:Digital Input:Tristate',
                'lvMenuWeight': 3300.0,
                'name': 'ChangeDetect.DI.Tristate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'OnDemand_SimultaneousAOEnable',
                'description': 'Specifies whether to update all channels in the task simultaneously, rather than updating channels independently when you write a sample to that channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OnDemandAOIsSimultaneous',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8608,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'OnDemandSimultaneousAOEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'On Demand:Simultaneous Analog Output Enable',
                'lvMenuWeight': 3400.0,
                'name': 'SimultaneousAOEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'ImplicitUnderflowBehavior',
                'cviName': 'Implicit_UnderflowBehavior',
                'description': 'Specifies the action to take when the onboard memory of the device becomes empty.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'ImplicitUnderflowBehavior',
                'dotNetName': 'ImplicitUnderflowBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12029,
                'internalDataType': 'enum tUnderflowBehavior',
                'internalDescription': '',
                'internalName': 'ImplicitUnderflowBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum UnderflowBehavior:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Implicit:Underflow Behavior',
                'lvMenuWeight': 3500.0,
                'name': 'Implicit.UnderflowBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'AIConv_Rate',
                'description': 'Specifies in Hertz the rate at which to clock the analog-to-digital converter. This clock is specific to the analog input section of <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/MultiSimulSamp.html\');">multiplexed devices</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIConvertRate',
                'embeddedXMLHelpFiles': 'aiconvrate.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 6216,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIConvRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Rate',
                'lvMenuWeight': 3700.0,
                'name': 'AIConv.Rate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'AIConv_MaxRate',
                'description': 'Indicates the maximum convert rate supported by the task, given the current devices and channel count.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIConvertMaximumRate',
                'embeddedXMLHelpFiles': 'aiconvclockmaxrate.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8905,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIConvMaxRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Maximum Rate',
                'lvMenuWeight': 3800.0,
                'name': 'AIConv.MaxRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'AIConv_Src',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the AI Convert Clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIConvertSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 5378,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AIConvSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Source',
                'lvMenuWeight': 3900.0,
                'name': 'AIConv.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'AIConvertActiveEdge',
                'cviName': 'AIConv_ActiveEdge',
                'description': 'Specifies on which edge of the clock pulse an analog-to-digital conversion takes place.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'AIConvertActiveEdge',
                'dotNetName': 'AIConvertActiveEdge',
                'embeddedXMLHelpFiles': 'aiconvertedge.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 6227,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'AIConvActiveEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Active Edge',
                'lvMenuWeight': 4000.0,
                'name': 'AIConv.ActiveEdge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'AIConv_TimebaseDiv',
                'description': 'Specifies the number of AI Convert Clock Timebase pulses needed to produce a single AI Convert Clock pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIConvertTimebaseDivisor',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4917,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AIConvTimebaseDiv',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Timebase Divisor',
                'lvMenuWeight': 4100.0,
                'name': 'AIConv.TimebaseDiv',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'AIConvertTimebaseSource',
                'cviName': 'AIConv_Timebase_Src',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see>  of the signal to use as the AI Convert Clock Timebase.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'AIConvertTimebaseSource',
                'dotNetName': 'AIConvertTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4921,
                'internalDataType': 'enum tMIOAIConvertTimebaseSource',
                'internalDescription': '',
                'internalName': 'AIConvTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum MIOAIConvertTbSrc:iL',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Timebase:Source',
                'lvMenuWeight': 4200.0,
                'name': 'AIConv.Timebase.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'DelayFromSampleClockUnits',
                'cviName': 'DelayFromSampClk_DelayUnits',
                'description': 'Specifies the units of &attr1317;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'DelayFromSampleClockUnits',
                'dotNetName': 'DelayFromSampleClockUnits',
                'embeddedXMLHelpFiles': 'delayfrsampleclockunits.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4868,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'DelayFromSampClkDelayUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits2:iL',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Delay From Sample Clock:Delay Units',
                'lvMenuWeight': 4300.0,
                'name': 'DelayFromSampClk.DelayUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'DelayFromSampClk_Delay',
                'description': 'Specifies the amount of time to wait after receiving a Sample Clock edge before beginning to acquire the sample. This value is in the units you specify with &attr1304;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DelayFromSampleClock',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4887,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DelayFromSampClkDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Delay From Sample Clock:Delay',
                'lvMenuWeight': 4400.0,
                'name': 'DelayFromSampClk.Delay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'AIConv_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the AI Convert Clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 11996,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIConvDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Digital Filter:Enable',
                'lvMenuWeight': 4500.0,
                'name': 'AIConv.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'AIConv_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 11997,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIConvDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 4600.0,
                'name': 'AIConv.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'AIConv_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 11998,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AIConvDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Digital Filter:Timebase:Source',
                'lvMenuWeight': 4700.0,
                'name': 'AIConv.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'AIConv_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 11999,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AIConvDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 4800.0,
                'name': 'AIConv.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'AIConv_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12000,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AIConvDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Timing',
                    'Advanced:Timing (Active Device)'
                ],
                'lvMenuName': 'More:AI Convert:Digital Synchronization:Enable',
                'lvMenuWeight': 4900.0,
                'name': 'AIConv.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'MasterTimebase_Rate',
                'description': 'Specifies the rate of the Master Timebase.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MasterTimebaseRate',
                'embeddedXMLHelpFiles': 'mastertimebaserate.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 5269,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'MasterTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Master Timebase:Rate',
                'lvMenuWeight': 5000.0,
                'name': 'MasterTimebase.Rate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'MasterTimebase_Src',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the Master Timebase. On an E Series device, you can choose only between the onboard 20MHz Timebase or the RTSI7 terminal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MasterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4931,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'MasterTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Master Timebase:Source',
                'lvMenuWeight': 5100.0,
                'name': 'MasterTimebase.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'RefClk_Rate',
                'description': 'Specifies the frequency of the Reference Clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReferenceClockRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4885,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'RefClkRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Reference Clock:Rate',
                'lvMenuWeight': 5200.0,
                'name': 'RefClk.Rate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'RefClk_Src',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the Reference Clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReferenceClockSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 4886,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'RefClkSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Reference Clock:Source',
                'lvMenuWeight': 5300.0,
                'name': 'RefClk.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'SyncPulse_Type',
                'description': 'Specifies the type of sync pulse used in the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'SynchronizationPulseType',
                'dotNetName': 'SynchronizationPulseType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'TimeAPITiming',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12598,
                'internalDataType': 'enum tSyncPulseType',
                'internalDescription': '',
                'internalName': 'SyncPulseType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SyncPulseType:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Synchronization Pulse:Type',
                'lvMenuWeight': 5500.0,
                'name': 'SyncPulse.Type',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_1_TimeAPITiming.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SyncPulse_Src',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the synchronization pulse. The synchronization pulse resets the clock dividers and the ADCs/DACs on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SynchronizationPulseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8765,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'SyncPulseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Synchronization Pulse:Digital Edge:Source',
                'lvMenuWeight': 5510.0,
                'name': 'SyncPulse.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'SyncPulse_Time_When',
                'description': 'Specifies the start time of the sync pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SynchronizationPulseTriggerTime',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'TimeAPITiming',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Timing',
                'id': 12599,
                'internalDataType': 'tSSTimeAbsolute',
                'internalDescription': '',
                'internalName': 'SyncPulseTimeWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic timestamp',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Synchronization Pulse:Time:When',
                'lvMenuWeight': 5550.0,
                'name': 'SyncPulse.Time.When',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_1_TimeAPITiming.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'SyncPulse_Time_Timescale',
                'description': 'Specifies the timescale to be used for timestamps for a sync pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'SynchronizationPulseTimescale',
                'dotNetName': 'SynchronizationPulseTimescale',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'TimeAPITiming',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12600,
                'internalDataType': 'enum tTimescale',
                'internalDescription': '',
                'internalName': 'SyncPulseTimeTimescale',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Timescale2:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Synchronization Pulse:Time:Timescale',
                'lvMenuWeight': 5551.0,
                'name': 'SyncPulse.Time.Timescale',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_1_TimeAPITiming.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SyncPulse_SyncTime',
                'description': 'Indicates in seconds the delay required to reset the ADCs/DACs after the device receives the synchronization pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SynchronizationPulseTime',
                'embeddedXMLHelpFiles': 'syncpulsesynctime.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8766,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SyncPulseSyncTime',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Synchronization Pulse:Synchronization Time',
                'lvMenuWeight': 5600.0,
                'name': 'SyncPulse.SyncTime',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SyncPulse_MinDelayToStart',
                'description': 'Specifies in seconds the amount of time that elapses after the master device issues the synchronization pulse before the task starts.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SynchronizationPulseMinimumDelayToStart',
                'embeddedXMLHelpFiles': 'syncpulsedelay.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 8767,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SyncPulseMinDelayToStart',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Synchronization Pulse:Minimum Delay To Start',
                'lvMenuWeight': 5700.0,
                'name': 'SyncPulse.MinDelayToStart',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SyncPulse_ResetTime',
                'description': 'Indicates in seconds the amount of time required for the ADCs or DACs on the device to reset. When synchronizing devices, query this property on all devices and note the largest reset time. Then, for each device, subtract the value of this property from the largest reset time and set &attr2F7D; to the resulting value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SynchronizationPulseResetTime',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12156,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SyncPulseResetTime',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Synchronization Pulse:Reset Time',
                'lvMenuWeight': 5800.0,
                'name': 'SyncPulse.ResetTime',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SyncPulse_ResetDelay',
                'description': 'Specifies in seconds the amount of time to wait after the Synchronization Pulse before resetting the ADCs or DACs on the device. When synchronizing devices, query &attr2F7C; on all devices and note the largest reset time. Then, for each device, subtract the reset time from the largest reset time and set this property to the resulting value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SynchronizationPulseResetDelay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12157,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SyncPulseResetDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Synchronization Pulse:Reset Delay',
                'lvMenuWeight': 5900.0,
                'name': 'SyncPulse.ResetDelay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SyncPulse_Term',
                'description': 'Indicates the name of the internal Synchronization Pulse terminal for the task. This property does not return the name of the source terminal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SynchronizationPulseTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12165,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'SyncPulseTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Synchronization Pulse:Terminal',
                'lvMenuWeight': 6000.0,
                'name': 'SyncPulse.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Timing_SyncPulseForce',
                'description': "Specifies whether a synchronization pulse should be generated at start regardless of whether devices in the task are synchronized. When set to false, a synchronization pulse will be generated only if all devices in the task are not synchronized. Some DSA AO devices have unexpected behavior during DAC synchronization. Refer to your device's documentation for more information.",
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ForceSynchronizationPulse',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'ForceSync',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12474,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'SyncPulseForce',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Synchronization Pulse:Force Synchronization Pulse',
                'lvMenuWeight': 6050.0,
                'name': 'SyncPulse.Force',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_6_ForceSync.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': 'http://niweb.natinst.com/confluence/display/PDSW/New+Attribute+-+SyncPulse.Force',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SyncClk_Interval',
                'description': 'Specifies the interval, in Sample Clock periods, between each internal Synchronization Clock pulse. NI-DAQmx uses this pulse for synchronization of triggers between multiple devices at different rates. Refer to device documentation for information about how to calculate this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SynchronizationClockInterval',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12158,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SyncClkInterval',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'More:Synchronization Clock:Interval',
                'lvMenuWeight': 6100.0,
                'name': 'SyncClk.Interval',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'SampTimingEngine',
                'description': 'Specifies which <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/multitimingengines.html\');">timing engine</see> to use for the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleTimingEngine',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 10790,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SampTimingEngine',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Advanced:Sample Timing Engine',
                'lvMenuWeight': 6200.0,
                'name': 'SampTimingEngine',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'FirstSampTimestamp_Enable',
                'description': 'Specifies whether to enable the first sample timestamp.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FirstSampleTimestampEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'TimeAPITiming',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12601,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'FirstSampTimestampEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Advanced:First Sample Timestamp:Enable',
                'lvMenuWeight': 6250.0,
                'name': 'FirstSampTimestamp.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_1_TimeAPITiming.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'FirstSampTimestamp_Timescale',
                'description': 'Specifies the timescale to be used for the first sample timestamp.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'FirstSampleTimestampTimescale',
                'dotNetName': 'FirstSampleTimestampTimescale',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'TimeAPITiming',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12603,
                'internalDataType': 'enum tTimescale',
                'internalDescription': '',
                'internalName': 'FirstSampTimestampTimescale',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Timescale2:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Advanced:First Sample Timestamp:Timescale',
                'lvMenuWeight': 6251.0,
                'name': 'FirstSampTimestamp.Timescale',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_1_TimeAPITiming.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'FirstSampTimestamp_Val',
                'description': 'Indicates the timestamp of the first sample.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FirstSampleTimestamp',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'TimeAPITiming',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Timing',
                'id': 12602,
                'internalDataType': 'tSSTimeAbsolute',
                'internalDescription': '',
                'internalName': 'FirstSampTimestampVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic timestamp',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Advanced:First Sample Timestamp:Value',
                'lvMenuWeight': 6252.0,
                'name': 'FirstSampTimestamp.Val',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_1_TimeAPITiming.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'FirstSampClk_When',
                'description': 'Specifies the time of the first sample clock pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FirstSampleClockTime',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'TimeAPIFirstSampClkTime',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Timing',
                'id': 12674,
                'internalDataType': 'tSSTimeAbsolute',
                'internalDescription': '',
                'internalName': 'FirstSampClkWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic timestamp',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Advanced:First Sample Clock Time:When',
                'lvMenuWeight': 6275.0,
                'name': 'FirstSampClk.When',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '18.6.0_1_TimeAPIFirstSampClkTime.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'FirstSampClk_Timescale',
                'description': 'Specifies the timescale to be used for the value of &attr3182;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'FirstSampleClockTimescale',
                'dotNetName': 'FirstSampleClockTimescale',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'TimeAPIFirstSampClkTime',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12675,
                'internalDataType': 'enum tTimescale',
                'internalDescription': '',
                'internalName': 'FirstSampClkTimescale',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Timescale2:iL',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Advanced:First Sample Clock Time:Timescale',
                'lvMenuWeight': 6276.0,
                'name': 'FirstSampClk.Timescale',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '18.6.0_1_TimeAPIFirstSampClkTime.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'FirstSampClk_Offset',
                'description': 'Specifies, in seconds, the offset to apply to the &attr3182; value. This offset modifies when the first sample clock occurs and is used to account for known delays in the signal path.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FirstSampleClockOffset',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'TimeAPIFirstSampClkOffset',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Timing',
                'id': 12714,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'FirstSampClkOffset',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Timing'
                ],
                'lvMenuName': 'Advanced:First Sample Clock Time:Offset',
                'lvMenuWeight': 6277.0,
                'name': 'FirstSampClk.Offset',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.5.0_0_TimeAPIFirstSampClkOffset.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '19.5.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Timing properties to configure the sample timing and duration of a task.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Timing',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStartTrigger',
                'cppEnumName': 'StartTriggerType',
                'cviName': 'StartTrig_Type',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/triggertypes.html\');">type</see> of trigger to use to start a task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'StartTrigger',
                'dotNetEnumName': 'StartTriggerType',
                'dotNetName': 'Type',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5011,
                'internalDataType': 'enum tTriggerType',
                'internalDescription': '',
                'internalName': 'StartTrigType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TriggerType10:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Trigger Type',
                'lvMenuWeight': 0.0,
                'name': 'Start.TrigType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'StartTrig_Term',
                'description': 'Indicates the name of the internal Start Trigger terminal for the task. This property does not return the name of the trigger source terminal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'StartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Terminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12062,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'StartTrigTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Terminal',
                'lvMenuWeight': 200.0,
                'name': 'Start.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_StartTrig_Src',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where there is a digital signal to use as the source of the Start Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5127,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigEdgeStartTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Digital Edge:Source',
                'lvMenuWeight': 300.0,
                'name': 'Start.DigEdge.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeStartTrigger',
                'cppEnumName': 'DigitalEdgeStartTriggerEdge',
                'cviName': 'DigEdge_StartTrig_Edge',
                'description': 'Specifies on which edge of a digital pulse to start acquiring or generating samples.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeStartTrigger',
                'dotNetEnumName': 'DigitalEdgeStartTriggerEdge',
                'dotNetName': 'Edge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5124,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'DigEdgeStartTrigEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Digital Edge:Edge',
                'lvMenuWeight': 400.0,
                'name': 'Start.DigEdge.Edge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_StartTrig_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the trigger signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8739,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DigEdgeStartTrigDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Digital Edge:Digital Filter:Enable',
                'lvMenuWeight': 700.0,
                'name': 'Start.DigEdge.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_StartTrig_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8740,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DigEdgeStartTrigDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Digital Edge:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 800.0,
                'name': 'Start.DigEdge.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_StartTrig_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8741,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigEdgeStartTrigDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Digital Edge:Digital Filter:Timebase:Source',
                'lvMenuWeight': 900.0,
                'name': 'Start.DigEdge.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_StartTrig_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8742,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DigEdgeStartTrigDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Digital Edge:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 1000.0,
                'name': 'Start.DigEdge.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_StartTrig_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device. If you set this property to &true;, the device does not recognize and act upon the trigger until the next pulse of the internal timebase.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8743,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DigEdgeStartTrigDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Digital Edge:Digital Synchronization:Enable',
                'lvMenuWeight': 1100.0,
                'name': 'Start.DigEdge.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalPatternStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigPattern_StartTrig_Src',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">physical channels</see> to use for pattern matching. The order of the physical channels determines the order of the pattern. If a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/linesPorts.html\');">port</see> is included, the order of the physical channels within the port is in ascending order.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalPatternStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5136,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DigPatternStartTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQPhysChan:DI_Line',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Digital Pattern:Source',
                'lvMenuWeight': 1200.0,
                'name': 'Start.DigPattern.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalPatternStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigPattern_StartTrig_Pattern',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/digpattern.html\');">digital pattern</see> that must be met for the Start Trigger to occur.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalPatternStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Pattern',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8582,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigPatternStartTrigPattern',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Digital Pattern:Pattern',
                'lvMenuWeight': 1300.0,
                'name': 'Start.DigPattern.Pattern',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalPatternStartTrigger',
                'cppEnumName': 'DigitalPatternStartTriggerCondition',
                'cviName': 'DigPattern_StartTrig_When',
                'description': 'Specifies whether the Start Trigger occurs when the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">physical channels</see> specified with &attr1410; match or differ from the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/digpattern.html\');">digital pattern</see> specified with &attr2186;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalPatternStartTrigger',
                'dotNetEnumName': 'DigitalPatternStartTriggerCondition',
                'dotNetName': 'Condition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5137,
                'internalDataType': 'enum tDigitalPatternCondition',
                'internalDescription': '',
                'internalName': 'DigPatternStartTrigTrigWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalPatternCondition1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Digital Pattern:Trigger When',
                'lvMenuWeight': 1400.0,
                'name': 'Start.DigPattern.TrigWhen',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_StartTrig_Src',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see> or <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where there is an analog signal to use as the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/analogTrig.html\');">source</see> of the Start Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': 'starttriganlgsrc.xml',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5016,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgEdgeStartTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Edge:Source',
                'lvMenuWeight': 1900.0,
                'name': 'Start.AnlgEdge.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ChannelName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeStartTrigger',
                'cppEnumName': 'AnalogEdgeStartTriggerSlope',
                'cviName': 'AnlgEdge_StartTrig_Slope',
                'description': 'Specifies on which slope of the trigger signal to start acquiring or generating samples.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeStartTrigger',
                'dotNetEnumName': 'AnalogEdgeStartTriggerSlope',
                'dotNetName': 'Slope',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5015,
                'internalDataType': 'enum tSlope',
                'internalDescription': '',
                'internalName': 'AnlgEdgeStartTrigSlope',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Slope1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Edge:Slope',
                'lvMenuWeight': 2000.0,
                'name': 'Start.AnlgEdge.Slope',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_StartTrig_Lvl',
                'description': 'Specifies at what threshold in the units of the measurement or generation to start acquiring or generating samples. Use &attr1397; to specify on which slope to trigger on this threshold.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Level',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5014,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgEdgeStartTrigLvl',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Edge:Level',
                'lvMenuWeight': 2100.0,
                'name': 'Start.AnlgEdge.Lvl',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_StartTrig_Hyst',
                'description': 'Specifies a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/analogTriggering.html\');">hysteresis level</see> in the units of the measurement or generation. If &attr1397; is &val1397.10280;, the trigger does not deassert until the source signal passes below  &attr1396; minus the hysteresis. If &attr1397; is &val1397.10171;, the trigger does not deassert until the source signal passes above &attr1396; plus the hysteresis. Hysteresis is always enabled. Set this property to a non-zero value to use hysteresis.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Hysteresis',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5013,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgEdgeStartTrigHyst',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Edge:Hysteresis',
                'lvMenuWeight': 2200.0,
                'name': 'Start.AnlgEdge.Hyst',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeStartTrigger',
                'cppEnumName': 'AnalogEdgeStartTriggerCoupling',
                'cviName': 'AnlgEdge_StartTrig_Coupling',
                'description': 'Specifies the coupling for the source signal of the trigger if the source is a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> rather than a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeStartTrigger',
                'dotNetEnumName': 'AnalogEdgeStartTriggerCoupling',
                'dotNetName': 'Coupling',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8755,
                'internalDataType': 'enum tCoupling',
                'internalDescription': '',
                'internalName': 'AnlgEdgeStartTrigCoupling',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Coupling2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Edge:Coupling',
                'lvMenuWeight': 2300.0,
                'name': 'Start.AnlgEdge.Coupling',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_StartTrig_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay above or below the trigger level for the minimum pulse width before being recognized. Use filtering  for noisy trigger signals that transition in and out of the hysteresis window rapidly.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12001,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgEdgeStartTrigDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Edge:Digital Filter:Enable',
                'lvMenuWeight': 2400.0,
                'name': 'Start.AnlgEdge.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_StartTrig_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12002,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgEdgeStartTrigDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Edge:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 2500.0,
                'name': 'Start.AnlgEdge.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_StartTrig_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12003,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgEdgeStartTrigDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Edge:Digital Filter:Timebase:Source',
                'lvMenuWeight': 2600.0,
                'name': 'Start.AnlgEdge.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_StartTrig_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12004,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgEdgeStartTrigDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Edge:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 2700.0,
                'name': 'Start.AnlgEdge.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_StartTrig_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12005,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgEdgeStartTrigDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Edge:Digital Synchronization:Enable',
                'lvMenuWeight': 2800.0,
                'name': 'Start.AnlgEdge.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgMultiEdge_StartTrig_Srcs',
                'description': 'Specifies a list and/or range of analog sources that are going to be used for Analog triggering. Each source corresponds to an element in each of the Analog Multi Edge property arrays, if they are not empty.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogMultiEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Sources',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12577,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgMultiEdgeStartTrigSrcs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Multiple Edge:Sources',
                'lvMenuWeight': 2815.0,
                'name': 'Start.AnlgMultiEdge.Srcs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ChannelName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgMultiEdge_StartTrig_Slopes',
                'description': 'Specifies an array of slopes on which to trigger task to start generating or acquiring samples. Each element of the array corresponds to a source in Start.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogMultiEdgeStartTrigger',
                'dotNetEnumName': 'AnalogMultiEdgeStartTriggerSlope',
                'dotNetName': 'Slopes',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12578,
                'internalDataType': 'std::vector<enum tSlope>',
                'internalDescription': '',
                'internalName': 'AnlgMultiEdgeStartTrigSlopes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Slope1:iL 1D',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Multiple Edge:Slopes',
                'lvMenuWeight': 2830.0,
                'name': 'Start.AnlgMultiEdge.Slopes',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgMultiEdge_StartTrig_Lvls',
                'description': 'Specifies an array of thresholds in the units of the measurement or generation to start acquiring or generating samples. Each element of the array corresponds to a source in Start.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogMultiEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Levels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12579,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AnlgMultiEdgeStartTrigLvls',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Multiple Edge:Levels',
                'lvMenuWeight': 2845.0,
                'name': 'Start.AnlgMultiEdge.Lvls',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgMultiEdge_StartTrig_Hysts',
                'description': 'Specifies an array of hysteresis levels in the units of the measurement or generation. If the corresponding element of Start.AnlgMultiEdge.Slopes is Rising, the trigger does not deassert until the source signal passes below the corresponding element of Start.AnlgMultiEdge.Lvls minus the hysteresis. If Start.AnlgEdge.Slope is Falling, the trigger does not deassert until the source signal passes above Start.AnlgEdge.Lvl plus the hysteresis. Hysteresis is always enabled. Set this property to a non-zero value to use hysteresis. Each element of the array corresponds to a source in Start.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogMultiEdgeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Hystereses',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12580,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AnlgMultiEdgeStartTrigHysts',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Multiple Edge:Hystereses',
                'lvMenuWeight': 2860.0,
                'name': 'Start.AnlgMultiEdge.Hysts',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgMultiEdge_StartTrig_Couplings',
                'description': 'Specifies an array that describes the couplings for the corresponding source signal of the trigger if the source is a terminal rather than a virtual channel. Each element of the array corresponds to a source in Start.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogMultiEdgeStartTrigger',
                'dotNetEnumName': 'AnalogMultiEdgeStartTriggerCoupling',
                'dotNetName': 'Couplings',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12581,
                'internalDataType': 'std::vector<enum tCoupling>',
                'internalDescription': '',
                'internalName': 'AnlgMultiEdgeStartTrigCouplings',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Coupling2:iL 1D',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Multiple Edge:Couplings',
                'lvMenuWeight': 2875.0,
                'name': 'Start.AnlgMultiEdge.Couplings',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_StartTrig_Src',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see> or <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where there is an analog signal to use as the source of the Start Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': 'starttriganlgsrc.xml',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5120,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgWinStartTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Window:Source',
                'lvMenuWeight': 2900.0,
                'name': 'Start.AnlgWin.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ChannelName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowStartTrigger',
                'cppEnumName': 'AnalogWindowStartTriggerCondition',
                'cviName': 'AnlgWin_StartTrig_When',
                'description': 'Specifies whether the task starts acquiring or generating samples when the signal enters or leaves the window you specify with &attr1402; and &attr1403;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowStartTrigger',
                'dotNetEnumName': 'AnalogWindowStartTriggerCondition',
                'dotNetName': 'Condition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5121,
                'internalDataType': 'enum tWindowTriggerCondition1',
                'internalDescription': '',
                'internalName': 'AnlgWinStartTrigTrigWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum WindowTriggerCondition1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Window:Trigger When',
                'lvMenuWeight': 3000.0,
                'name': 'Start.AnlgWin.TrigWhen',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_StartTrig_Top',
                'description': 'Specifies the upper limit of the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/algwindowtrig.html\');">window</see>. Specify this value in the units of the measurement or generation.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WindowTop',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5123,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinStartTrigTop',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Window:Top',
                'lvMenuWeight': 3100.0,
                'name': 'Start.AnlgWin.Top',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_StartTrig_Btm',
                'description': 'Specifies the lower limit of the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/algwindowtrig.html\');">window</see>. Specify this value in the units of the measurement or generation.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WindowBottom',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5122,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinStartTrigBtm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Window:Bottom',
                'lvMenuWeight': 3200.0,
                'name': 'Start.AnlgWin.Btm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowStartTrigger',
                'cppEnumName': 'AnalogWindowStartTriggerCoupling',
                'cviName': 'AnlgWin_StartTrig_Coupling',
                'description': 'Specifies the coupling for the source signal of the trigger if the source is a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> rather than a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowStartTrigger',
                'dotNetEnumName': 'AnalogWindowStartTriggerCoupling',
                'dotNetName': 'Coupling',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8756,
                'internalDataType': 'enum tCoupling',
                'internalDescription': '',
                'internalName': 'AnlgWinStartTrigCoupling',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Coupling2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Window:Coupling',
                'lvMenuWeight': 3300.0,
                'name': 'Start.AnlgWin.Coupling',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_StartTrig_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay within the trigger window for the minimum pulse width before being recognized. Use filtering for noisy trigger signals that transition in and out of the window rapidly.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12031,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgWinStartTrigDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Window:Digital Filter:Enable',
                'lvMenuWeight': 3400.0,
                'name': 'Start.AnlgWin.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_StartTrig_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12032,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinStartTrigDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Window:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 3500.0,
                'name': 'Start.AnlgWin.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_StartTrig_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12033,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgWinStartTrigDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Window:Digital Filter:Timebase:Source',
                'lvMenuWeight': 3600.0,
                'name': 'Start.AnlgWin.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_StartTrig_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12034,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinStartTrigDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Window:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 3700.0,
                'name': 'Start.AnlgWin.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_StartTrig_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12035,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgWinStartTrigDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Analog Window:Digital Synchronization:Enable',
                'lvMenuWeight': 3800.0,
                'name': 'Start.AnlgWin.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Time_StartTrig_Src',
                'description': 'Indicates the terminal to be used for start time triggering ',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12317,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'TimeStartTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Time:Source',
                'lvMenuWeight': 3900.0,
                'name': 'Start.Time.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'StartTrig_TrigWhen',
                'description': 'Specifies when to trigger the start trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'TimeStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TriggerTime',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'DAQmx Time Trigger Support',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Trigger',
                'id': 12365,
                'internalDataType': 'tSSTimeAbsolute',
                'internalDescription': '',
                'internalName': 'TimeStartTrigWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic timestamp',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Time:When',
                'lvMenuWeight': 4000.0,
                'name': 'Start.Time.When',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'StartTrig_Timescale',
                'description': 'Specifies the timescale to be used for timestamps used in a time trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'TimeStartTrigger',
                'dotNetEnumName': 'TimeStartTriggerTimescale',
                'dotNetName': 'Timescale',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Timing and Sync API',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12342,
                'internalDataType': 'enum tTimescale',
                'internalDescription': '',
                'internalName': 'TimeStartTrigTimescale',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Timescale2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Time:Timescale',
                'lvMenuWeight': 4100.0,
                'name': 'Start.Time.Timescale',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'StartTrig_TimestampEnable',
                'description': 'Specifies whether the start trigger timestamp is enabled. If the timestamp is enabled but no resources are available, an error will be returned at run time.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'StartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TimestampEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TimeAPITriggersRenumberingHack',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12618,
                'internalDataType': 'tBoolean',
                'internalDescription': 'Was part of 16.5.0_0_TimeAPITriggers.patch, but a renumbering issue forced us to move it to this file to minimize integration issues.  Yes, this is a hack.',
                'internalName': 'TimestampStartTrigEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Timestamp:Enable',
                'lvMenuWeight': 4150.0,
                'name': 'Start.Timestamp.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.1.0_1_TimeAPITriggersRenumberingHack.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'StartTrig_TimestampTimescale',
                'description': 'Specifies the start trigger timestamp timescale.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'StartTrigger',
                'dotNetEnumName': 'StartTriggerTimestampTimescale',
                'dotNetName': 'TimestampTimescale',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TimeAPITriggers',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12589,
                'internalDataType': 'enum tTimescale',
                'internalDescription': '',
                'internalName': 'TimestampStartTrigTimescale',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Timescale2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Timestamp:Timescale',
                'lvMenuWeight': 4151.0,
                'name': 'Start.Timestamp.Timescale',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_0_TimeAPITriggers.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'StartTrig_TimestampVal',
                'description': 'Indicates the start trigger timestamp value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'StartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Timestamp',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'TimeAPITriggersRenumberingHack',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Trigger',
                'id': 12619,
                'internalDataType': 'tSSTimeAbsolute',
                'internalDescription': 'Was part of 16.5.0_0_TimeAPITriggers.patch, but a renumbering issue forced us to move it to this file to minimize integration issues.  Yes, this is a hack.',
                'internalName': 'TimestampStartTrigVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic timestamp',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:Timestamp:Value',
                'lvMenuWeight': 4152.0,
                'name': 'Start.Timestamp.Val',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.1.0_1_TimeAPITriggersRenumberingHack.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'StartTrig_Delay',
                'description': 'Specifies an amount of time to wait after the Start Trigger is received before acquiring or generating the first sample. This value is in the units you specify with &attr18C8;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'StartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Delay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 6230,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'StartTrigDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:More:Delay',
                'lvMenuWeight': 4200.0,
                'name': 'Start.Delay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStartTrigger',
                'cppEnumName': 'StartTriggerDelayUnits',
                'cviName': 'StartTrig_DelayUnits',
                'description': 'Specifies the units of &attr1856;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'StartTrigger',
                'dotNetEnumName': 'StartTriggerDelayUnits',
                'dotNetName': 'DelayUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 6344,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'StartTrigDelayUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:More:Delay Units',
                'lvMenuWeight': 4300.0,
                'name': 'Start.DelayUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'StartTrig_Retriggerable',
                'description': 'Specifies whether a finite task resets and waits for another Start Trigger after the task completes. When you set this property to &true;, the device performs a finite acquisition or generation each time the Start Trigger occurs until the task stops. The device ignores a trigger if it is in the process of acquiring or generating signals.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'StartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Retriggerable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 6415,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'StartTrigRetriggerable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:More:Retriggerable',
                'lvMenuWeight': 4400.0,
                'name': 'Start.Retriggerable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'StartTrig_TrigWin',
                'description': 'Specifies the period of time in seconds after the task starts during which the device may trigger. Once the window has expired, the device stops detecting triggers, and the task will finish after the device finishes acquiring post-trigger samples for any triggers detected. If no triggers are detected during the entire period, then no data will be returned. Ensure the period of time specified covers the entire time span desired for trigger detection to avoid missed triggers. Specifying a Trigger Window of -1 causes the window to be infinite.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'StartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TriggerWindow',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12570,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'StartTrigTrigWin',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:More:Trigger Window',
                'lvMenuWeight': 4425.0,
                'name': 'Start.TrigWin',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'StartTrig_RetriggerWin',
                'description': 'Specifies the period of time in seconds after each trigger during which the device may trigger. Once the window has expired, the device stops detecting triggers, and the task will finish after the device finishes acquiring post-trigger samples that it already started. Ensure the period of time specified covers the entire time span desired for retrigger detection to avoid missed triggers. Specifying a Retrigger Window of -1 causes the window to be infinite.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'StartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RetriggerWindow',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12571,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'StartTrigRetriggerWin',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:More:Retrigger Window',
                'lvMenuWeight': 4450.0,
                'name': 'Start.RetriggerWin',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'StartTrig_MaxNumTrigsToDetect',
                'description': 'Specifies the maximum number of times the task will detect a start trigger during the task. The number of times a trigger is detected and acted upon by the module may be less than the specified amount if the task stops early because of trigger/retrigger window expiration. Specifying the Maximum Number of Triggers to Detect to be 0 causes the driver to automatically set this value to the maximum possible number of triggers detectable by the device and configuration combination. Note: The number of detected triggers may be less than number of trigger events occurring, because the devices were unable to respond to the trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'StartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MaximumNumberOfTriggersToDetect',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12572,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'StartTrigMaxNumTrigsToDetect',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Start:More:Maximum Number of Triggers to Detect',
                'lvMenuWeight': 4475.0,
                'name': 'Start.MaxNumTrigsToDetect',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxReferenceTrigger',
                'cppEnumName': 'ReferenceTriggerType',
                'cviName': 'RefTrig_Type',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/triggertypes.html\');">type</see> of trigger to use to mark a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">reference</see> point for the measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'ReferenceTriggerType',
                'dotNetName': 'Type',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5145,
                'internalDataType': 'enum tTriggerType',
                'internalDescription': '',
                'internalName': 'RefTrigType',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TriggerType8:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Trigger Type',
                'lvMenuWeight': 4500.0,
                'name': 'Ref.TrigType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_PretrigSamples',
                'description': 'Specifies the minimum number of pretrigger samples to acquire from each channel before recognizing the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">reference trigger</see>. Post-trigger samples per channel are equal to &attr1310; minus the number of pretrigger samples per channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PretriggerSamples',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5189,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'RefTrigPreTrigSamples',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Pretrigger Samples per Channel',
                'lvMenuWeight': 4600.0,
                'name': 'Ref.PretrigSamples',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_Term',
                'description': 'Indicates the name of the internal Reference Trigger terminal for the task. This property does not return the name of the trigger source terminal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Terminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12063,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'RefTrigTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Terminal',
                'lvMenuWeight': 5000.0,
                'name': 'Ref.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_RefTrig_Src',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where there is a digital signal to use as the source of the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">Reference Trigger</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5172,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigEdgeRefTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Digital Edge:Source',
                'lvMenuWeight': 5100.0,
                'name': 'Ref.DigEdge.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeReferenceTrigger',
                'cppEnumName': 'DigitalEdgeReferenceTriggerEdge',
                'cviName': 'DigEdge_RefTrig_Edge',
                'description': 'Specifies on what edge of a digital pulse the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">Reference Trigger</see> occurs.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeReferenceTrigger',
                'dotNetEnumName': 'DigitalEdgeReferenceTriggerEdge',
                'dotNetName': 'Edge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5168,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'DigEdgeRefTrigEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Digital Edge:Edge',
                'lvMenuWeight': 5200.0,
                'name': 'Ref.DigEdge.Edge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_RefTrig_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the trigger signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 11991,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DigEdgeRefTrigDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Digital Edge:Digital Filter:Enable',
                'lvMenuWeight': 5300.0,
                'name': 'Ref.DigEdge.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_RefTrig_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 11992,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DigEdgeRefTrigDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Digital Edge:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 5400.0,
                'name': 'Ref.DigEdge.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_RefTrig_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 11993,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigEdgeRefTrigDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Digital Edge:Digital Filter:Timebase:Source',
                'lvMenuWeight': 5500.0,
                'name': 'Ref.DigEdge.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_RefTrig_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 11994,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DigEdgeRefTrigDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Digital Edge:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 5600.0,
                'name': 'Ref.DigEdge.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_RefTrig_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 11995,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DigEdgeRefTrigDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Digital Edge:Digital Synchronization:Enable',
                'lvMenuWeight': 5700.0,
                'name': 'Ref.DigEdge.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalPatternReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigPattern_RefTrig_Src',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">physical channels</see> to use for pattern matching. The order of the physical channels determines the order of the pattern. If a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/linesPorts.html\');">port</see> is included, the order of the physical channels within the port is in ascending order.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalPatternReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5175,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DigPatternRefTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQPhysChan:DI_Line',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Digital Pattern:Source',
                'lvMenuWeight': 6100.0,
                'name': 'Ref.DigPattern.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalPatternReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigPattern_RefTrig_Pattern',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/digpattern.html\');">digital pattern</see> that must be met for the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">Reference Trigger</see> to occur.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalPatternReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Pattern',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8583,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigPatternRefTrigPattern',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Digital Pattern:Pattern',
                'lvMenuWeight': 6200.0,
                'name': 'Ref.DigPattern.Pattern',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalPatternReferenceTrigger',
                'cppEnumName': 'DigitalPatternReferenceTriggerCondition',
                'cviName': 'DigPattern_RefTrig_When',
                'description': 'Specifies whether the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">Reference Trigger</see> occurs when the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">physical channels</see> specified with &attr1437; match or differ from the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/digpattern.html\');">digital pattern</see> specified with &attr2187;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalPatternReferenceTrigger',
                'dotNetEnumName': 'DigitalPatternReferenceTriggerCondition',
                'dotNetName': 'Condition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5176,
                'internalDataType': 'enum tDigitalPatternCondition',
                'internalDescription': '',
                'internalName': 'DigPatternRefTrigTrigWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalPatternCondition1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Digital Pattern:Trigger When',
                'lvMenuWeight': 6300.0,
                'name': 'Ref.DigPattern.TrigWhen',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_RefTrig_Src',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see> or <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where there is an analog signal to use as the source of the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">Reference Trigger</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': 'refpauseanlgtrigsrc.xml',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5156,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgEdgeRefTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Edge:Source',
                'lvMenuWeight': 6500.0,
                'name': 'Ref.AnlgEdge.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ChannelName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeReferenceTrigger',
                'cppEnumName': 'AnalogEdgeReferenceTriggerSlope',
                'cviName': 'AnlgEdge_RefTrig_Slope',
                'description': 'Specifies on which slope of the source signal the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">Reference Trigger</see> occurs.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeReferenceTrigger',
                'dotNetEnumName': 'AnalogEdgeReferenceTriggerSlope',
                'dotNetName': 'Slope',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5155,
                'internalDataType': 'enum tSlope',
                'internalDescription': '',
                'internalName': 'AnlgEdgeRefTrigSlope',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Slope1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Edge:Slope',
                'lvMenuWeight': 6600.0,
                'name': 'Ref.AnlgEdge.Slope',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_RefTrig_Lvl',
                'description': 'Specifies in the units of the measurement the threshold at which the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">Reference Trigger</see> occurs.  Use &attr1423; to specify on which slope to trigger at this threshold.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Level',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5154,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgEdgeRefTrigLvl',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Edge:Level',
                'lvMenuWeight': 6700.0,
                'name': 'Ref.AnlgEdge.Lvl',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_RefTrig_Hyst',
                'description': 'Specifies a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/analogTriggering.html\');">hysteresis level</see> in the units of the measurement. If &attr1423; is &val1423.10280;, the trigger does not deassert until the source signal passes below &attr1422; minus the hysteresis. If &attr1423; is &val1423.10171;, the trigger does not deassert until the source signal passes above &attr1422; plus the hysteresis. Hysteresis is always enabled. Set this property to a non-zero value to use hysteresis.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Hysteresis',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5153,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgEdgeRefTrigHyst',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Edge:Hysteresis',
                'lvMenuWeight': 6800.0,
                'name': 'Ref.AnlgEdge.Hyst',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeReferenceTrigger',
                'cppEnumName': 'AnalogEdgeReferenceTriggerCoupling',
                'cviName': 'AnlgEdge_RefTrig_Coupling',
                'description': 'Specifies the coupling for the source signal of the trigger if the source is a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> rather than a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeReferenceTrigger',
                'dotNetEnumName': 'AnalogEdgeReferenceTriggerCoupling',
                'dotNetName': 'Coupling',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8757,
                'internalDataType': 'enum tCoupling',
                'internalDescription': '',
                'internalName': 'AnlgEdgeRefTrigCoupling',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Coupling2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Edge:Coupling',
                'lvMenuWeight': 6900.0,
                'name': 'Ref.AnlgEdge.Coupling',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_RefTrig_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay above or below the trigger level for the minimum pulse width before being recognized. Use filtering  for noisy trigger signals that transition in and out of the hysteresis window rapidly.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12006,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgEdgeRefTrigDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Edge:Digital Filter:Enable',
                'lvMenuWeight': 7000.0,
                'name': 'Ref.AnlgEdge.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_RefTrig_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the<see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12007,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgEdgeRefTrigDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Edge:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 7100.0,
                'name': 'Ref.AnlgEdge.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_RefTrig_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12008,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgEdgeRefTrigDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Edge:Digital Filter:Timebase:Source',
                'lvMenuWeight': 7200.0,
                'name': 'Ref.AnlgEdge.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_RefTrig_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12009,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgEdgeRefTrigDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Edge:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 7300.0,
                'name': 'Ref.AnlgEdge.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogEdgeReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgEdge_RefTrig_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12010,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgEdgeRefTrigDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Edge:Digital Synchronization:Enable',
                'lvMenuWeight': 7400.0,
                'name': 'Ref.AnlgEdge.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgMultiEdge_RefTrig_Srcs',
                'description': 'Specifies a List and/or range of analog sources that are going to be used for Analog triggering. Each source corresponds to an element in each of the Analog Multi Edge property arrays, if they are not empty.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogMultiEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Sources',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12582,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgMultiEdgeRefTrigSrcs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Multiple Edge:Sources',
                'lvMenuWeight': 7415.0,
                'name': 'Ref.AnlgMultiEdge.Srcs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ChannelName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgMultiEdge_RefTrig_Slopes',
                'description': 'Specifies an array of slopes on which to trigger task to start generating or acquiring samples. Each element of the array corresponds to a source in Ref.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogMultiEdgeReferenceTrigger',
                'dotNetEnumName': 'AnalogMultiEdgeReferenceTriggerSlope',
                'dotNetName': 'Slopes',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12583,
                'internalDataType': 'std::vector<enum tSlope>',
                'internalDescription': '',
                'internalName': 'AnlgMultiEdgeRefTrigSlopes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Slope1:iL 1D',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Multiple Edge:Slopes',
                'lvMenuWeight': 7430.0,
                'name': 'Ref.AnlgMultiEdge.Slopes',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgMultiEdge_RefTrig_Lvls',
                'description': 'Specifies an array of thresholds in the units of the measurement or generation to start acquiring or generating samples. Each element of the array corresponds to a source in Ref.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogMultiEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Levels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12584,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AnlgMultiEdgeRefTrigLvls',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Multiple Edge:Levels',
                'lvMenuWeight': 7445.0,
                'name': 'Ref.AnlgMultiEdge.Lvls',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgMultiEdge_RefTrig_Hysts',
                'description': 'Specifies an array of hysteresis levels in the units of the measurement or generation. If the corresponding element of Ref.AnlgMultiEdge.Slopes is Rising, the trigger does not deassert until the source signal passes below the corresponding element of Ref.AnlgMultiEdge.Lvls minus the hysteresis. If Ref.AnlgEdge.Slope is Falling, the trigger does not deassert until the source signal passes above Ref.AnlgEdge.Lvl plus the hysteresis. Hysteresis is always enabled. Set this property to a non-zero value to use hysteresis. Each element of the array corresponds to a source in Ref.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogMultiEdgeReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Hystereses',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12585,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AnlgMultiEdgeRefTrigHysts',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Multiple Edge:Hystereses',
                'lvMenuWeight': 7460.0,
                'name': 'Ref.AnlgMultiEdge.Hysts',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgMultiEdge_RefTrig_Couplings',
                'description': 'Specifies an array that describes the couplings for the corresponding source signal of the trigger if the source is a terminal rather than a virtual channel. Each element of the array corresponds to a source in Ref.AnlgMultiEdge.Srcs and an element in each of the other Analog Multi Edge property arrays, if they are not empty.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogMultiEdgeReferenceTrigger',
                'dotNetEnumName': 'AnalogMultiEdgeReferenceTriggerCoupling',
                'dotNetName': 'Couplings',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12586,
                'internalDataType': 'std::vector<enum tCoupling>',
                'internalDescription': '',
                'internalName': 'AnlgMultiEdgeRefTrigCouplings',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Coupling2:iL 1D',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Multiple Edge:Couplings',
                'lvMenuWeight': 7475.0,
                'name': 'Ref.AnlgMultiEdge.Couplings',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_RefTrig_Src',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see> or <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where there is an analog signal to use as the source of the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">Reference Trigger</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': 'refpauseanlgtrigsrc.xml',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5158,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgWinRefTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Window:Source',
                'lvMenuWeight': 7500.0,
                'name': 'Ref.AnlgWin.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ChannelName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowReferenceTrigger',
                'cppEnumName': 'AnalogWindowReferenceTriggerCondition',
                'cviName': 'AnlgWin_RefTrig_When',
                'description': 'Specifies whether the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">Reference Trigger</see> occurs when the source signal enters the window or when it leaves the window. Use &attr1428; and &attr1429; to specify the window.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowReferenceTrigger',
                'dotNetEnumName': 'AnalogWindowReferenceTriggerCondition',
                'dotNetName': 'Condition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5159,
                'internalDataType': 'enum tWindowTriggerCondition1',
                'internalDescription': '',
                'internalName': 'AnlgWinRefTrigTrigWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum WindowTriggerCondition1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Window:Trigger When',
                'lvMenuWeight': 7600.0,
                'name': 'Ref.AnlgWin.TrigWhen',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_RefTrig_Top',
                'description': 'Specifies the upper limit of the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/algwindowtrig.html\');">window</see>. Specify this value in the units of the measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WindowTop',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5161,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinRefTrigTop',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Window:Top',
                'lvMenuWeight': 7700.0,
                'name': 'Ref.AnlgWin.Top',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_RefTrig_Btm',
                'description': 'Specifies the lower limit of the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/algwindowtrig.html\');">window</see>. Specify this value in the units of the measurement.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WindowBottom',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5160,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinRefTrigBtm',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Window:Bottom',
                'lvMenuWeight': 7800.0,
                'name': 'Ref.AnlgWin.Btm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowReferenceTrigger',
                'cppEnumName': 'AnalogWindowReferenceTriggerCoupling',
                'cviName': 'AnlgWin_RefTrig_Coupling',
                'description': 'Specifies the coupling for the source signal of the trigger if the source is a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> rather than a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowReferenceTrigger',
                'dotNetEnumName': 'AnalogWindowReferenceTriggerCoupling',
                'dotNetName': 'Coupling',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 6231,
                'internalDataType': 'enum tCoupling',
                'internalDescription': '',
                'internalName': 'AnlgWinRefTrigCoupling',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Coupling2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Window:Coupling',
                'lvMenuWeight': 7900.0,
                'name': 'Ref.AnlgWin.Coupling',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_RefTrig_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay within the trigger window for the minimum pulse width before being recognized. Use filtering for noisy trigger signals that transition in and out of the window rapidly.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12011,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgWinRefTrigDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Window:Digital Filter:Enable',
                'lvMenuWeight': 8000.0,
                'name': 'Ref.AnlgWin.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_RefTrig_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12012,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinRefTrigDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Window:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 8100.0,
                'name': 'Ref.AnlgWin.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_RefTrig_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12013,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgWinRefTrigDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Window:Digital Filter:Timebase:Source',
                'lvMenuWeight': 8200.0,
                'name': 'Ref.AnlgWin.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_RefTrig_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12014,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinRefTrigDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Window:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 8300.0,
                'name': 'Ref.AnlgWin.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_RefTrig_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12015,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgWinRefTrigDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Analog Window:Digital Synchronization:Enable',
                'lvMenuWeight': 8400.0,
                'name': 'Ref.AnlgWin.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_AutoTrigEnable',
                'description': 'Specifies whether to send a software trigger to the device when a hardware trigger is no longer active in order to prevent a timeout.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AutoTriggerEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 11969,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'RefTrigAutoTrigEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Auto Trigger:Enable',
                'lvMenuWeight': 8700.0,
                'name': 'Ref.AutoTrig.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.9.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_AutoTriggered',
                'description': 'Indicates whether a completed acquisition was triggered by the auto trigger. If an acquisition has not completed after the task starts, this property returns &false;. This property is only applicable when &attr2EC1;  is &true;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AutoTriggered',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 11970,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'RefTrigAutoTriggered',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Auto Triggered',
                'lvMenuWeight': 8800.0,
                'name': 'Ref.AutoTriggered',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.9.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_TimestampEnable',
                'description': 'Specifies whether the reference trigger timestamp is enabled. If the timestamp is enabled but no resources are available, an error will be returned at run time.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TimestampEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TimeAPITriggers',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12590,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'TimestampRefTrigEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Timestamp:Enable',
                'lvMenuWeight': 8850.0,
                'name': 'Ref.Timestamp.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_0_TimeAPITriggers.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_TimestampTimescale',
                'description': 'Specifies the reference trigger timestamp timescale.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'ReferenceTriggerTimestampTimescale',
                'dotNetName': 'TimestampTimescale',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TimeAPITriggers',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12592,
                'internalDataType': 'enum tTimescale',
                'internalDescription': '',
                'internalName': 'TimestampRefTrigTimescale',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Timescale2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Timestamp:Timescale',
                'lvMenuWeight': 8851.0,
                'name': 'Ref.Timestamp.Timescale',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_0_TimeAPITriggers.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_TimestampVal',
                'description': 'Indicates the reference trigger timestamp value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Timestamp',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'TimeAPITriggers',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Trigger',
                'id': 12591,
                'internalDataType': 'tSSTimeAbsolute',
                'internalDescription': '',
                'internalName': 'TimestampRefTrigVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic timestamp',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:Timestamp:Value',
                'lvMenuWeight': 8852.0,
                'name': 'Ref.Timestamp.Val',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_0_TimeAPITriggers.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxReferenceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_Delay',
                'description': 'Specifies in seconds the time to wait after the device receives the Reference Trigger before switching from pretrigger to posttrigger samples.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Delay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5251,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'RefTrigDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:More:Delay',
                'lvMenuWeight': 8900.0,
                'name': 'Ref.Delay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_Retriggerable',
                'description': 'Specifies whether a finite task resets, acquires pretrigger samples, and waits for another Reference Trigger after the task completes. When you set this property to TRUE, the device will acquire post-trigger samples, reset, and acquire pretrigger samples each time the Reference Trigger occurs until the task stops. The device ignores a trigger if it is in the process of acquiring signals.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Retriggerable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12573,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'RefTrigRetriggerable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:More:Retriggerable',
                'lvMenuWeight': 8920.0,
                'name': 'Ref.Retriggerable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_TrigWin',
                'description': 'Specifies the duration in seconds after the task starts during which the device may trigger. Once the window has passed, the device stops detecting triggers, and the task will stop after the device finishes acquiring post-trigger samples that it already started. If no triggers are detected during the entire period, then no data will be returned. Specifying a Trigger Window of -1 causes the window to be infinite.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TriggerWindow',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12574,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'RefTrigTrigWin',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:More:Trigger Window',
                'lvMenuWeight': 8940.0,
                'name': 'Ref.TrigWin',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_RetriggerWin',
                'description': 'Specifies the duration in seconds after each trigger during which the device may trigger. Once the window has passed, the device stops detecting triggers, and the task will stop after the device finishes acquiring post-trigger samples that it already started. Specifying a Retrigger Window of -1 causes the window to be infinite.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RetriggerWindow',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12575,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'RefTrigRetriggerWin',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:More:Retrigger Window',
                'lvMenuWeight': 8960.0,
                'name': 'Ref.RetriggerWin',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'RefTrig_MaxNumTrigsToDetect',
                'description': 'Specifies the maximum number of times the task will detect a reference trigger during the task. The number of times a trigger is detected and acted upon by the module may be less than the specified amount if the task stops early because of trigger/retrigger window expiration. Specifying the Maximum Number of Triggers to Detect to be 0 causes the driver to automatically set this value to the maximum possible number of triggers detectable by the device and configuration combination. Note: The number of detected triggers may be less than number of trigger events occurring, because the devices were unable to respond to the trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ReferenceTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MaximumNumberOfTriggersToDetect',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TriggerAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12576,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'RefTrigMaxNumTrigsToDetect',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Reference:More:Maximum Number of Triggers to Detect',
                'lvMenuWeight': 8980.0,
                'name': 'Ref.MaxNumTrigsToDetect',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_3_TriggerAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAdvanceTrigger',
                'cppEnumName': 'AdvanceTriggerType',
                'cviName': 'AdvTrig_Type',
                'description': '(Deprecated) Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/analogTriggering.html\');">type</see> of trigger to use to advance to the next entry in a switch scan list.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4965,
                'internalDataType': 'enum tTriggerType',
                'internalDescription': '',
                'internalName': 'AdvTrigType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TriggerType5:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Deprecated:More:Advance:Trigger Type',
                'lvMenuWeight': 9700.0,
                'name': 'Adv.TrigType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '16.4.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeAdvanceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_AdvTrig_Src',
                'description': '(Deprecated) Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where there is a digital signal to use as the source of the Advance Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4962,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigEdgeAdvTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Deprecated:More:Advance:Digital Edge:Source',
                'lvMenuWeight': 9900.0,
                'name': 'Adv.DigEdge.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '16.4.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeAdvanceTrigger',
                'cppEnumName': 'DigitalEdgeAdvanceTriggerEdge',
                'cviName': 'DigEdge_AdvTrig_Edge',
                'description': '(Deprecated) Specifies on which edge of a digital signal to advance to the next entry in a scan list.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4960,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'DigEdgeAdvTrigEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Deprecated:More:Advance:Digital Edge:Edge',
                'lvMenuWeight': 10000.0,
                'name': 'Adv.DigEdge.Edge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '16.4.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeAdvanceTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_AdvTrig_DigFltr_Enable',
                'description': '(Deprecated) Specifies whether to apply the pulse width filter to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8760,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DigEdgeAdvTrigDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Deprecated:More:Advance:Digital Edge:Digital Filter:Enable',
                'lvMenuWeight': 10300.0,
                'name': 'Adv.DigEdge.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '16.4.0',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxHandshakeTrigger',
                'cppEnumName': 'HandshakeTriggerType',
                'cviName': 'HshkTrig_Type',
                'description': 'Specifies the type of <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/handtrig.html\');">Handshake Trigger</see> to use.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'HandshakeTrigger',
                'dotNetEnumName': 'HandshakeTriggerType',
                'dotNetName': 'Type',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8887,
                'internalDataType': 'enum tTriggerType',
                'internalDescription': '',
                'internalName': 'HshkTrigType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TriggerType9:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Handshake:Trigger Type',
                'lvMenuWeight': 11200.0,
                'name': 'Hshk.TrigType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxInterlockedHandshakeTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'Interlocked_HshkTrig_Src',
                'description': 'Specifies the source <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/handtrig.html\');">Handshake Trigger</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'InterlockedHandshakeTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8888,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'InterlockedHshkTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Handshake:Interlocked:Source',
                'lvMenuWeight': 11300.0,
                'name': 'Hshk.Interlocked.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxInterlockedHandshakeTrigger',
                'cppEnumName': 'InterlockedHandshakeTriggerAssertedLevel',
                'cviName': 'Interlocked_HshkTrig_AssertedLvl',
                'description': 'Specifies the asserted level of the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/handtrig.html\');">Handshake Trigger</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'InterlockedHandshakeTrigger',
                'dotNetEnumName': 'InterlockedHandshakeTriggerAssertedLevel',
                'dotNetName': 'AssertedLevel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8889,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'InterlockedHshkTrigAssertedLvl',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Level1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Handshake:Interlocked:Asserted Level',
                'lvMenuWeight': 11400.0,
                'name': 'Hshk.Interlocked.AssertedLvl',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPauseTrigger',
                'cppEnumName': 'PauseTriggerType',
                'cviName': 'PauseTrig_Type',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/analogTriggering.html\');">type</see> of trigger to use to pause a task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PauseTrigger',
                'dotNetEnumName': 'PauseTriggerType',
                'dotNetName': 'Type',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4966,
                'internalDataType': 'enum tTriggerType',
                'internalDescription': '',
                'internalName': 'PauseTrigType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TriggerType6:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Trigger Type',
                'lvMenuWeight': 11500.0,
                'name': 'Pause.TrigType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'PauseTrig_Term',
                'description': 'Indicates the name of the internal Pause Trigger terminal for the task. This property does not return the name of the trigger source terminal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Terminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12064,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'PauseTrigTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Terminal',
                'lvMenuWeight': 11700.0,
                'name': 'Pause.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgLvl_PauseTrig_Src',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see> or <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where there is an analog signal to use as the source of the trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': 'refpauseanlgtrigsrc.xml',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4976,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgLvlPauseTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Level:Source',
                'lvMenuWeight': 11800.0,
                'name': 'Pause.AnlgLvl.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ChannelName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogLevelPauseTrigger',
                'cppEnumName': 'AnalogLevelPauseTriggerCondition',
                'cviName': 'AnlgLvl_PauseTrig_When',
                'description': 'Specifies whether the task pauses above or below the threshold you specify with &attr1369;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogLevelPauseTrigger',
                'dotNetEnumName': 'AnalogLevelPauseTriggerCondition',
                'dotNetName': 'Condition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4977,
                'internalDataType': 'enum tActiveLevel',
                'internalDescription': '',
                'internalName': 'AnlgLvlPauseTrigWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ActiveLevel:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Level:Pause When',
                'lvMenuWeight': 11900.0,
                'name': 'Pause.AnlgLvl.When',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgLvl_PauseTrig_Lvl',
                'description': 'Specifies the threshold at which to pause the task. Specify this value in the units of the measurement or generation. Use &attr1371; to specify whether the task pauses above or below this threshold.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Level',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4969,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgLvlPauseTrigLvl',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Level:Level',
                'lvMenuWeight': 12000.0,
                'name': 'Pause.AnlgLvl.Lvl',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgLvl_PauseTrig_Hyst',
                'description': 'Specifies a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/analogTriggering.html\');">hysteresis level</see> in the units of the measurement or generation. If &attr1371; is &val1371.10093;, the trigger does not deassert until the source signal passes below &attr1369; minus the hysteresis. If &attr1371; is &val1371.10107;, the trigger does not deassert until the source signal passes above &attr1369; plus the hysteresis. Hysteresis is always enabled. Set this property to a non-zero value to use hysteresis.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Hysteresis',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4968,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgLvlPauseTrigHyst',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Level:Hysteresis',
                'lvMenuWeight': 12100.0,
                'name': 'Pause.AnlgLvl.Hyst',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogLevelPauseTrigger',
                'cppEnumName': 'AnalogEdgePauseTriggerCoupling',
                'cviName': 'AnlgLvl_PauseTrig_Coupling',
                'description': 'Specifies the coupling for the source signal of the trigger if the source is a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> rather than a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogLevelPauseTrigger',
                'dotNetEnumName': 'AnalogEdgePauseTriggerCoupling',
                'dotNetName': 'Coupling',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8758,
                'internalDataType': 'enum tCoupling',
                'internalDescription': '',
                'internalName': 'AnlgLvlPauseTrigCoupling',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Coupling2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Level:Coupling',
                'lvMenuWeight': 12200.0,
                'name': 'Pause.AnlgLvl.Coupling',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgLvl_PauseTrig_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay above or below the trigger level for the minimum pulse width before being recognized. Use filtering  for noisy trigger signals that transition in and out of the hysteresis window rapidly.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12016,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgLvlPauseTrigDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Level:Digital Filter:Enable',
                'lvMenuWeight': 12300.0,
                'name': 'Pause.AnlgLvl.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgLvl_PauseTrig_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12017,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgLvlPauseTrigDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Level:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 12400.0,
                'name': 'Pause.AnlgLvl.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgLvl_PauseTrig_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12018,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgLvlPauseTrigDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Level:Digital Filter:Timebase:Source',
                'lvMenuWeight': 12500.0,
                'name': 'Pause.AnlgLvl.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgLvl_PauseTrig_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12019,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgLvlPauseTrigDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Level:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 12600.0,
                'name': 'Pause.AnlgLvl.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgLvl_PauseTrig_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12020,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgLvlPauseTrigDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Level:Digital Synchronization:Enable',
                'lvMenuWeight': 12700.0,
                'name': 'Pause.AnlgLvl.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_PauseTrig_Src',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see> or <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where there is an analog signal to use as the source of the trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': 'refpauseanlgtrigsrc.xml',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4979,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgWinPauseTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Window:Source',
                'lvMenuWeight': 12800.0,
                'name': 'Pause.AnlgWin.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': 'ChannelName',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowPauseTrigger',
                'cppEnumName': 'AnalogWindowPauseTriggerCondition',
                'cviName': 'AnlgWin_PauseTrig_When',
                'description': 'Specifies whether the task pauses while the trigger signal is inside or outside the window you specify with &attr1375; and &attr1376;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowPauseTrigger',
                'dotNetEnumName': 'AnalogWindowPauseTriggerCondition',
                'dotNetName': 'Condition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4980,
                'internalDataType': 'enum tWindowTriggerCondition2',
                'internalDescription': '',
                'internalName': 'AnlgWinPauseTrigWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum WindowTriggerCondition2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Window:Pause When',
                'lvMenuWeight': 12900.0,
                'name': 'Pause.AnlgWin.When',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_PauseTrig_Top',
                'description': 'Specifies the upper limit of the window. Specify this value in the units of the measurement or generation.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WindowTop',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4982,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinPauseTrigTop',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Window:Top',
                'lvMenuWeight': 13000.0,
                'name': 'Pause.AnlgWin.Top',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_PauseTrig_Btm',
                'description': 'Specifies the lower limit of the window. Specify this value in the units of the measurement or generation.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WindowBottom',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4981,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinPauseTrigBtm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': True,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Window:Bottom',
                'lvMenuWeight': 13100.0,
                'name': 'Pause.AnlgWin.Btm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowPauseTrigger',
                'cppEnumName': 'AnalogWindowPauseTriggerCoupling',
                'cviName': 'AnlgWin_PauseTrig_Coupling',
                'description': 'Specifies the coupling for the source signal of the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> if the source is a terminal rather than a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/Chans.html\');">virtual channel</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowPauseTrigger',
                'dotNetEnumName': 'AnalogWindowPauseTriggerCoupling',
                'dotNetName': 'Coupling',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8759,
                'internalDataType': 'enum tCoupling',
                'internalDescription': '',
                'internalName': 'AnlgWinPauseTrigCoupling',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Coupling2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Window:Coupling',
                'lvMenuWeight': 13200.0,
                'name': 'Pause.AnlgWin.Coupling',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_PauseTrig_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the digital output of the analog triggering circuitry (the Analog Comparison Event). When enabled, the analog signal must stay within the trigger window for the minimum pulse width before being recognized. Use filtering for noisy trigger signals that transition in and out of the window rapidly.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12021,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgWinPauseTrigDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Window:Digital Filter:Enable',
                'lvMenuWeight': 13300.0,
                'name': 'Pause.AnlgWin.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_PauseTrig_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12022,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinPauseTrigDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Window:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 13400.0,
                'name': 'Pause.AnlgWin.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_PauseTrig_DigFltr_TimebaseSrc',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the digital filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12023,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'AnlgWinPauseTrigDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Window:Digital Filter:Timebase:Source',
                'lvMenuWeight': 13500.0,
                'name': 'Pause.AnlgWin.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_PauseTrig_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the digital filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12024,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AnlgWinPauseTrigDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Window:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 13600.0,
                'name': 'Pause.AnlgWin.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxAnalogWindowPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'AnlgWin_PauseTrig_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AnalogWindowPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12025,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgWinPauseTrigDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Analog Window:Digital Synchronization:Enable',
                'lvMenuWeight': 13700.0,
                'name': 'Pause.AnlgWin.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigLvl_PauseTrig_Src',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where there is a digital signal to use as the source of the Pause Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4985,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigLvlPauseTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Digital Level:Source',
                'lvMenuWeight': 13800.0,
                'name': 'Pause.DigLvl.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalLevelPauseTrigger',
                'cppEnumName': 'DigitalLevelPauseTriggerCondition',
                'cviName': 'DigLvl_PauseTrig_When',
                'description': 'Specifies whether the task pauses while the signal is high or low.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalLevelPauseTrigger',
                'dotNetEnumName': 'DigitalLevelPauseTriggerCondition',
                'dotNetName': 'Condition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 4992,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'DigLvlPauseTrigWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Level1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Digital Level:Pause When',
                'lvMenuWeight': 13900.0,
                'name': 'Pause.DigLvl.When',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigLvl_PauseTrig_DigFltr_Enable',
                'description': 'Specifies whether to apply a digital <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the trigger signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8744,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DigLvlPauseTrigDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Digital Level:Digital Filter:Enable',
                'lvMenuWeight': 14200.0,
                'name': 'Pause.DigLvl.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigLvl_PauseTrig_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8745,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DigLvlPauseTrigDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Digital Level:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 14300.0,
                'name': 'Pause.DigLvl.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigLvl_PauseTrig_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8746,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigLvlPauseTrigDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Digital Level:Digital Filter:Timebase:Source',
                'lvMenuWeight': 14400.0,
                'name': 'Pause.DigLvl.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigLvl_PauseTrig_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8747,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DigLvlPauseTrigDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Digital Level:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 14500.0,
                'name': 'Pause.DigLvl.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalLevelPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigLvl_PauseTrig_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalLevelPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8748,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DigLvlPauseTrigDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Digital Level:Digital Synchronization:Enable',
                'lvMenuWeight': 14600.0,
                'name': 'Pause.DigLvl.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalPatternPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigPattern_PauseTrig_Src',
                'description': 'Specifies the physical channels to use for pattern matching. The order of the physical channels determines the order of the pattern. If a port is included, the lines within the port are in ascending order.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalPatternPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8559,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DigPatternPauseTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQPhysChan:DI_Line',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Digital Pattern:Source',
                'lvMenuWeight': 14700.0,
                'name': 'Pause.DigPattern.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalPatternPauseTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigPattern_PauseTrig_Pattern',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/digpattern.html\');">digital pattern</see> that must be met for the Pause Trigger to occur.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalPatternPauseTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Pattern',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8584,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigPatternPauseTrigPattern',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Digital Pattern:Pattern',
                'lvMenuWeight': 14800.0,
                'name': 'Pause.DigPattern.Pattern',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalPatternPauseTrigger',
                'cppEnumName': 'DigitalPatternPauseTriggerCondition',
                'cviName': 'DigPattern_PauseTrig_When',
                'description': 'Specifies if the Pause Trigger occurs when the physical channels specified with &attr216F; match or differ from the digital pattern specified with &attr2188;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalPatternPauseTrigger',
                'dotNetEnumName': 'DigitalPatternPauseTriggerCondition',
                'dotNetName': 'Condition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8560,
                'internalDataType': 'enum tDigitalPatternCondition',
                'internalDescription': '',
                'internalName': 'DigPatternPauseTrigWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalPatternCondition1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Pause:Digital Pattern:Pause When',
                'lvMenuWeight': 14900.0,
                'name': 'Pause.DigPattern.When',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxArmStartTrigger',
                'cppEnumName': 'ArmStartTriggerType',
                'cviName': 'ArmStartTrig_Type',
                'description': 'Specifies the type of trigger to use to arm the task for a Start Trigger. If you configure an Arm Start Trigger, the task does not respond to a Start Trigger until the device receives the Arm Start Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ArmStartTrigger',
                'dotNetEnumName': 'ArmStartTriggerType',
                'dotNetName': 'Type',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5140,
                'internalDataType': 'enum tTriggerType',
                'internalDescription': '',
                'internalName': 'ArmStartTrigType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TriggerType4:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Trigger Type',
                'lvMenuWeight': 16100.0,
                'name': 'ArmStart.TrigType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxArmStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'ArmStart_Term',
                'description': 'Indicates the name of the internal Arm Start Trigger terminal for the task. This property does not return the name of the trigger source terminal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ArmStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Terminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12159,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'ArmStartTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Terminal',
                'lvMenuWeight': 16200.0,
                'name': 'ArmStart.Term',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeArmStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_ArmStartTrig_Src',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where there is a digital signal to use as the source of the Arm Start Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeArmStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5143,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigEdgeArmStartTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Digital Edge:Source',
                'lvMenuWeight': 16300.0,
                'name': 'ArmStart.DigEdge.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeArmStartTrigger',
                'cppEnumName': 'DigitalEdgeArmStartTriggerEdge',
                'cviName': 'DigEdge_ArmStartTrig_Edge',
                'description': 'Specifies on which edge of a digital signal to arm the task for a Start Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeArmStartTrigger',
                'dotNetEnumName': 'DigitalEdgeArmStartTriggerEdge',
                'dotNetName': 'Edge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 5141,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'DigEdgeArmStartTrigEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Digital Edge:Edge',
                'lvMenuWeight': 16400.0,
                'name': 'ArmStart.DigEdge.Edge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeArmStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_ArmStartTrig_DigFltr_Enable',
                'description': 'Specifies whether to apply the pulse width <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> to the signal.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeArmStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8749,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DigEdgeArmStartTrigDigFltrEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Digital Edge:Digital Filter:Enable',
                'lvMenuWeight': 16500.0,
                'name': 'ArmStart.DigEdge.DigFltr.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeArmStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_ArmStartTrig_DigFltr_MinPulseWidth',
                'description': 'Specifies in seconds the minimum pulse width the <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/digFiltering.html\');">filter</see> recognizes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeArmStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterMinimumPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8750,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DigEdgeArmStartTrigDigFltrMinPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Digital Edge:Digital Filter:Minimum Pulse Width',
                'lvMenuWeight': 16600.0,
                'name': 'ArmStart.DigEdge.DigFltr.MinPulseWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeArmStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_ArmStartTrig_DigFltr_TimebaseSrc',
                'description': 'Specifies the input <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> of the signal to use as the timebase of the pulse width filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeArmStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseSource',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8751,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigEdgeArmStartTrigDigFltrTimebaseSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Digital Edge:Digital Filter:Timebase:Source',
                'lvMenuWeight': 16700.0,
                'name': 'ArmStart.DigEdge.DigFltr.TimebaseSrc',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeArmStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_ArmStartTrig_DigFltr_TimebaseRate',
                'description': 'Specifies in hertz the rate of the pulse width filter timebase. NI-DAQmx uses this value to compute settings for the filter.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeArmStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterTimebaseRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8752,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DigEdgeArmStartTrigDigFltrTimebaseRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Digital Edge:Digital Filter:Timebase:Rate',
                'lvMenuWeight': 16800.0,
                'name': 'ArmStart.DigEdge.DigFltr.TimebaseRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeArmStartTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_ArmStartTrig_DigSync_Enable',
                'description': 'Specifies whether to synchronize recognition of transitions in the signal to the internal timebase of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeArmStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalSynchronizationEnable',
                'embeddedXMLHelpFiles': 'digfiltersync.xml',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 8753,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DigEdgeArmStartTrigDigSyncEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Digital Edge:Digital Synchronization:Enable',
                'lvMenuWeight': 16900.0,
                'name': 'ArmStart.DigEdge.DigSync.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'ArmStartTrig_TrigWhen',
                'description': 'Specifies when to trigger the arm start trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'TimeArmStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TriggerTime',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'TimeAPITriggers',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Trigger',
                'id': 12593,
                'internalDataType': 'tSSTimeAbsolute',
                'internalDescription': '',
                'internalName': 'TimeArmStartTrigWhen',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic timestamp',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Time:When',
                'lvMenuWeight': 16925.0,
                'name': 'ArmStart.Time.When',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_0_TimeAPITriggers.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'ArmStartTrig_Timescale',
                'description': 'Specifies the timescale to be used for timestamps used in an arm start time trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'TimeArmStartTrigger',
                'dotNetEnumName': 'TimeArmStartTriggerTimescale',
                'dotNetName': 'Timescale',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TimeAPITriggers',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12594,
                'internalDataType': 'enum tTimescale',
                'internalDescription': '',
                'internalName': 'TimeArmStartTrigTimescale',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Timescale2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Time:Timescale',
                'lvMenuWeight': 16926.0,
                'name': 'ArmStart.Time.Timescale',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_0_TimeAPITriggers.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'ArmStartTrig_TimestampEnable',
                'description': 'Specifies whether the arm start trigger timestamp is enabled. If the timestamp is enabled but no resources are available, an error will be returned at run time.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ArmStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TimestampEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TimeAPITriggers',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12595,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'TimestampArmStartTrigEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Timestamp:Enable',
                'lvMenuWeight': 16950.0,
                'name': 'ArmStart.Timestamp.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_0_TimeAPITriggers.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'ArmStartTrig_TimestampTimescale',
                'description': 'Specifies the arm start trigger timestamp timescale.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ArmStartTrigger',
                'dotNetEnumName': 'ArmStartTriggerTimestampTimescale',
                'dotNetName': 'TimestampTimescale',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'TimeAPITriggers',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12597,
                'internalDataType': 'enum tTimescale',
                'internalDescription': '',
                'internalName': 'TimestampArmStartTrigTimescale',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Timescale2:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Timestamp:Timescale',
                'lvMenuWeight': 16951.0,
                'name': 'ArmStart.Timestamp.Timescale',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_0_TimeAPITriggers.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'ArmStartTrig_TimestampVal',
                'description': 'Indicates the arm start trigger timestamp value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ArmStartTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Timestamp',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'TimeAPITriggers',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Trigger',
                'id': 12596,
                'internalDataType': 'tSSTimeAbsolute',
                'internalDescription': '',
                'internalName': 'TimestampArmStartTrigVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic timestamp',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'More:Arm Start:Timestamp:Value',
                'lvMenuWeight': 16952.0,
                'name': 'ArmStart.Timestamp.Val',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_0_TimeAPITriggers.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTriggers',
                'cppEnumName': 'TriggerSynchronizationType',
                'cviName': 'Trigger_SyncType',
                'description': 'Specifies the role of the device in a synchronized system. Setting this value to  &val2F80.15888; or  &val2F80.15889; enables <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/syncTriggerSkewCorrect.html\')">trigger skew correction</see>. If you enable trigger skew correction, set this property to &val2F80.15888; on only one device, and set this property to &val2F80.15889; on the other devices.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Triggers',
                'dotNetEnumName': 'TriggerSynchronizationType',
                'dotNetName': 'SynchronizationType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Trigger',
                'id': 12160,
                'internalDataType': 'enum tSyncType',
                'internalDescription': '',
                'internalName': 'TriggerSyncType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SyncType:iL',
                'lvFilter': [
                    'Trigger'
                ],
                'lvMenuName': 'Advanced:Synchronization Type',
                'lvMenuWeight': 18200.0,
                'name': 'SyncType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Trigger properties to configure triggering for a task.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Trigger',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'ReadRelativeTo',
                'cviName': 'Read_RelativeTo',
                'description': 'Specifies the point in the buffer at which to begin a read operation. If you also specify an offset with &attr190B;, the read operation begins at that offset relative to the point you select with this property. The default value is &val190A.10425; unless you configure a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/referenceTrigger.html\');">Reference Trigger</see> for the task. If you configure a Reference Trigger, the default value is &val190A.10427;.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'ReadRelativeTo',
                'dotNetName': 'ReadRelativeTo',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 6410,
                'internalDataType': 'enum tReadRelativeTo',
                'internalDescription': '',
                'internalName': 'ReadRelativeTo',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ReadRelativeTo:iL',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'RelativeTo',
                'lvMenuWeight': 0.0,
                'name': 'RelativeTo',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_Offset',
                'description': 'Specifies an offset in samples per channel at which to begin a read operation. This offset is relative to the location you specify with &attr190A;.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadOffset',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 6411,
                'internalDataType': 'tIPtr',
                'internalDescription': '',
                'internalName': 'ReadOffset',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic iL',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Offset',
                'lvMenuWeight': 100.0,
                'name': 'Offset',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_ChannelsToRead',
                'description': 'Specifies a subset of channels in the task from which to read.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ChannelsToRead',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Read',
                'id': 6179,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadChannelsToRead',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQChannel',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Channels to Read',
                'lvMenuWeight': 200.0,
                'name': 'ChannelsToRead',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_ReadAllAvailSamp',
                'description': 'Specifies whether subsequent read operations read all samples currently available in the buffer or wait for the buffer to become full before reading. NI-DAQmx uses this setting for finite acquisitions and only when the number of samples to read is -1. For continuous acquisitions when the number of samples to read is -1, a read operation always reads all samples currently available in the buffer.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadAllAvailableSamples',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 4629,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadReadAllAvailSamp',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Read All Available Samples',
                'lvMenuWeight': 400.0,
                'name': 'ReadAllAvailSamp',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_AutoStart',
                'description': 'Specifies if &DAQmxRead; automatically starts the task  if you did not start the task explicitly by using &DAQmxStart;. The default value is &true;. When  &DAQmxRead; starts a finite acquisition task, it also stops the task after reading the last sample.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadAutoStart',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 6182,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadAutoStart',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Auto Start',
                'lvMenuWeight': 500.0,
                'name': 'AutoStart',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'ReadOverwriteMode',
                'cviName': 'Read_OverWrite',
                'description': 'Specifies whether to overwrite samples in the buffer that you have not yet read.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'ReadOverwriteMode',
                'dotNetName': 'ReadOverwriteMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 4625,
                'internalDataType': 'enum tOverwriteMode',
                'internalDescription': '',
                'internalName': 'ReadOverWrite',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum OverwriteMode1:iL',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'OverWrite Mode',
                'lvMenuWeight': 800.0,
                'name': 'OverWrite',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Logging_FilePath',
                'description': 'Specifies the path to the TDMS file to which you want to <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/datalogging.html\');">log</see> data.  If the file path is changed while the task is running, this takes effect on the next sample interval (if Logging.SampsPerFile has been set) or when DAQmx Start New File is called. New file paths can be specified by ending with "\\" or "/". Files created after specifying a new file path retain the same name and numbering sequence.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LoggingFilePath',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 11972,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'LoggingFilePath',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic path',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Logging:File Path',
                'lvMenuWeight': 900.0,
                'name': 'Logging.FilePath',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'LoggingMode',
                'cviName': 'Logging_Mode',
                'description': 'Specifies whether to enable <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/datalogging.html\');">logging</see> and whether to allow reading data while logging. Log mode allows for the best performance. However, you cannot read data while logging if you specify this mode. If you want to read data while logging, specify Log and Read mode.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'LoggingMode',
                'dotNetName': 'LoggingMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 11973,
                'internalDataType': 'enum tLoggingMode',
                'internalDescription': '',
                'internalName': 'LoggingMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LoggingMode:iL',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Logging:Mode',
                'lvMenuWeight': 1000.0,
                'name': 'Logging.Mode',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Logging_TDMS_GroupName',
                'description': 'Specifies the name of the group to create within the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/datalogging.html\');">TDMS</see> file for data from this task. If you append data to an existing file and the specified group already exists, NI-DAQmx appends a number symbol and a number to the group name, incrementing that number until finding a group name that does not exist. For example, if you specify a group name of Voltage Task, and that group already exists, NI-DAQmx assigns the group name Voltage Task #1, then Voltage Task #2.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TdmsLoggingGroupName',
                'embeddedXMLHelpFiles': 'TDMSGroupName.xml',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 11974,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'LoggingTDMSGroupName',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Logging:TDMS:Group Name',
                'lvMenuWeight': 1100.0,
                'name': 'Logging.TDMS.GroupName',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'TdmsLoggingOperation',
                'cviName': 'Logging_TDMS_Operation',
                'description': 'Specifies how to open the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/datalogging.html\');">TDMS</see> file.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'TdmsLoggingOperation',
                'dotNetName': 'TdmsLoggingOperation',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 11975,
                'internalDataType': 'enum tLoggingOperation',
                'internalDescription': '',
                'internalName': 'LoggingTDMSOperation',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum LoggingOperation:iL',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Logging:TDMS:Operation',
                'lvMenuWeight': 1200.0,
                'name': 'Logging.TDMS.Operation',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Logging_Pause',
                'description': 'Specifies whether logging is paused while a task is executing. If &attr2EC5; is set to Log and Read mode, this value is taken into consideration on the next call to DAQmx Read, where data is written to disk. If &attr2EC5; is set to Log Only mode, this value is taken into consideration the next time that data is written to disk. A new TDMS group is written when logging is resumed from a paused state.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LoggingPause',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 12259,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'LoggingPause',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Logging:Pause',
                'lvMenuWeight': 1300.0,
                'name': 'Logging.Pause',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Logging_SampsPerFile',
                'description': 'Specifies how many samples to write to each file. When the file reaches the number of samples specified, a new file is created with the naming convention of &#60;filename&#62;_####.tdms, where #### starts at 0001 and increments automatically with each new file. For example, if the file specified is C:\\data.tdms, the next file name used is C:\\data_0001.tdms. To disable file spanning behavior, set this attribute to 0. If &attr2EC4; is changed while this attribute is set, the new file path takes effect on the next file created.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LoggingSamplesPerFile',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 12260,
                'internalDataType': 'u64',
                'internalDescription': '',
                'internalName': 'LoggingSampsPerFile',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uQ',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Logging:Samples Per File',
                'lvMenuWeight': 1400.0,
                'name': 'Logging.SampsPerFile',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Logging_FileWriteSize',
                'description': 'Specifies the size, in samples, in which data will be written to disk.  The size must be evenly divisible by the volume sector size, in bytes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LoggingFileWriteSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 12227,
                'internalDataType': 'tSizeType',
                'internalDescription': '',
                'internalName': 'LoggingFileWriteSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Logging:File Write Size',
                'lvMenuWeight': 1500.0,
                'name': 'Logging.FileWriteSize',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Logging_FilePreallocationSize',
                'description': 'Specifies a size in samples to be used to pre-allocate space on disk.  Pre-allocation can improve file I/O performance, especially in situations where multiple files are being written to disk.  For finite tasks, the default behavior is to pre-allocate the file based on the number of samples you configure the task to acquire.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LoggingFilePreallocationSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 12230,
                'internalDataType': 'u64',
                'internalDescription': '',
                'internalName': 'LoggingFilePreallocationSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uQ',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Logging:File Pre-allocation Size',
                'lvMenuWeight': 1600.0,
                'name': 'Logging.FilePreallocationSize',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_CurrReadPos',
                'description': 'Indicates in samples per channel the current position in the buffer.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CurrentReadPosition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 4641,
                'internalDataType': 'u64',
                'internalDescription': '',
                'internalName': 'ReadCurrReadPos',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Current Read Position',
                'lvMenuWeight': 1800.0,
                'name': 'CurrReadPos',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_AvailSampPerChan',
                'description': 'Indicates the number of samples available to read per channel. This value is the same for all channels in the task.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AvailableSamplesPerChannel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 4643,
                'internalDataType': 'tSizeType',
                'internalDescription': '',
                'internalName': 'ReadAvailSampPerChan',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Available Samples Per Channel',
                'lvMenuWeight': 1900.0,
                'name': 'AvailSampPerChan',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_TotalSampPerChanAcquired',
                'description': 'Indicates the total number of samples acquired by each channel. NI-DAQmx returns a single value because this value is the same for all channels. For retriggered acquisitions, this value is the cumulative number of samples across all retriggered acquisitions.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TotalSamplesAcquiredPerChannel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Reader',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 6442,
                'internalDataType': 'u64',
                'internalDescription': '',
                'internalName': 'ReadTotalSampPerChanAcquired',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Total Samples Per Channel Acquired',
                'lvMenuWeight': 2000.0,
                'name': 'TotalSampPerChanAcquired',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_Nav_FixLost',
                'description': 'Indicates whether or not the fix was lost since the last read time the fix lost property was read.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 12341,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadNavFixLost',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Navigation:Fix Lost?',
                'lvMenuWeight': 2100.0,
                'name': 'Status.Nav.FixLost',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_CommonModeRangeErrorChansExist',
                'description': 'Indicates if the device(s) detected a common mode range violation for any virtual channel in the task. Common mode range violation occurs when the voltage of either the positive terminal or negative terminal to ground are out of range. Reading this property clears the common mode range violation status for all channels in the task. You must read this property before you read &attr2A99;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CommonModeRangeErrorChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 10904,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadCommonModeRangeErrorChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Common Mode Range Error:Common Mode Range Error Channels Exist',
                'lvMenuWeight': 2200.0,
                'name': 'CommonModeRangeErrorChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_CommonModeRangeErrorChans',
                'description': 'Indicates a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">list of names</see> of any virtual channels in the task for which the device(s) detected a common mode range violation. You must read &attr2A98; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CommonModeRangeErrorChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 10905,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadCommonModeRangeErrorChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Common Mode Range Error:Common Mode Range Error Channels',
                'lvMenuWeight': 2300.0,
                'name': 'CommonModeRangeErrorChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_ExcitFaultChansExist',
                'description': 'Indicates if the device(s) detected an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/excitationfaultdetection.html\')">excitation fault condition</see> for any virtual channel in the task. Reading this property clears the excitation fault status for all channels in the task. You must read this property before you read &attr3089;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadExcitationFaultChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 14.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12424,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'ReadExcitFaultChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Excitation Fault:Excitation Fault Channels Exist',
                'lvMenuWeight': 2400.0,
                'name': 'ExcitFaultChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_ExcitFaultChans',
                'description': 'Indicates a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">list of names</see> of any virtual channels in the task for which the device(s) detected an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/excitationfaultdetection.html\')">excitation fault condition</see>. You must read &attr3088; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadExcitationFaultChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 14.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12425,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadExcitFaultChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Excitation Fault:Excitation Fault Channels',
                'lvMenuWeight': 2500.0,
                'name': 'ExcitFaultChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OvercurrentChansExist',
                'description': 'Indicates if the device(s) detected an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/overcurrentdet.html\');">overcurrent condition</see> for any virtual channel in the task. Reading this property clears the overcurrent status for all channels in the task. You must read this property before you read &attr29E7;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadOvercurrentChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 10726,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadOvercurrentChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Overcurrent:Overcurrent Channels Exist',
                'lvMenuWeight': 2600.0,
                'name': 'OvercurrentChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OvercurrentChans',
                'description': 'Indicates a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">list of names</see> of any virtual channels in the task for which the device(s) detected an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/overcurrentdet.html\');">overcurrent condition</see>. You must read &attr29E6; before you read this property. Otherwise, you will receive an error. On some devices, you must restart the task for all overcurrent channels to recover.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadOvercurrentChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 10727,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadOvercurrentChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Overcurrent:Overcurrent Channels',
                'lvMenuWeight': 2700.0,
                'name': 'OvercurrentChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OvertemperatureChansExist',
                'description': 'Indicates if the device(s) detected an overtemperature condition in any virtual channel in the task. Reading this property clears the overtemperature status for all channels in the task. You must read this property before you read &attr3082;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadOvertemperatureChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12417,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadOvertemperatureChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Overtemperature:Overtemperature Channels Exist',
                'lvMenuWeight': 2800.0,
                'name': 'OvertemperatureChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OvertemperatureChans',
                'description': 'Indicates a list of names of any overtemperature virtual channels. You must read &attr3081; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadOvertemperatureChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12418,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadOvertemperatureChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Overtemperature:Overtemperature Channels',
                'lvMenuWeight': 2900.0,
                'name': 'OvertemperatureChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OpenChansExist',
                'description': 'Indicates if the device or devices detected an open channel condition in any virtual channel in the task. Reading this property clears the open channel status for all channels in this task. You must read this property before you read &attr3101;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadOpenChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'OpenChans',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12544,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadOpenChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Open Channels:Open Channels Exist',
                'lvMenuWeight': 2950.0,
                'name': 'OpenChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.5.0_2_OpenChans.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': 'http://niweb.natinst.com/confluence/display/CMSW/Fault+Condition+Properties',
                'supportEnds': 'never',
                'supportStarts': '15.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OpenChans',
                'description': 'Indicates a list of names of any open virtual channels. You must read &attr3100; before you read this property. Otherwise you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadOpenChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'OpenChans',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12545,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadOpenChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Open Channels:Open Channels',
                'lvMenuWeight': 2951.0,
                'name': 'OpenChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.5.0_2_OpenChans.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': 'http://niweb.natinst.com/confluence/display/CMSW/Fault+Condition+Properties',
                'supportEnds': 'never',
                'supportStarts': '15.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OpenChansDetails',
                'description': 'Indicates a list of details of any open virtual channels. You must read &attr3100; before you read this property. Otherwise you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AIChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadOpenChannelsDetails',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'OpenChans',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 12546,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadOpenChansDetails',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Open Channels:Open Channels Details',
                'lvMenuWeight': 2952.0,
                'name': 'OpenChansDetails',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.5.0_2_OpenChans.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': 'http://niweb.natinst.com/confluence/display/CMSW/Fault+Condition+Properties',
                'supportEnds': 'never',
                'supportStarts': '15.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OpenCurrentLoopChansExist',
                'description': 'Indicates if the device(s) detected an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/opencurrent.html\');">open current loop</see> for any virtual channel in the task. Reading this property clears the open current loop status for all channels in the task. You must read this property before you read &attr2A0A;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadOpenCurrentLoopChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 10761,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadOpenCurrentLoopChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Open Current Loop:Open Current Loop Channels Exist',
                'lvMenuWeight': 3000.0,
                'name': 'OpenCurrentLoopChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OpenCurrentLoopChans',
                'description': 'Indicates a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">list of names</see> of any virtual channels in the task for which the device(s) detected an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/opencurrent.html\');">open current loop</see>. You must read &attr2A09; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadOpenCurrentLoopChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 10762,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadOpenCurrentLoopChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Open Current Loop:Open Current Loop Channels',
                'lvMenuWeight': 3100.0,
                'name': 'OpenCurrentLoopChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OpenThrmcplChansExist',
                'description': 'Indicates if the device(s) detected an open thermocouple connected to any virtual channel in the task. Reading this property clears the open thermocouple status for all channels in the task. You must read this property before you read &attr2A97;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OpenThermocoupleChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 10902,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadOpenThrmcplChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Open Thermocouple:Open Thermocouple Channels Exist',
                'lvMenuWeight': 3200.0,
                'name': 'OpenThrmcplChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OpenThrmcplChans',
                'description': 'Indicates a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">list of names</see> of any virtual channels in the task for which the device(s) detected an open thermcouple. You must read &attr2A96; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OpenThermocoupleChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 10903,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadOpenThrmcplChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Open Thermocouple:Open Thermocouple Channels',
                'lvMenuWeight': 3300.0,
                'name': 'OpenThrmcplChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OverloadedChansExist',
                'description': 'Indicates if the device(s) detected an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/OverloadDetection.html\');">overload</see> in any virtual channel in the task. Reading this property clears the overload status for all channels in the task. You must read this property before you read &attr2175;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OverloadedInputChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 8564,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadOverloadedChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Overload:Overloaded Channels Exist',
                'lvMenuWeight': 3400.0,
                'name': 'OverloadedChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_OverloadedChans',
                'description': 'Indicates a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">list of names</see> of any <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/OverloadDetection.html\');">overloaded</see> virtual channels in the task. You must read &attr2174; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OverloadedInputChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 8565,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadOverloadedChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Overload:Overloaded Channels',
                'lvMenuWeight': 3500.0,
                'name': 'OverloadedChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_InputLimitsFaultChansExist',
                'description': 'Indicates if the device or devices detected a sample that was outside the upper or lower limits configured for each channel in the task. Reading this property clears the input limits fault channel status for all channels in the task. You must read this property before you read &attr3190;. Otherwise, you will receive an error. Note: Fault detection applies to both positive and negative inputs. For instance, if you specify a lower limit of 2 mA and an upper limit of 12 mA, NI-DAQmx detects a fault at 15 mA and -15 mA, but not at -6 mA because it is in the range of -12 mA to -2 mA.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadInputLimitsFaultChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': '9253ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12687,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadInputLimitsFaultChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Input Limits Fault:Input Limits Fault Channels Exist',
                'lvMenuWeight': 3510.0,
                'name': 'InputLimitsFaultChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.0.0_0_9253ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '19.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_InputLimitsFaultChans',
                'description': 'Indicates the virtual channels that have detected samples outside the upper or lower limits configured for each channel in the task. You must read &attr318F; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadInputLimitsFaultChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': '9253ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12688,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadInputLimitsFaultChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Input Limits Fault:Input Limits Fault Channels',
                'lvMenuWeight': 3520.0,
                'name': 'InputLimitsFaultChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.0.0_0_9253ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '19.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_PLL_UnlockedChansExist',
                'description': 'Indicates whether the PLL is currently locked, or whether it became unlocked during the previous acquisition. Devices may report PLL Unlock either during acquisition or after acquisition.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PhaseLockedLoopUnlockedChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': '9775ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12568,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadPLLUnlockedChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Phase-Locked Loop:Unlocked Channels Exist',
                'lvMenuWeight': 3530.0,
                'name': 'PLL.UnlockedChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_2_9775ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_PLL_UnlockedChans',
                'description': 'Indicates the channels that had their PLLs unlock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PhaseLockedLoopUnlockedChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': '9775ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12569,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadPLLUnlockedChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Phase-Locked Loop:Unlocked Channels',
                'lvMenuWeight': 3560.0,
                'name': 'PLL.UnlockedChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_2_9775ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_PowerSupplyFaultChansExist',
                'description': 'Indicates if the device or devices detected a power supply fault condition in any virtual channel in the task. Reading this property clears the power supply fault status for all channels in this task. You must read this property before you read &attr3193;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadPowerSupplyFaultChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': '9253ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12690,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadPowerSupplyFaultChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Power Supply Fault:Power Supply Fault Channels Exist',
                'lvMenuWeight': 3570.0,
                'name': 'PowerSupplyFaultChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.0.0_0_9253ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '19.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_PowerSupplyFaultChans',
                'description': 'Indicates the virtual channels that have detected a power supply fault. You must read &attr29EC; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadPowerSupplyFaultChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': '9253ModuleAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12691,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadPowerSupplyFaultChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Power Supply Fault:Power Supply Fault Channels',
                'lvMenuWeight': 3571.0,
                'name': 'PowerSupplyFaultChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '19.0.0_0_9253ModuleAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '19.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_Sync_UnlockedChansExist',
                'description': 'Indicates whether the target is currently locked to the grand master. Devices may report PLL Unlock either during acquisition or after acquisition.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadSynchronizationUnlockedChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'TimeAPISyncUnlocked',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12605,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadSyncUnlockedChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Synchronization:Unlocked Channels Exist',
                'lvMenuWeight': 3580.0,
                'name': 'Sync.UnlockedChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_2_TimeAPISyncUnlocked.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Read_Sync_UnlockedChans',
                'description': 'Indicates the channels from devices in an unlocked target.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadSynchronizationUnlockedChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'TimeAPISyncUnlocked',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12606,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadSyncUnlockedChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Synchronization:Unlocked Channels',
                'lvMenuWeight': 3581.0,
                'name': 'Sync.UnlockedChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_2_TimeAPISyncUnlocked.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_AccessoryInsertionOrRemovalDetected',
                'description': 'Indicates if any device(s) in the task detected the insertion or removal of an accessory since the task started. Reading this property clears the accessory change status for all channels in the task. You must read this property before you read &attr2F71;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AccessoryInsertionOrRemovalDetected',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12144,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadAccessoryInsertionOrRemovalDetected',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Accessory:Accessory Insertion or Removal Detected',
                'lvMenuWeight': 3600.0,
                'name': 'AccessoryInsertionOrRemovalDetected',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_DevsWithInsertedOrRemovedAccessories',
                'description': 'Indicates the names of any devices that detected the insertion or removal of an accessory since the task started. You must read &attr2F70; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DevicesWithInsertedOrRemovedAccessories',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 12145,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadDevsWithInsertedOrRemovedAccessories',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Accessory:Devices with Inserted or Removed Accessories',
                'lvMenuWeight': 3700.0,
                'name': 'DevsWithInsertedOrRemovedAccessories',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'RemoteSenseErrorChansExist',
                'description': 'Indicates if the device(s) detected an error condition of the remote sense connection for any channel in the task. You must disable the output and resolve the hardware connection issue to clear the error condition. You must read this property before you read the Remote Sense Error Channels property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadRemoteSenseErrorChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 12765,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadRemoteSenseErrorChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Remote Sense Error:Remote Sense Error Channels Exist',
                'lvMenuWeight': 3750.0,
                'name': 'RemoteSenseErrorChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '21.8.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '21.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'RemoteSenseErrorChans',
                'description': 'Indicates a list of names of any virtual channels in the task for which a remote sense connection error condition has been detected. You must read Remote Sense Error Channels Exist before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadRemoteSenseErrorChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 12766,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadRemoteSenseErrorChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Remote Sense Error:Remote Sense Error Channels',
                'lvMenuWeight': 3751.0,
                'name': 'RemoteSenseErrorChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '21.8.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '21.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AuxPowerErrorChansExist',
                'description': 'Indicates if the device(s) detected an auxiliary power supply error condition for any channel in the task. Reading this property clears the error condition status for all channels in the task. You must read this property before you read the Aux Power Error Channels property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadAuxPowerErrorChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 12767,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadAuxPowerErrorChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Aux Power Error:Aux Power Error Channels Exist',
                'lvMenuWeight': 3752.0,
                'name': 'AuxPowerErrorChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '22.0.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '22.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AuxPowerErrorChans',
                'description': 'Indicates a list of names of any virtual channels in the task for which an auxiliary power supply error condition has been detected. You must read the Aux Power Error Channels Exist property before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadAuxPowerErrorChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Power',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 12768,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ReadAuxPowerErrorChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Aux Power Error:Aux Power Error Channels',
                'lvMenuWeight': 3753.0,
                'name': 'AuxPowerErrorChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '22.0.0_0_Power.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '22.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTiming',
                'cppEnumName': 'N/A',
                'cviName': 'Read_ChangeDetect_HasOverflowed',
                'description': 'Indicates if samples were missed because change detection events occurred faster than the device could handle them. <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/ChangeDetStaticDIO.html\');">Some devices</see> detect overflows differently than others.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Timing',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ChangeDetectionOverflowed',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 8596,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ReadChangeDetectHasOverflowed',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Status:Advanced:ChangeDetection:Overflowed',
                'lvMenuWeight': 3800.0,
                'name': 'ChangeDetect.Overflowed',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_RawDataWidth',
                'description': 'Indicates in bytes the size of a raw sample from the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadRawDataWidth',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 8570,
                'internalDataType': 'u32',
                'internalDescription': 'Supported by API/Infrastructure',
                'internalName': 'ReadRawDataWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Advanced:Raw Data Width',
                'lvMenuWeight': 3900.0,
                'name': 'RawDataWidth',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_NumChans',
                'description': 'Indicates the number of channels that &DAQmxRead; reads from the task. This value is the number of channels in the task or the number of channels you specify with &attr1823;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'NumberOfInputChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 8571,
                'internalDataType': 'u32',
                'internalDescription': 'Supported by API/Infrastructure',
                'internalName': 'ReadNumChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Advanced:Number of Channels',
                'lvMenuWeight': 4000.0,
                'name': 'NumChans',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_DigitalLines_BytesPerChan',
                'description': 'Indicates the number of &digitalLinesRepresentation; per channel that NI-DAQmx returns in a sample for line-based reads. If a channel has fewer lines than this number, the extra &digitalLinesRepresentation; are &false;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalLinesPerInputChannel',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Read',
                'id': 8572,
                'internalDataType': 'u32',
                'internalDescription': 'Supported by API/Infrastructure',
                'internalName': 'ReadDigitalLinesBytesPerChan',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Advanced:Digital Input:Number of Booleans Per Channel',
                'lvMenuWeight': 4200.0,
                'name': 'DI.NumBooleansPerChan',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'ReadWaitMode',
                'cviName': 'Read_WaitMode',
                'description': 'Specifies how &DAQmxRead; waits for samples to become available.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'ReadWaitMode',
                'dotNetName': 'ReadWaitMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 8754,
                'internalDataType': 'enum tWaitMode',
                'internalDescription': '',
                'internalName': 'ReadWaitMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum WaitMode:iL',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Advanced:Wait Mode',
                'lvMenuWeight': 4300.0,
                'name': 'WaitMode',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Read_SleepTime',
                'description': 'Specifies in seconds the amount of time to sleep after checking for available samples if &attr2232; is &val2232.12547;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadSleepTime',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Read',
                'id': 8880,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ReadSleepTime',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Read'
                ],
                'lvMenuName': 'Advanced:Sleep Time',
                'lvMenuWeight': 4400.0,
                'name': 'SleepTime',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Read properties to configure read operations, such as from what <a href="javascript:launchSharedHelp(\'mxcncpts.chm::/controlWhereBufferRead.html\');">position in a buffer</a> you want to read, and to <a href="javascript:launchSharedHelp(\'mxcncpts.chm::/readStatus.html\');">query the current status</a> of read operations.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Read',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'WriteRelativeTo',
                'cviName': 'Write_RelativeTo',
                'description': 'Specifies the point in the buffer at which to write data. If you also specify an offset with &attr190D;, the write operation begins at that offset relative to this point you select with this property.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'WriteRelativeTo',
                'dotNetName': 'WriteRelativeTo',
                'embeddedXMLHelpFiles': '',
                'expert': 'Writer',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Write',
                'id': 6412,
                'internalDataType': 'enum tWriteRelativeTo',
                'internalDescription': '',
                'internalName': 'RelativeTo',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum WriteRelativeTo:iL',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Relative To',
                'lvMenuWeight': 0.0,
                'name': 'RelativeTo',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_Offset',
                'description': 'Specifies in samples per channel an offset at which a write operation begins. This offset is relative to the location you specify with &attr190C;.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteOffset',
                'embeddedXMLHelpFiles': '',
                'expert': 'Writer',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Write',
                'id': 6413,
                'internalDataType': 'tIPtr',
                'internalDescription': '',
                'internalName': 'WriteOffset',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic iL',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Offset',
                'lvMenuWeight': 100.0,
                'name': 'Offset',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'WriteRegenerationMode',
                'cviName': 'Write_RegenMode',
                'description': 'Specifies whether to allow NI-DAQmx to generate the same data multiple times.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'WriteRegenerationMode',
                'dotNetName': 'WriteRegenerationMode',
                'embeddedXMLHelpFiles': 'regenmode.xml',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Write',
                'id': 5203,
                'internalDataType': 'enum tRegenerationMode',
                'internalDescription': '',
                'internalName': 'WriteRegenMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': True,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum RegenerationMode1:iL',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Regeneration Mode',
                'lvMenuWeight': 200.0,
                'name': 'RegenMode',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_CurrWritePos',
                'description': 'Indicates the position in the buffer of the next sample to generate. This value is identical for all channels in the task.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CurrentWritePosition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Writer',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Write',
                'id': 5208,
                'internalDataType': 'u64',
                'internalDescription': '',
                'internalName': 'WriteCurrWritePos',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Current Write Position',
                'lvMenuWeight': 400.0,
                'name': 'CurrWritePos',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_OvercurrentChansExist',
                'description': 'Indicates if the device(s) detected an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/overcurrentdet.html\');">overcurrent condition</see> for any channel in the task. Reading this property clears the overcurrent status for all channels in the task. You must read this property before you read &attr29E9;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteOvercurrentChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 10728,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'WriteOvercurrentChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Overcurrent:Overcurrent Channels Exist',
                'lvMenuWeight': 500.0,
                'name': 'OvercurrentChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_OvercurrentChans',
                'description': 'Indicates a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">list of names</see> of any virtual channels in the task for which an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/overcurrentdet.html\');">overcurrent condition</see> has been detected. You must read &attr29E8; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteOvercurrentChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 10729,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'WriteOvercurrentChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Overcurrent:Overcurrent Channels',
                'lvMenuWeight': 600.0,
                'name': 'OvercurrentChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_OvertemperatureChansExist',
                'description': 'Indicates if the device(s) detected an overtemperature condition in any virtual channel in the task. Reading this property clears the overtemperature status for all channels in the task. You must read this property before you read &attr3083;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteOvertemperatureChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 10884,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'WriteOvertemperatureChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Overtemperature:Overtemperature Channels Exist',
                'lvMenuWeight': 700.0,
                'name': 'OvertemperatureChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Write_OvertemperatureChans',
                'description': 'Indicates a list of names of any overtemperature virtual channels. You must read &attr2A84; before you read this property. Otherwise, you will receive an error. The list of names may be empty if the device cannot determine the source of the overtemperature.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteOvertemperatureChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 12419,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'WriteOvertemperatureChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Overtemperature:Overtemperature Channels',
                'lvMenuWeight': 800.0,
                'name': 'OvertemperatureChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Write_ExternalOvervoltageChansExist',
                'description': 'Indicates if the device(s) detected an External Overvoltage condition for any channel in the task. Reading this property clears the External Overvoltage status for all channels in the task. You must read this property before you read External OvervoltageChans. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteExternalOvervoltageChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'ExternalOvervoltage',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 12475,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'WriteExternalOvervoltageChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:External Overvoltage:External Overvoltage Channels Exist',
                'lvMenuWeight': 850.0,
                'name': 'ExternalOvervoltageChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_7_ExternalOvervoltage.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Write_ExternalOvervoltageChans',
                'description': 'Indicates a list of names of any virtual channels in the task for which an External Overvoltage condition has been detected. You must read External OvervoltageChansExist before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteExternalOvervoltageChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'ExternalOvervoltage',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 12476,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'WriteExternalOvervoltageChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:External Overvoltage:External Overvoltage Channels',
                'lvMenuWeight': 860.0,
                'name': 'ExternalOvervoltageChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_7_ExternalOvervoltage.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Write_OverloadedChansExist',
                'description': 'Indicates if the device(s) detected an overload in any virtual channel in the task. Reading this property clears the overload status for all channels in the task. You must read this property before you read &attr3085;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteOverloadedChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 12420,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'WriteOverloadedChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Overload:Overloaded Channels Exist',
                'lvMenuWeight': 900.0,
                'name': 'OverloadedChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Write_OverloadedChans',
                'description': 'Indicates a list of names of any overloaded virtual channels in the task. You must read &attr3084; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteOverloadedChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 12421,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'WriteOverloadedChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Overload:Overloaded Channels',
                'lvMenuWeight': 1000.0,
                'name': 'OverloadedChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_OpenCurrentLoopChansExist',
                'description': 'Indicates if the device(s) detected an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/opencurrent.html\');">open current loop</see> for any channel in the task. Reading this property clears the open current loop status for all channels in the task. You must read this property before you read &attr29EB;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteOpenCurrentLoopChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 10730,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'WriteOpenCurrentLoopChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Open Current Loop:Open Current Loop Channels Exist',
                'lvMenuWeight': 1100.0,
                'name': 'OpenCurrentLoopChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_OpenCurrentLoopChans',
                'description': 'Indicates a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">list of names</see> of any virtual channels in the task for which the device(s) detected an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/opencurrent.html\');">open current loop</see>. You must read &attr29EA; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteOpenCurrentLoopChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 10731,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'WriteOpenCurrentLoopChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Open Current Loop:Open Current Loop Channels',
                'lvMenuWeight': 1200.0,
                'name': 'OpenCurrentLoopChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_PowerSupplyFaultChansExist',
                'description': 'Indicates if the device(s) detected a <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/pwrsupfault.html\');">power supply fault</see> for any channel in the task. Reading this property clears the power supply fault status for all channels in the task. You must read this property before you read &attr29ED;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WritePowerSupplyFaultChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 10732,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'WritePowerSupplyFaultChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Power Supply Fault:Power Supply Fault Channels Exist',
                'lvMenuWeight': 1300.0,
                'name': 'PowerSupplyFaultChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_PowerSupplyFaultChans',
                'description': 'Indicates a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/physChanNames.html\');">list of names</see> of any virtual channels in the task that have a <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/pwrsupfault.html\');">power supply fault</see>. You must read &attr29EC; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WritePowerSupplyFaultChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 10733,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'WritePowerSupplyFaultChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Power Supply Fault:Power Supply Fault Channels',
                'lvMenuWeight': 1400.0,
                'name': 'PowerSupplyFaultChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Write_Sync_UnlockedChansExist',
                'description': 'Indicates whether the target is currently locked to the grand master. Devices may report PLL Unlock either during acquisition or after acquisition.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteSynchronizationUnlockedChannelsExist',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'TimeAPISyncUnlocked',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 12607,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'WriteSyncUnlockedChansExist',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Synchronization:Unlocked Channels Exist',
                'lvMenuWeight': 1450.0,
                'name': 'Sync.UnlockedChansExist',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_2_TimeAPISyncUnlocked.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Write_Sync_UnlockedChans',
                'description': 'Indicates the channels from devices in an unlocked target.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteSynchronizationUnlockedChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'TimeAPISyncUnlocked',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 12608,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'WriteSyncUnlockedChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Synchronization:Unlocked Channels',
                'lvMenuWeight': 1451.0,
                'name': 'Sync.UnlockedChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_2_TimeAPISyncUnlocked.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_SpaceAvail',
                'description': 'Indicates in samples per channel the amount of available space in the buffer.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OutputBufferSpaceAvailable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Writer',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Write',
                'id': 5216,
                'internalDataType': 'tSizeType',
                'internalDescription': '',
                'internalName': 'WriteSpaceAvail',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Space Available in Buffer',
                'lvMenuWeight': 1500.0,
                'name': 'SpaceAvail',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_TotalSampPerChanGenerated',
                'description': 'Indicates the total number of samples generated by each channel in the task. This value is identical for all channels in the task.',
                'disableSetNotVerified?': True,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TotalSamplesGeneratedPerChannel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Writer',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Write',
                'id': 6443,
                'internalDataType': 'u64',
                'internalDescription': '',
                'internalName': 'WriteTotalSampPerChanGenerated',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Total Samples Per Channel Generated',
                'lvMenuWeight': 1600.0,
                'name': 'TotalSampPerChanGenerated',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Write_AccessoryInsertionOrRemovalDetected',
                'description': 'Indicates if any devices in the task detected the insertion or removal of an accessory since the task started. Reading this property clears the accessory change status for all channels in the task. You must read this property before you read &attr3054;. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Task',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AccessoryInsertionOrRemovalDetected',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.7.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Write',
                'id': 12371,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'WriteAccessoryInsertionOrRemovalDetected',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Accessory:Accessory Insertion or Removal Detected',
                'lvMenuWeight': 1700.0,
                'name': 'AccessoryInsertionOrRemovalDetected',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.7.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Write_DevsWithInsertedOrRemovedAccessories',
                'description': 'Indicates the names of any devices that detected the insertion or removal of an accessory since the task started. You must read &attr3053; before you read this property. Otherwise, you will receive an error.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Task',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DevicesWithInsertedOrRemovedAccessories',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.7.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Write',
                'id': 12372,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'WriteDevsWithInsertedOrRemovedAccessories',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Status:Accessory:Devices with Inserted or Removed Accessories',
                'lvMenuWeight': 1800.0,
                'name': 'DevsWithInsertedOrRemovedAccessories',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.7.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_RawDataWidth',
                'description': 'Indicates in bytes the required size of a raw sample to write to the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteRawDataWidth',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 8573,
                'internalDataType': 'u32',
                'internalDescription': 'Supported by API/Infrastructure',
                'internalName': 'WriteRawDataWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Advanced:Raw Data Width',
                'lvMenuWeight': 1900.0,
                'name': 'RawDataWidth',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_NumChans',
                'description': 'Indicates the number of channels that &DAQmxWrite; writes to the task. This value is the number of channels in the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'NumberOfOutputChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 8574,
                'internalDataType': 'u32',
                'internalDescription': 'Supported by API/Infrastructure',
                'internalName': 'WriteNumChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Advanced:Number of Channels',
                'lvMenuWeight': 2000.0,
                'name': 'NumChans',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'WriteWaitMode',
                'cviName': 'Write_WaitMode',
                'description': 'Specifies how &DAQmxWrite; waits for space to become available in the buffer.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'WriteWaitMode',
                'dotNetName': 'WriteWaitMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Write',
                'id': 8881,
                'internalDataType': 'enum tWaitMode',
                'internalDescription': '',
                'internalName': 'WriteWaitMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum WaitMode2:iL',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Advanced:Wait Mode',
                'lvMenuWeight': 2100.0,
                'name': 'WaitMode',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_SleepTime',
                'description': 'Specifies in seconds the amount of time to sleep after checking for available buffer space if &attr22B1; is &val22B1.12547;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WriteSleepTime',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Write',
                'id': 8882,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'WriteSleepTime',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Advanced:Sleep Time',
                'lvMenuWeight': 2200.0,
                'name': 'SleepTime',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_NextWriteIsLast',
                'description': 'Specifies that the next samples written are the last samples you want to generate. Use this property when performing continuous generation to prevent underflow errors after writing the last sample. &attr1453; must be &val1453.10158; to use this property.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'NextWriteIsLast',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Write',
                'id': 10604,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'WriteNextWriteIsLast',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Advanced:Next Write Is Last',
                'lvMenuWeight': 2300.0,
                'name': 'NextWriteIsLast',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxStream',
                'cppEnumName': 'N/A',
                'cviName': 'Write_DigitalLines_BytesPerChan',
                'description': 'Indicates the number of Boolean values expected per channel in a sample for line-based writes. This property is determined by the channel in the task with the most digital lines. If a channel has fewer lines than this number, NI-DAQmx ignores the extra Boolean values.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqStream',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalLinesPerOutputChannel',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Write',
                'id': 8575,
                'internalDataType': 'u32',
                'internalDescription': 'Supported by API/Infrastructure',
                'internalName': 'WriteDigitalLinesBytesPerChan',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Write'
                ],
                'lvMenuName': 'Advanced:Digital Output:Number of Booleans Per Channel',
                'lvMenuWeight': 2400.0,
                'name': 'DO.NumBooleansPerChan',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Write properties to configure write options, such as to what <a href="javascript:launchSharedHelp(\'mxcncpts.chm::/controlWhereBufferWrite.html\');">position in a buffer</a> you want to write, and to <a href="javascript:launchSharedHelp(\'mxcncpts.chm::/writeStatus.html\');">query the current status</a> of write operations.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Write',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxBuffer',
                'cppEnumName': 'N/A',
                'cviName': 'Buf_Input_BufSize',
                'description': 'Specifies the number of samples the input buffer can hold for each channel in the task. Zero indicates to allocate no buffer. Use a buffer size of 0 to perform a hardware-timed operation without using a buffer. Setting this property overrides the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/bufferSize.html\');">automatic input buffer allocation</see> that NI-DAQmx performs.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqBuffer',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'InputBufferSize',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Buffer',
                'id': 6252,
                'internalDataType': 'tSizeType',
                'internalDescription': '',
                'internalName': 'BufInputBufSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Advanced:Buffer'
                ],
                'lvMenuName': 'Input:Buffer Size',
                'lvMenuWeight': 0.0,
                'name': 'Input.BufSize',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxBuffer',
                'cppEnumName': 'N/A',
                'cviName': 'Buf_Input_OnbrdBufSize',
                'description': 'Indicates in samples per channel the size of the onboard input buffer of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqBuffer',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'InputOnBoardBufferSize',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Buffer',
                'id': 8970,
                'internalDataType': 'tSizeType',
                'internalDescription': '',
                'internalName': 'BufInputOnbrdBufSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Advanced:Buffer'
                ],
                'lvMenuName': 'Input:Onboard Buffer Size',
                'lvMenuWeight': 100.0,
                'name': 'Input.OnbrdBufSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxBuffer',
                'cppEnumName': 'N/A',
                'cviName': 'Buf_Output_BufSize',
                'description': 'Specifies the number of samples the output buffer can hold for each channel in the task. Zero indicates to allocate no buffer. Use a buffer size of 0 to perform a hardware-timed operation without using a buffer. Setting this property overrides the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/bufferSize.html\');">automatic output buffer allocation</see> that NI-DAQmx performs.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqBuffer',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OutputBufferSize',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Buffer',
                'id': 6253,
                'internalDataType': 'tSizeType',
                'internalDescription': '',
                'internalName': 'BufOutputBufSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Advanced:Buffer'
                ],
                'lvMenuName': 'Output:Buffer Size',
                'lvMenuWeight': 200.0,
                'name': 'Output.BufSize',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxBuffer',
                'cppEnumName': 'N/A',
                'cviName': 'Buf_Output_OnbrdBufSize',
                'description': 'Specifies in samples per channel the size of the onboard output buffer of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqBuffer',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'OutputOnBoardBufferSize',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Buffer',
                'id': 8971,
                'internalDataType': 'tSizeType',
                'internalDescription': '',
                'internalName': 'BufOutputOnbrdBufSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Advanced:Buffer'
                ],
                'lvMenuName': 'Output:Onboard Buffer Size',
                'lvMenuWeight': 300.0,
                'name': 'Output.OnbrdBufSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Buffer properties to configure input and output buffers in computer memory and to query the size of device onboard buffers.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Buffer',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSinglePoint',
                'cppEnumName': 'N/A',
                'cviName': 'RealTime_ConvLateErrorsToWarnings',
                'description': 'Specifies if &DAQmxWaitforNextSC;, &DAQmxRead;, and &DAQmxWrite; convert late errors to warnings. NI-DAQmx returns no late warnings or errors until the number of warmup iterations you specify with &attr22ED; execute.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SinglePoint',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ConvertLateErrorsToWarnings',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Real-Time',
                'id': 8942,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'RealTimeConvLateErrorsToWarnings',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Real-Time'
                ],
                'lvMenuName': 'Convert Late Errors To Warnings',
                'lvMenuWeight': 0.0,
                'name': 'ConvLateErrorsToWarnings',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSinglePoint',
                'cppEnumName': 'N/A',
                'cviName': 'RealTime_NumOfWarmupIters',
                'description': 'Specifies the number of loop iterations that must occur before &DAQmxWaitforNextSC; and &DAQmxRead; return any late warnings or errors. The system needs a number of iterations to stabilize. During this period, a large amount of jitter occurs, potentially causing reads and writes to be late. The default number of warmup iterations is 100. Specify a larger number if needed to stabilize the system.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SinglePoint',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'NumberOfWarmupIterations',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Real-Time',
                'id': 8941,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'RealTimeNumOfWarmupIters',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Advanced:Real-Time'
                ],
                'lvMenuName': 'Number Of Warmup Iterations',
                'lvMenuWeight': 100.0,
                'name': 'NumOfWarmupIters',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSinglePoint',
                'cppEnumName': 'WaitForNextSampleClockWaitMode',
                'cviName': 'RealTime_WaitForNextSampClkWaitMode',
                'description': 'Specifies how &DAQmxWaitforNextSC; waits for the next Sample Clock pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SinglePoint',
                'dotNetEnumName': 'WaitForNextSampleClockWaitMode',
                'dotNetName': 'WaitForNextSampleClockWaitMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Real-Time',
                'id': 8943,
                'internalDataType': 'enum tWaitMode',
                'internalDescription': '',
                'internalName': 'RealTimeWaitForNextSampClkWaitMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum WaitMode3:iL',
                'lvFilter': [
                    'Advanced:Real-Time'
                ],
                'lvMenuName': 'Wait For Next Sample Clock Wait Mode',
                'lvMenuWeight': 200.0,
                'name': 'WaitForNextSampClkWaitMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSinglePoint',
                'cppEnumName': 'N/A',
                'cviName': 'RealTime_ReportMissedSamp',
                'description': 'Specifies whether &DAQmxRead; returns lateness errors or warnings when it detects missed Sample Clock pulses. This setting does not affect &DAQmxWaitforNextSC;. Set this property to &true; for <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/readwritelate.html\');">applications</see> that need to detect lateness without using &DAQmxWaitforNextSC;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SinglePoint',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReportMissedSamples',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Real-Time',
                'id': 8985,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'RealTimeReportMissedSamp',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Real-Time'
                ],
                'lvMenuName': 'Report Missed Samples',
                'lvMenuWeight': 300.0,
                'name': 'ReportMissedSamp',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSinglePoint',
                'cppEnumName': 'WriteRecoveryMode',
                'cviName': 'RealTime_WriteRecoveryMode',
                'description': 'Specifies how NI-DAQmx attempts to recover after missing a Sample Clock pulse when performing counter writes.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SinglePoint',
                'dotNetEnumName': 'WriteRecoveryMode',
                'dotNetName': 'WriteRecoveryMode',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Real-Time',
                'id': 8986,
                'internalDataType': 'enum tWaitMode',
                'internalDescription': '',
                'internalName': 'RealTimeWriteRecoveryMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum WaitMode4:iL',
                'lvFilter': [
                    'Advanced:Real-Time'
                ],
                'lvMenuName': 'Write Recovery Mode',
                'lvMenuWeight': 400.0,
                'name': 'WriteRecoveryMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Real-Time properties to configure error reporting and recovery options for deterministic applications.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Real-Time',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_AIConvClk_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the AI Convert Clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIConvertClockOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5767,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedAIConvClkOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:AI Convert Clock:Output Terminal',
                'lvMenuWeight': 100.0,
                'name': 'AIConvClk.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'AIConvertClockPulsePolarity',
                'cviName': 'Exported_AIConvClk_Pulse_Polarity',
                'description': 'Indicates the polarity of the exported AI Convert Clock. The polarity is fixed and independent of the active edge of the source of the AI Convert Clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'AIConvertClockPulsePolarity',
                'dotNetName': 'AIConvertClockPulsePolarity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5768,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedAIConvClkPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:AI Convert Clock:Pulse:Polarity',
                'lvMenuWeight': 200.0,
                'name': 'AIConvClk.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_AIConvClk_Pulse_WidthUnits',
                'description': 'Specifies the units of &attr1690;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5769,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'ExportedAIConvClkPulseWidthUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:AI Convert Clock:Pulse:Width Units',
                'lvMenuWeight': 300.0,
                'name': 'AIConvClk.Pulse.WidthUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_AIConvClk_Pulse_Width',
                'description': 'Specifies the width of an exported AI Convert Clock pulse, in units specfied with &attr1689;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5776,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedAIConvClkPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:AI Convert Clock:Pulse:Width Value',
                'lvMenuWeight': 400.0,
                'name': 'AIConvClk.Pulse.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_FreqOutClk_Pulse_Polarity',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Export Signal',
                'id': 5906,
                'internalDataType': '',
                'internalDescription': '',
                'internalName': 'ExportedFreqOutClkPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Frequency Output Clock:Pulse:Polarity',
                'lvMenuWeight': 600.0,
                'name': 'FreqOutClk.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_FreqOutClk_Pulse_WidthUnits',
                'description': 'The units of the width attribute',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Export Signal',
                'id': 5907,
                'internalDataType': '',
                'internalDescription': '',
                'internalName': 'ExportedFreqOutClkPulseWidthUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Frequency Output Clock:Pulse:Width Units',
                'lvMenuWeight': 700.0,
                'name': 'FreqOutClk.Pulse.WidthUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_FreqOutClk_Pulse_Width',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Export Signal',
                'id': 5908,
                'internalDataType': '',
                'internalDescription': '',
                'internalName': 'ExportedFreqOutClkPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Frequency Output Clock:Pulse:Width Value',
                'lvMenuWeight': 800.0,
                'name': 'FreqOutClk.Pulse.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_10MHzRefClk_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the 10MHz Clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReferenceClock10MHzOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8814,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'Exported10MHzRefClkOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:10MHz Reference Clock:Output Terminal',
                'lvMenuWeight': 900.0,
                'name': '10MHzRefClk.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_20MHzTimebase_DivideDownByN',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5718,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'Exported20MHzTimebaseDivideDownByN',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:20MHz Timebase:Divide Down By N',
                'lvMenuWeight': 1000.0,
                'name': '20MHzTimebase.DivideDownByN',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_20MHzTimebase_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the 20MHz Timebase.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Timebase20MHzOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5719,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'Exported20MHzTimebaseOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:20MHz Timebase:Output Terminal',
                'lvMenuWeight': 1100.0,
                'name': '20MHzTimebase.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_20MHzTimebase_Pulse_Polarity',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5720,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'Exported20MHzTimebasePulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:20MHz Timebase:Pulse:Polarity',
                'lvMenuWeight': 1200.0,
                'name': '20MHzTimebase.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_20MHzTimebase_Pulse_WidthUnits',
                'description': 'The units of the width attribute',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5721,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'Exported20MHzTimebasePulseWidthUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:20MHz Timebase:Pulse:Width Units',
                'lvMenuWeight': 1300.0,
                'name': '20MHzTimebase.Pulse.WidthUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_20MHzTimebase_Pulse_Width',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5728,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'Exported20MHzTimebasePulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:20MHz Timebase:Pulse:Width Value',
                'lvMenuWeight': 1400.0,
                'name': '20MHzTimebase.Pulse.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_RefClk_Pulse_Polarity',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5942,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedRefClkPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Reference Clock:Pulse:Polarity',
                'lvMenuWeight': 1700.0,
                'name': 'RefClk.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_RefClk_Pulse_WidthUnits',
                'description': 'The units of the width attribute',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5943,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'ExportedRefClkPulseWidthUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Reference Clock:Pulse:Width Units',
                'lvMenuWeight': 1800.0,
                'name': 'RefClk.Pulse.WidthUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_RefClk_Pulse_Width',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5944,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedRefClkPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Reference Clock:Pulse:Width Value',
                'lvMenuWeight': 1900.0,
                'name': 'RefClk.Pulse.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'SampleClockOutputBehavior',
                'cviName': 'Exported_SampClk_OutputBehavior',
                'description': 'Specifies whether the exported Sample Clock issues a pulse at the beginning of a sample or changes to a high state for the duration of the sample.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'SampleClockOutputBehavior',
                'dotNetName': 'SampleClockOutputBehavior',
                'embeddedXMLHelpFiles': 'sampclkoutbehavior.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 6251,
                'internalDataType': 'enum tExportAction',
                'internalDescription': '',
                'internalName': 'ExportedSampClkOutputBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ExportActions3:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Sample Clock:Output Behavior',
                'lvMenuWeight': 2000.0,
                'name': 'SampClk.OutputBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_SampClk_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Sample Clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5731,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedSampClkOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Sample Clock:Output Terminal',
                'lvMenuWeight': 2200.0,
                'name': 'SampClk.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_SampClk_DelayOffset',
                'description': 'Specifies in seconds the amount of time to offset the exported Sample clock.  Refer to timing diagrams for generation applications in the device documentation for more information about this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockDelayOffset',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8644,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedSampClkDelayOffset',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Sample Clock:Delay Offset',
                'lvMenuWeight': 2500.0,
                'name': 'SampClk.DelayOffset',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'SampleClockPulsePolarity',
                'cviName': 'Exported_SampClk_Pulse_Polarity',
                'description': 'Specifies the polarity of the exported Sample Clock if &attr186B; is &val186B.10265;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'SampleClockPulsePolarity',
                'dotNetName': 'SampleClockPulsePolarity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5732,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedSampClkPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Sample Clock:Pulse:Polarity',
                'lvMenuWeight': 2600.0,
                'name': 'SampClk.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_SampClk_Pulse_WidthUnits',
                'description': 'The units of the width attribute',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5733,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'ExportedSampClkPulseWidthUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Sample Clock:Pulse:Width Units',
                'lvMenuWeight': 2700.0,
                'name': 'SampClk.Pulse.WidthUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_SampClk_Pulse_Width',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5734,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedSampClkPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Sample Clock:Pulse:Width Value',
                'lvMenuWeight': 2800.0,
                'name': 'SampClk.Pulse.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_SampClkTimebase_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Sample Clock Timebase.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SampleClockTimebaseOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 6393,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedSampClkTimebaseOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Sample Clock Timebase:Output Terminal',
                'lvMenuWeight': 2900.0,
                'name': 'SampClkTimebase.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_DividedSampClkTimebase_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Divided Sample Clock Timebase.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DividedSampleClockTimebaseOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8609,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedDividedSampClkTimebaseOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Clocks:Divided Sample Clock Timebase:Output Terminal',
                'lvMenuWeight': 3100.0,
                'name': 'DividedSampClkTimebase.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_AdvTrig_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Advance Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AdvanceTriggerOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5701,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedAdvTrigOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Advance Trigger:Output Terminal',
                'lvMenuWeight': 3200.0,
                'name': 'AdvTrig.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'AdvanceTriggerPulsePolarity',
                'cviName': 'Exported_AdvTrig_Pulse_Polarity',
                'description': 'Indicates the polarity of the exported Advance Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'AdvanceTriggerPulsePolarity',
                'dotNetName': 'AdvanceTriggerPulsePolarity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5702,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedAdvTrigPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Advance Trigger:Pulse:Polarity',
                'lvMenuWeight': 3300.0,
                'name': 'AdvTrig.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'AdvanceTriggerPulseWidthUnits',
                'cviName': 'Exported_AdvTrig_Pulse_WidthUnits',
                'description': 'Specifies the units of &attr1648;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'AdvanceTriggerPulseWidthUnits',
                'dotNetName': 'AdvanceTriggerPulseWidthUnits',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5703,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'ExportedAdvTrigPulseWidthUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits3:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Advance Trigger:Pulse:Width Units',
                'lvMenuWeight': 3400.0,
                'name': 'AdvTrig.Pulse.WidthUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_AdvTrig_Pulse_Width',
                'description': 'Specifies the width of an exported Advance Trigger pulse. Specify this value in the units you specify with &attr1647;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AdvanceTriggerPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5704,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedAdvTrigPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Advance Trigger:Pulse:Width Value',
                'lvMenuWeight': 3500.0,
                'name': 'AdvTrig.Pulse.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_PauseTrig_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Pause Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PauseTriggerOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5653,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedPauseTrigOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Pause Trigger:Output Terminal',
                'lvMenuWeight': 3800.0,
                'name': 'PauseTrig.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'PauseTriggerLevelActiveLevel',
                'cviName': 'Exported_PauseTrig_Lvl_ActiveLvl',
                'description': 'Specifies the active level of the exported Pause Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'PauseTriggerLevelActiveLevel',
                'dotNetName': 'PauseTriggerLevelActiveLevel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5654,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedPauseTrigLvlActiveLvl',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Pause Trigger:Level:Active Level',
                'lvMenuWeight': 3900.0,
                'name': 'PauseTrig.Lvl.ActiveLvl',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_RefTrig_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Reference Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReferenceTriggerOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 1424,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedRefTrigOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Reference Trigger:Output Terminal',
                'lvMenuWeight': 4200.0,
                'name': 'RefTrig.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'ReferenceTriggerPulsePolarity',
                'cviName': 'Exported_RefTrig_Pulse_Polarity',
                'description': 'Specifies the polarity of the exported Reference Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'ReferenceTriggerPulsePolarity',
                'dotNetName': 'ReferenceTriggerPulsePolarity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 1425,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedRefTrigPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Reference Trigger:Pulse:Polarity',
                'lvMenuWeight': 4500.0,
                'name': 'RefTrig.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_StartTrig_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Start Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'StartTriggerOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 1412,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedStartTrigOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Start Trigger:Output Terminal',
                'lvMenuWeight': 5100.0,
                'name': 'StartTrig.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_StartTrig_OutputBehavior',
                'description': 'The behavior of the output signal',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5955,
                'internalDataType': 'enum tExportAction',
                'internalDescription': '',
                'internalName': 'ExportedStartTrigOutputBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ExportActions:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Start Trigger:Output Behavior',
                'lvMenuWeight': 5200.0,
                'name': 'StartTrig.OutputBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_StartTrig_Delay',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 1409,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedStartTrigDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Start Trigger:Delay Value',
                'lvMenuWeight': 5300.0,
                'name': 'StartTrig.Delay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_StartTrig_DelayUnits',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5965,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'ExportedStartTrigDelayUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Start Trigger:Delay Units',
                'lvMenuWeight': 5400.0,
                'name': 'StartTrig.DelayUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_StartTrig_Toggle_InitialState',
                'description': 'The initial level of the output toggle',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5956,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'ExportedStartTrigToggleInitialState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Level1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Start Trigger:Toggle:Initial State',
                'lvMenuWeight': 5500.0,
                'name': 'StartTrig.Toggle.InitialState',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'StartTriggerPulsePolarity',
                'cviName': 'Exported_StartTrig_Pulse_Polarity',
                'description': 'Specifies the polarity of the exported Start Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'StartTriggerPulsePolarity',
                'dotNetName': 'StartTriggerPulsePolarity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 1413,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedStartTrigPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Start Trigger:Pulse:Polarity',
                'lvMenuWeight': 5600.0,
                'name': 'StartTrig.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_StartTrig_Pulse_WidthUnits',
                'description': 'The units of the width attribute',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5634,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'ExportedStartTrigPulseWidthUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Start Trigger:Pulse:Width Units',
                'lvMenuWeight': 5700.0,
                'name': 'StartTrig.Pulse.WidthUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_StartTrig_Pulse_Width',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Trigger',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 1414,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedStartTrigPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Triggers:Start Trigger:Pulse:Width Value',
                'lvMenuWeight': 5800.0,
                'name': 'StartTrig.Pulse.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_AdvCmpltEvent_Enable',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Export Signal',
                'id': 5706,
                'internalDataType': '',
                'internalDescription': '',
                'internalName': 'ExportedAdvCmpltEventEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Advance Complete Event:Enable',
                'lvMenuWeight': 6200.0,
                'name': 'AdvCmpltEvent.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_AdvCmpltEvent_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Advance Complete Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AdvanceCompleteEventOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5713,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedAdvCmpltEventOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Advance Complete Event:Output Terminal',
                'lvMenuWeight': 6300.0,
                'name': 'AdvCmpltEvent.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_AdvCmpltEvent_Delay',
                'description': 'Specifies the output signal delay in periods of the sample clock.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AdvanceCompleteEventDelay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5975,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedAdvCmpltEventDelayVal',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Advance Complete Event:Delay Value',
                'lvMenuWeight': 6400.0,
                'name': 'AdvCmpltEvent.Delay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'AdvanceCompleteEventPulsePolarity',
                'cviName': 'Exported_AdvCmpltEvent_Pulse_Polarity',
                'description': 'Specifies the polarity of the exported Advance Complete Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'AdvanceCompleteEventPulsePolarity',
                'dotNetName': 'AdvanceCompleteEventPulsePolarity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5714,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedAdvCmpltEventPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Advance Complete Event:Pulse:Polarity',
                'lvMenuWeight': 6600.0,
                'name': 'AdvCmpltEvent.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_AdvCmpltEvent_Pulse_WidthUnits',
                'description': 'The units of the width attribute',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5715,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'ExportedAdvCmpltEventPulseWidthUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Advance Complete Event:Pulse:Width Units',
                'lvMenuWeight': 6700.0,
                'name': 'AdvCmpltEvent.Pulse.WidthUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_AdvCmpltEvent_Pulse_Width',
                'description': 'Specifies the width of the exported Advance Complete Event pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AdvanceCompleteEventPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5716,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedAdvCmpltEventPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Advance Complete Event:Pulse:Width Value',
                'lvMenuWeight': 6800.0,
                'name': 'AdvCmpltEvent.Pulse.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_AIHoldCmpltEvent_OutputTerm',
                'description': 'Specifies the terminal to which to route the AI Hold Complete Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIHoldCompleteEventOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 6381,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedAIHoldCmpltEventOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:AI Hold Complete Event:Output Terminal',
                'lvMenuWeight': 6900.0,
                'name': 'AIHoldCmpltEvent.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'AIHoldCompleteEventPulsePolarity',
                'cviName': 'Exported_AIHoldCmpltEvent_PulsePolarity',
                'description': 'Specifies the polarity of an exported AI Hold Complete Event pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'AIHoldCompleteEventPulsePolarity',
                'dotNetName': 'AIHoldCompleteEventPulsePolarity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 6382,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedAIHoldCmpltEventPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:AI Hold Complete Event:Pulse:Polarity',
                'lvMenuWeight': 7000.0,
                'name': 'AIHoldCmpltEvent.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_ChangeDetectEvent_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Change Detection Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ChangeDetectionEventOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8599,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedChangeDetectEventOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Change Detection Event:Output Terminal',
                'lvMenuWeight': 7100.0,
                'name': 'ChangeDetectEvent.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'ChangeDetectionEventPulsePolarity',
                'cviName': 'Exported_ChangeDetectEvent_Pulse_Polarity',
                'description': 'Specifies the polarity of an exported Change Detection Event pulse.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'ChangeDetectionEventPulsePolarity',
                'dotNetName': 'ChangeDetectionEventPulsePolarity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8963,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedChangeDetectEventPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Change Detection Event:Pulse:Polarity',
                'lvMenuWeight': 7200.0,
                'name': 'ChangeDetectEvent.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_CtrOutEvent_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Counter Output Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CounterOutputEventOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5911,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedCtrOutEventOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Counter Output Event:Output Terminal',
                'lvMenuWeight': 7300.0,
                'name': 'CtrOutEvent.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'CounterOutputEventOutputBehavior',
                'cviName': 'Exported_CtrOutEvent_OutputBehavior',
                'description': 'Specifies whether the exported Counter Output Event pulses or changes from one state to the other when the counter reaches terminal count.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'CounterOutputEventOutputBehavior',
                'dotNetName': 'CounterOutputEventOutputBehavior',
                'embeddedXMLHelpFiles': 'ctroutbehavior.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5967,
                'internalDataType': 'enum tExportAction',
                'internalDescription': '',
                'internalName': 'ExportedCtrOutEventOutputBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ExportActions2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Counter Output Event:Output Behavior',
                'lvMenuWeight': 7400.0,
                'name': 'CtrOutEvent.OutputBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'CounterOutputEventPulsePolarity',
                'cviName': 'Exported_CtrOutEvent_Pulse_Polarity',
                'description': 'Specifies the polarity of the pulses at the output terminal of the counter when &attr174F; is &val174F.10265;. NI-DAQmx ignores this property if &attr174F; is &val174F.10307;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'CounterOutputEventPulsePolarity',
                'dotNetName': 'CounterOutputEventPulsePolarity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5912,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedCtrOutEventPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Counter Output Event:Pulse:Polarity',
                'lvMenuWeight': 7500.0,
                'name': 'CtrOutEvent.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_CtrOutEvent_Pulse_WidthUnits',
                'description': 'The units of the width attribute',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Export Signal',
                'id': 5913,
                'internalDataType': '',
                'internalDescription': '',
                'internalName': 'ExportedCtrOutEventPulseWidthUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Counter Output Event:Pulse:Width Units',
                'lvMenuWeight': 7600.0,
                'name': 'CtrOutEvent.Pulse.WidthUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_CtrOutEvent_Pulse_Width',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Export Signal',
                'id': 5920,
                'internalDataType': '',
                'internalDescription': '',
                'internalName': 'ExportedCtrOutEventPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Counter Output Event:Pulse:Width Value',
                'lvMenuWeight': 7700.0,
                'name': 'CtrOutEvent.Pulse.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'CounterOutputEventIdleState',
                'cviName': 'Exported_CtrOutEvent_Toggle_IdleState',
                'description': 'Specifies the initial state of the output terminal of the counter when &attr174F; is &val174F.10307;. The terminal enters this state when NI-DAQmx <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/committedstate.html\');">commits</see> the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'CounterOutputEventIdleState',
                'dotNetName': 'CounterOutputEventIdleState',
                'embeddedXMLHelpFiles': 'COtoggleidlestate.xml',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 6250,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'ExportedCtrOutEventToggleIdleState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Level1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Counter Output Event:Toggle:Idle State',
                'lvMenuWeight': 7800.0,
                'name': 'CtrOutEvent.Toggle.IdleState',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_CtrOutEvent_Lvl_Polarity',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5968,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedCtrOutEventLvlPolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Counter Output Event:Level:Polarity',
                'lvMenuWeight': 7900.0,
                'name': 'CtrOutEvent.Lvl.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_HshkEvent_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Handshake Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'HandshakeEventOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8890,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedHshkEventOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Handshake Event:Output Terminal',
                'lvMenuWeight': 8000.0,
                'name': 'HshkEvent.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'HandshakeEventOutputBehavior',
                'cviName': 'Exported_HshkEvent_OutputBehavior',
                'description': 'Specifies the output behavior of the Handshake Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'HandshakeEventOutputBehavior',
                'dotNetName': 'HandshakeEventOutputBehavior',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8891,
                'internalDataType': 'enum tExportAction',
                'internalDescription': '',
                'internalName': 'ExportedHshkEventOutputBehavior',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ExportActions5:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Handshake Event:Output Behavior',
                'lvMenuWeight': 8100.0,
                'name': 'HshkEvent.OutputBehavior',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_HshkEvent_Delay',
                'description': 'Specifies the number of seconds to delay after the Handshake Trigger deasserts before asserting the Handshake Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'HandshakeEventDelay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8892,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedHshkEventDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Handshake Event:Delay Value',
                'lvMenuWeight': 8200.0,
                'name': 'HshkEvent.Delay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'HandshakeEventInterlockedAssertedLevel',
                'cviName': 'Exported_HshkEvent_Interlocked_AssertedLvl',
                'description': 'Specifies the asserted level of the exported Handshake Event if &attr22BB; is &val22BB.12549;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'HandshakeEventInterlockedAssertedLevel',
                'dotNetName': 'HandshakeEventInterlockedAssertedLevel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8893,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'ExportedHshkEventInterlockedAssertedLvl',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Level1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Handshake Event:Interlocked:Asserted Level',
                'lvMenuWeight': 8300.0,
                'name': 'HshkEvent.Interlocked.AssertedLvl',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_HshkEvent_Interlocked_AssertOnStart',
                'description': 'Specifies to assert the Handshake Event when the task starts if &attr22BB; is &val22BB.12549;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'HandshakeEventInterlockedAssertOnStart',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8894,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'ExportedHshkEventInterlockedAssertOnStart',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Handshake Event:Interlocked:Assert on Start',
                'lvMenuWeight': 8400.0,
                'name': 'HshkEvent.Interlocked.AssertOnStart',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_HshkEvent_Interlocked_DeassertDelay',
                'description': 'Specifies in seconds the amount of time to wait after the Handshake Trigger asserts before deasserting the Handshake Event if &attr22BB; is &val22BB.12549;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'HandshakeEventInterlockedDeassertDelay',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8895,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedHshkEventInterlockedDeassertDelay',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Handshake Event:Interlocked:Deassert Delay Value',
                'lvMenuWeight': 8500.0,
                'name': 'HshkEvent.Interlocked.DeassertDelay',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'HandshakeEventPulsePolarity',
                'cviName': 'Exported_HshkEvent_Pulse_Polarity',
                'description': 'Specifies the polarity of the exported Handshake Event if &attr22BB; is &val22BB.10265;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'HandshakeEventPulsePolarity',
                'dotNetName': 'HandshakeEventPulsePolarity',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8896,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedHshkEventPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Handshake Event:Pulse:Polarity',
                'lvMenuWeight': 8600.0,
                'name': 'HshkEvent.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_HshkEvent_Pulse_Width',
                'description': 'Specifies in seconds the pulse width of the exported Handshake Event if &attr22BB; is &val22BB.10265;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'HandshakeEventPulseWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8897,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedHshkEventPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Handshake Event:Pulse:Width Value',
                'lvMenuWeight': 8700.0,
                'name': 'HshkEvent.Pulse.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_RdyForXferEvent_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Ready for Transfer Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadyForTransferEventOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8885,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedRdyForXferEventOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Ready For Transfer Event:Output Terminal',
                'lvMenuWeight': 8800.0,
                'name': 'RdyForXferEvent.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'ReadyForTransferEventLevelActiveLevel',
                'cviName': 'Exported_RdyForXferEvent_Lvl_ActiveLvl',
                'description': 'Specifies the active level of the exported Ready for Transfer Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'ReadyForTransferEventLevelActiveLevel',
                'dotNetName': 'ReadyForTransferEventLevelActiveLevel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8886,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedRdyForXferEventLvlActiveLvl',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Ready For Transfer Event:Level:Active Level',
                'lvMenuWeight': 8900.0,
                'name': 'RdyForXferEvent.Lvl.ActiveLvl',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'ReadyForTransferEventDeassertCondition',
                'cviName': 'Exported_RdyForXferEvent_DeassertCond',
                'description': 'Specifies when the ready for transfer event deasserts.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'ReadyForTransferEventDeassertCondition',
                'dotNetName': 'ReadyForTransferEventDeassertCondition',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 10595,
                'internalDataType': 'enum tDeassertCondition',
                'internalDescription': '',
                'internalName': 'ExportedRdyForXferEventDeassertCond',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DeassertCondition:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Ready For Transfer Event:Deassert Condition',
                'lvMenuWeight': 9000.0,
                'name': 'RdyForXferEvent.DeassertCond',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_RdyForXferEvent_DeassertCondCustomThreshold',
                'description': 'Specifies in samples the threshold below which the Ready for Transfer Event deasserts. This threshold is an amount of space available in the onboard memory of the device. &attr2963; must be &val2963.12577; to use a custom threshold.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReadyForTransferEventDeassertConditionCustomThreshold',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 10596,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'ExportedRdyForXferEventDeassertCondCustomThreshold',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Ready For Transfer Event:Deassert Condition Custom Threshold',
                'lvMenuWeight': 9100.0,
                'name': 'RdyForXferEvent.DeassertCondCustomThreshold',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_DataActiveEvent_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to export the Data Active Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DataActiveEventOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5683,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedDataActiveEventOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Data Active Event:Output Terminal',
                'lvMenuWeight': 9200.0,
                'name': 'DataActiveEvent.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'DataActiveEventLevelActiveLevel',
                'cviName': 'Exported_DataActiveEvent_Lvl_ActiveLvl',
                'description': 'Specifies the polarity of the exported Data Active Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'DataActiveEventLevelActiveLevel',
                'dotNetName': 'DataActiveEventLevelActiveLevel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5684,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedDataActiveEventLvlActiveLvl',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Data Active Event:Level:Active Level',
                'lvMenuWeight': 9400.0,
                'name': 'DataActiveEvent.Lvl.ActiveLvl',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'ReadyForStartEventOutputTerminal',
                'cviName': 'Exported_RdyForStartEvent_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Ready for Start Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'ReadyForStartEventOutputTerminal',
                'dotNetName': 'ReadyForStartEventOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5641,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedRdyForStartEventOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Ready For Start Event:Output Terminal',
                'lvMenuWeight': 12000.0,
                'name': 'RdyForStartEvent.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'ReadyForStartEventLevelActiveLevel',
                'cviName': 'Exported_RdyForStartEvent_Lvl_ActiveLvl',
                'description': 'Specifies the polarity of the exported Ready for Start Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'ReadyForStartEventLevelActiveLevel',
                'dotNetName': 'ReadyForStartEventLevelActiveLevel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5969,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedRdyForStartEventLvlActiveLvl',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Ready For Start Event:Level:Active Level',
                'lvMenuWeight': 12300.0,
                'name': 'RdyForStartEvent.Lvl.ActiveLvl',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_RdyForRefEvent_Pulse_Polarity',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5666,
                'internalDataType': 'enum tPolarity',
                'internalDescription': '',
                'internalName': 'ExportedRdyForRefEventPulsePolarity',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum Polarity2:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Ready For Reference Event:Pulse:Polarity',
                'lvMenuWeight': 13200.0,
                'name': 'RdyForRefEvent.Pulse.Polarity',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_RdyForRefEvent_Pulse_WidthUnits',
                'description': 'The units of the width attribute',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5667,
                'internalDataType': 'enum tDigitalWidthUnits',
                'internalDescription': '',
                'internalName': 'ExportedRdyForRefEventPulseWidthUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalWidthUnits1:iL',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Ready For Reference Event:Pulse:Width Units',
                'lvMenuWeight': 13300.0,
                'name': 'RdyForRefEvent.Pulse.WidthUnits',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_RdyForRefEvent_Pulse_Width',
                'description': 'blah blah',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 5668,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExportedRdyForRefEventPulseWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Ready For Reference Event:Pulse:Width Value',
                'lvMenuWeight': 13400.0,
                'name': 'RdyForRefEvent.Pulse.Width',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_SyncPulseEvent_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> to which to route the Synchronization Pulse Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SynchronizationPulseEventOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8764,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedSyncPulseEventOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Synchronization Pulse Event:Output Terminal',
                'lvMenuWeight': 14500.0,
                'name': 'SyncPulseEvent.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxExportSignals',
                'cppEnumName': 'N/A',
                'cviName': 'Exported_WatchdogExpiredEvent_OutputTerm',
                'description': 'Specifies the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see>  to which to route the Watchdog Timer Expired Event.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'ExportSignals',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'WatchdogExpiredEventOutputTerminal',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Export Signal',
                'id': 8618,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ExportedWatchdogExpiredEventOutputTerm',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Export Signal'
                ],
                'lvMenuName': 'Events:Watchdog Timer Expired Event:Output Terminal',
                'lvMenuWeight': 14600.0,
                'name': 'WatchdogExpiredEvent.OutputTerm',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Export Signal properties to route a control signal within a device or from one device to another. These routes are task-based and are useful for sharing clocks and triggers among multiple devices.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Export Signal',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxWatchdog',
                'cppEnumName': 'N/A',
                'cviName': 'Watchdog_Timeout',
                'description': 'Specifies in seconds the amount of time until the watchdog timer expires. A value of -1 means the internal timer never expires. Set this input to -1 if you use an Expiration Trigger to expire the watchdog task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Watchdog',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Timeout',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Watchdog',
                'id': 8617,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'WatchdogTimeout',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Watchdog'
                ],
                'lvMenuName': 'Timeout',
                'lvMenuWeight': 0.0,
                'name': 'Timeout',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxWatchdogExpirationTrigger',
                'cppEnumName': 'WatchdogExpirationTriggerType',
                'cviName': 'WatchdogExpirTrig_Type',
                'description': 'Specifies the type of trigger to use to expire a watchdog task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'WatchdogExpirationTrigger',
                'dotNetEnumName': 'WatchdogExpirationTriggerType',
                'dotNetName': 'Type',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Watchdog',
                'id': 8611,
                'internalDataType': 'enum tTriggerType',
                'internalDescription': '',
                'internalName': 'WatchdogExpirTrigType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum TriggerType4:iL',
                'lvFilter': [
                    'Advanced:Watchdog'
                ],
                'lvMenuName': 'Expiration Trigger:Trigger Type',
                'lvMenuWeight': 100.0,
                'name': 'ExpirTrig.TrigType',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'WatchdogExpirTrig_TrigOnNetworkConnLoss',
                'description': 'Specifies the watchdog timer behavior when the network connection is lost between the host and the chassis. If set to true, the watchdog timer expires when the chassis detects the loss of network connection.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'WatchdogExpirationTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TriggerOnNetworkConnectionLost',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Watchdog',
                'id': 12381,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'WatchdogExpirTrigOnNetworkConnLoss',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Watchdog'
                ],
                'lvMenuName': 'Expiration Trigger:Trigger On Network Connection Loss',
                'lvMenuWeight': 200.0,
                'name': 'ExpirTrig.TrigOnNetworkConnLoss',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeWatchdogExpirationTrigger',
                'cppEnumName': 'N/A',
                'cviName': 'DigEdge_WatchdogExpirTrig_Src',
                'description': 'Specifies the name of a <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/terminal.html\');">terminal</see> where a digital signal exists to use as the source of the Expiration Trigger.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeWatchdogExpirationTrigger',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Source',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Watchdog',
                'id': 8612,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DigEdgeWatchdogExpirTrigSrc',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag MXLCTerminal',
                'lvFilter': [
                    'Advanced:Watchdog'
                ],
                'lvMenuName': 'Expiration Trigger:Digital Edge:Source',
                'lvMenuWeight': 300.0,
                'name': 'ExpirTrig.DigEdge.Src',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDigitalEdgeWatchdogExpirationTrigger',
                'cppEnumName': 'DigitalEdgeWatchdogExpirationTriggerEdge',
                'cviName': 'DigEdge_WatchdogExpirTrig_Edge',
                'description': 'Specifies on which edge of a digital signal to expire the watchdog task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DigitalEdgeWatchdogExpirationTrigger',
                'dotNetEnumName': 'DigitalEdgeWatchdogExpirationTriggerEdge',
                'dotNetName': 'Edge',
                'embeddedXMLHelpFiles': '',
                'expert': 'Timing:Clock',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Watchdog',
                'id': 8613,
                'internalDataType': 'enum tEdge',
                'internalDescription': '',
                'internalName': 'DigEdgeWatchdogExpirTrigEdge',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum Edge1:iL',
                'lvFilter': [
                    'Advanced:Watchdog'
                ],
                'lvMenuName': 'Expiration Trigger:Digital Edge:Edge',
                'lvMenuWeight': 400.0,
                'name': 'ExpirTrig.DigEdge.Edge',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxWatchdog',
                'cppEnumName': 'WatchdogDOExpirationState',
                'cviName': 'Watchdog_DO_ExpirState',
                'description': 'Specifies the state to which to set the digital physical channels when the watchdog task expires.  You cannot modify the expiration state of dedicated digital input physical channels.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Watchdog',
                'dotNetEnumName': 'WatchdogDOExpirationState',
                'dotNetName': 'DOExpirationState',
                'embeddedXMLHelpFiles': '',
                'expert': 'DeviceMulti',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Watchdog',
                'id': 8615,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'WatchdogDOExpirState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalLineState:iL',
                'lvFilter': [
                    'Advanced:Watchdog Expiration States'
                ],
                'lvMenuName': 'Expiration States:Digital Output:Expiration State',
                'lvMenuWeight': 600.0,
                'name': 'ExpirStates.DO.State',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Watchdog_AO_OutputType',
                'description': 'Specifies the output type of the analog output physical channels when the watchdog task expires.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Watchdog',
                'dotNetEnumName': 'WatchdogAOExpirationStateType',
                'dotNetName': 'AOExpirationStateType',
                'embeddedXMLHelpFiles': '',
                'expert': 'DeviceMulti',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Watchdog',
                'id': 12382,
                'internalDataType': 'enum tWatchdogAOExpirState',
                'internalDescription': '',
                'internalName': 'WatchdogAOOutputType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum WatchdogAOExpirState:iL',
                'lvFilter': [
                    'Advanced:Watchdog Expiration States'
                ],
                'lvMenuName': 'Expiration States:Analog Output:Output Type',
                'lvMenuWeight': 700.0,
                'name': 'ExpirStates.AO.Type',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Watchdog_AO_ExpirState',
                'description': 'Specifies the state to set the analog output physical channels when the watchdog task expires.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Watchdog',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOExpirationState',
                'embeddedXMLHelpFiles': '',
                'expert': 'DeviceMulti',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Watchdog',
                'id': 12383,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'WatchdogAOExpirState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Advanced:Watchdog Expiration States'
                ],
                'lvMenuName': 'Expiration States:Analog Output:Expiration State',
                'lvMenuWeight': 800.0,
                'name': 'ExpirStates.AO.State',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Watchdog_CO_ExpirState',
                'description': 'Specifies the state to set the counter output channel terminal when the watchdog task expires.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Watchdog',
                'dotNetEnumName': 'WatchdogCOExpirationState',
                'dotNetName': 'COExpirationState',
                'embeddedXMLHelpFiles': '',
                'expert': 'DeviceMulti',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Watchdog',
                'id': 12384,
                'internalDataType': 'enum tWatchdogCOExpirState',
                'internalDescription': '',
                'internalName': 'WatchdogCOExpirState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum WatchdogCOExpirState:iL',
                'lvFilter': [
                    'Advanced:Watchdog Expiration States'
                ],
                'lvMenuName': 'Expiration States:Counter Output:Expiration State',
                'lvMenuWeight': 900.0,
                'name': 'ExpirStates.CO.State',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxWatchdog',
                'cppEnumName': 'N/A',
                'cviName': 'Watchdog_HasExpired',
                'description': 'Indicates if the watchdog timer expired. You can read this property only while the task is running.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Watchdog',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'HasExpired',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Watchdog',
                'id': 8616,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'WatchdogHasExpired',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Watchdog'
                ],
                'lvMenuName': 'Status:Expired',
                'lvMenuWeight': 1000.0,
                'name': 'Expired',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Watchdog properties to configure the watchdog timer of a device.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Watchdog',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchScan',
                'cppEnumName': 'SwitchScanBreakMode',
                'cviName': 'SwitchScan_BreakMode',
                'description': '(Deprecated) Specifies the action to take between each entry in a scan list.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Switch Scan',
                'id': 4679,
                'internalDataType': 'enum tBreakMode',
                'internalDescription': '',
                'internalName': 'SwitchScanBreakMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum BreakMode:iL',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Break Mode',
                'lvMenuWeight': 0.0,
                'name': 'BreakMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchScan',
                'cppEnumName': 'SwitchScanRepeatMode',
                'cviName': 'SwitchScan_RepeatMode',
                'description': '(Deprecated) Specifies if the task advances through the scan list multiple times.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Switch Scan',
                'id': 4680,
                'internalDataType': 'enum tScanRepeatMode',
                'internalDescription': '',
                'internalName': 'SwitchScanRepeatMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SwitchScanRepeatMode:iL',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Repeat Mode',
                'lvMenuWeight': 100.0,
                'name': 'RepeatMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchScan',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchScan_WaitingForAdv',
                'description': '(Deprecated) Indicates if the switch hardware is waiting for an  Advance Trigger. If the hardware is waiting, it completed the previous entry in the scan list.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Device',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Switch Scan',
                'id': 6105,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'SwitchScanWaitingForAdv',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': True,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Is Waiting For Advance',
                'lvMenuWeight': 200.0,
                'name': 'WaitingForAdv',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Switch Scan properties to configure the behavior of a switch scanning task.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Switch Scan',
        'needsTechComReview?': False
    },
    {
        'attributes': [
        ],
        'description': '',
        'hasActiveProperty?': False,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx HW Cal',
        'needsTechComReview?': False
    },
    {
        'attributes': [
        ],
        'description': '',
        'hasActiveProperty?': False,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Script',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxScale',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Descr',
                'description': 'Specifies a description for the scale.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Scale',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Description',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 4646,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'ScaleDescr',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Description',
                'lvMenuWeight': 100.0,
                'name': 'Descr',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxScale',
                'cppEnumName': 'ScaleScaledUnits',
                'cviName': 'Scale_ScaledUnits',
                'description': 'Specifies the units to use for scaled values. You can use an arbitrary string.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Scale',
                'dotNetEnumName': 'ScaleScaledUnits',
                'dotNetName': 'ScaledUnits',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 6427,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'ScaleScaledUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Scaled Units',
                'lvMenuWeight': 200.0,
                'name': 'ScaledUnits',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxScale',
                'cppEnumName': 'ScalePreScaledUnits',
                'cviName': 'Scale_PreScaledUnits',
                'description': 'Specifies the units of the values that you want to scale.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Scale',
                'dotNetEnumName': 'ScalePreScaledUnits',
                'dotNetName': 'PreScaledUnits',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 6391,
                'internalDataType': 'enum tUnitsPreScaled',
                'internalDescription': '',
                'internalName': 'ScalePreScaledUnits',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum UnitsPreScaled:iL',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Pre-Scaled Units',
                'lvMenuWeight': 400.0,
                'name': 'PreScaledUnits',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Type',
                'description': 'Indicates the method or equation form that the <see href="javascript:launchSharedHelp(\'mxcncpts.chm::/customScales.html\');">custom scale</see> uses.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 6441,
                'internalDataType': 'enum tScaleType',
                'internalDescription': '',
                'internalName': 'ScaleType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum ScaleType:iL',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Scale Type',
                'lvMenuWeight': 500.0,
                'name': 'ScaleType',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxLinearScale',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Lin_Slope',
                'description': 'Specifies the slope, m, in the equation y=mx+b.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'LinearScale',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Slope',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 4647,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ScaleLinSlope',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Linear:Slope',
                'lvMenuWeight': 600.0,
                'name': 'Lin.Slope',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxLinearScale',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Lin_YIntercept',
                'description': 'Specifies the y-intercept, b, in the equation y=mx+b.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'LinearScale',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'YIntercept',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 4648,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ScaleLinYIntercept',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Linear:Y-Intercept',
                'lvMenuWeight': 700.0,
                'name': 'Lin.YIntercept',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxRangeMapScale',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Map_ScaledMax',
                'description': 'Specifies the largest value in the range of scaled values. NI-DAQmx maps this value to &attr1231;. Reads coerce samples that are larger than this value to match this value. Writes generate errors for samples that are larger than this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'RangeMapScale',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ScaledMax',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 4649,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ScaleMapScaledMax',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Map:Scaled Maximum Value',
                'lvMenuWeight': 800.0,
                'name': 'Map.ScaledMax',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxRangeMapScale',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Map_PreScaledMax',
                'description': 'Specifies the largest value in the range of pre-scaled values. NI-DAQmx maps this value to &attr1229;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'RangeMapScale',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PreScaledMax',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 4657,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ScaleMapPreScaledMax',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Map:Pre-Scaled Maximum Value',
                'lvMenuWeight': 900.0,
                'name': 'Map.PreScaledMax',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxRangeMapScale',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Map_ScaledMin',
                'description': 'Specifies the smallest value in the range of scaled values. NI-DAQmx maps this value to &attr1232;. Reads coerce samples that are smaller than this value to match this value. Writes generate errors for samples that are smaller than this value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'RangeMapScale',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ScaledMin',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 4656,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ScaleMapScaledMin',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Map:Scaled Minimum Value',
                'lvMenuWeight': 1000.0,
                'name': 'Map.ScaledMin',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxRangeMapScale',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Map_PreScaledMin',
                'description': 'Specifies the smallest value in the range of pre-scaled values. NI-DAQmx maps this value to &attr1230;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'RangeMapScale',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PreScaledMin',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 4658,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ScaleMapPreScaledMin',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Map:Pre-Scaled Minimum Value',
                'lvMenuWeight': 1100.0,
                'name': 'Map.PreScaledMin',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPolynomialScale',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Poly_ForwardCoeff',
                'description': 'Specifies &an_array; of coefficients for the polynomial that converts pre-scaled values to scaled values. Each element of the &array; corresponds to a term of the equation. For example, if index three of the &array; is 9, the fourth term of the equation is 9x^3.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PolynomialScale',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ForwardCoefficients',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 4660,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'ScalePolyForwardCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Polynomial:Forward Coefficients',
                'lvMenuWeight': 1300.0,
                'name': 'Poly.ForwardCoeff',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPolynomialScale',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Poly_ReverseCoeff',
                'description': 'Specifies &an_array; of coefficients for the polynomial that converts scaled values to pre-scaled values. Each element of the &array; corresponds to a term of the equation. For example, if index three of the &array; is 9, the fourth term of the equation is 9y^3.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PolynomialScale',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ReverseCoefficients',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 4661,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'ScalePolyReverseCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Polynomial:Reverse Coefficients',
                'lvMenuWeight': 1400.0,
                'name': 'Poly.ReverseCoeff',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTableScale',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Table_ScaledVals',
                'description': 'Specifies &an_array; of scaled values. These values map directly to the values in &attr1237;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'TableScale',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ScaledValues',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 4662,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'ScaleTableScaledVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Table:Scaled Values',
                'lvMenuWeight': 1500.0,
                'name': 'Table.ScaledVals',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxTableScale',
                'cppEnumName': 'N/A',
                'cviName': 'Scale_Table_PreScaledVals',
                'description': 'Specifies &an_array; of pre-scaled values. These values map directly to the values in &attr1236;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'TableScale',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PreScaledValues',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Scale',
                'id': 4663,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'ScaleTablePreScaledVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Scale'
                ],
                'lvMenuName': 'Table:Pre-Scaled Values',
                'lvMenuWeight': 1600.0,
                'name': 'Table.PreScaledVals',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Scale properties to configure <a href="javascript:launchSharedHelp(\'mxcncpts.chm::/customScales.html\');">custom scales</a>.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': True,
        'isHidden?': False,
        'name': 'DAQmx Scale',
        'needsTechComReview?': False
    },
    {
        'attributes': [
        ],
        'description': '<p class="Body">Use the DAQmx Timing Source properties to retrieve information about timing sources for Timed Loops.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': True,
        'isHidden?': False,
        'name': 'DAQmx Timing Source',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'SwitchChannelUsage',
                'cviName': 'SwitchChan_Usage',
                'description': '(Deprecated) Specifies how you can use the channel. Using this property acts as a safety mechanism to prevent you from connecting two source channels, for example.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 6372,
                'internalDataType': 'enum tSwitchChannelUsage',
                'internalDescription': '',
                'internalName': 'SwitchChanUsage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SwitchUsageTypes:iL',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Usage',
                'lvMenuWeight': 100.0,
                'name': 'Usage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_AnlgBusSharingEnable',
                'description': '(Deprecated) Specifies whether to enable sharing of an analog bus line so that multiple switch devices can connect to it simultaneously. For each device that will share the analog bus line, set this property to &true; to enable sharing on the channel that connects to the analog bus line. Analog bus sharing is disabled by default.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 12190,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AnlgBusSharingEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Analog Bus Sharing Enable',
                'lvMenuWeight': 200.0,
                'name': 'AnlgBusSharingEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_MaxACCarryCurrent',
                'description': '(Deprecated) Indicates in amperes the maximum AC current that the device can carry.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1608,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanMaxACCarryCurrent',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Max AC Carry Current',
                'lvMenuWeight': 300.0,
                'name': 'MaxACCarryCurrent',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_MaxACSwitchCurrent',
                'description': '(Deprecated) Indicates in amperes the maximum AC current that the device can switch. This current is always against an RMS voltage level.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1606,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanMaxACSwitchCurrent',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Max AC Switching Current',
                'lvMenuWeight': 400.0,
                'name': 'MaxACSwitchCurrent',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_MaxACCarryPwr',
                'description': '(Deprecated) Indicates in watts the maximum AC power that the device can carry.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1602,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanMaxACCarryPwr',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Max AC Carry Power',
                'lvMenuWeight': 500.0,
                'name': 'MaxACCarryPwr',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_MaxACSwitchPwr',
                'description': '(Deprecated) Indicates in watts the maximum AC power that the device can switch.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1604,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanMaxACSwitchPwr',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Max AC Switching Power',
                'lvMenuWeight': 600.0,
                'name': 'MaxACSwitchPwr',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_MaxDCCarryCurrent',
                'description': '(Deprecated) Indicates in amperes the maximum DC current that the device can carry.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1607,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanMaxDCCarryCurrent',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Max DC Carry Current',
                'lvMenuWeight': 700.0,
                'name': 'MaxDCCarryCurrent',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_MaxDCSwitchCurrent',
                'description': '(Deprecated) Indicates in amperes the maximum DC current that the device can switch. This current is always against a DC voltage level.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1605,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanMaxDCSwitchCurrent',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Max DC Switching Current',
                'lvMenuWeight': 800.0,
                'name': 'MaxDCSwitchCurrent',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_MaxDCCarryPwr',
                'description': '(Deprecated) Indicates in watts the maximum DC power that the device can carry.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1603,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanMaxDCCarryPwr',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Max DC Carry Power',
                'lvMenuWeight': 900.0,
                'name': 'MaxDCCarryPwr',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_MaxDCSwitchPwr',
                'description': '(Deprecated) Indicates in watts the maximum DC power that the device can switch.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1609,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanMaxDCSwitchPwr',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Max DC Switching Power',
                'lvMenuWeight': 1000.0,
                'name': 'MaxDCSwitchPwr',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_MaxACVoltage',
                'description': '(Deprecated) Indicates in volts the maximum AC RMS voltage that the device can switch.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1617,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanMaxACVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Max AC Voltage',
                'lvMenuWeight': 1100.0,
                'name': 'MaxACVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_MaxDCVoltage',
                'description': '(Deprecated) Indicates in volts the maximum DC voltage that the device can switch.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1616,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanMaxDCVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Max DC Voltage',
                'lvMenuWeight': 1200.0,
                'name': 'MaxDCVoltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_WireMode',
                'description': '(Deprecated) Indicates the number of wires that the channel switches.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 6373,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SwitchChanWireMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Wire Mode',
                'lvMenuWeight': 1300.0,
                'name': 'WireMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_Bandwidth',
                'description': '(Deprecated) Indicates in Hertz the maximum frequency of a signal that can pass through the switch without significant deterioration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1600,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanBandwidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Bandwidth',
                'lvMenuWeight': 1400.0,
                'name': 'Bandwidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitchChannel',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchChan_Impedance',
                'description': '(Deprecated) Indicates in ohms the switch impedance. This value is important in the RF domain and should match the impedance of the sources and loads.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Channel',
                'id': 1601,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchChanImpedance',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Impedance',
                'lvMenuWeight': 1500.0,
                'name': 'Impedance',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Switch Channel properties to modify the usage of a switch channel and to query the capabilities of a switch channel.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': True,
        'isHidden?': False,
        'name': 'DAQmx Switch Channel',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSystem',
                'cppEnumName': 'N/A',
                'cviName': 'Sys_GlobalChans',
                'description': 'Indicates &an_array; that contains the names of all global channels saved on the system.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqSystem',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'GlobalChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx System',
                'id': 4709,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'SysGlobalChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQChannel 1D',
                'lvFilter': [
                    'System'
                ],
                'lvMenuName': 'Global Channels',
                'lvMenuWeight': 0.0,
                'name': 'GlobalChans',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSystem',
                'cppEnumName': 'N/A',
                'cviName': 'Sys_Scales',
                'description': 'Indicates &an_array; that contains the names of all custom scales saved on the system.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqSystem',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Scales',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx System',
                'id': 4710,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'SysScales',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQScale 1D',
                'lvFilter': [
                    'System'
                ],
                'lvMenuName': 'Scales',
                'lvMenuWeight': 100.0,
                'name': 'Scales',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSystem',
                'cppEnumName': 'N/A',
                'cviName': 'Sys_Tasks',
                'description': 'Indicates &an_array; that contains the names of all tasks saved on the system.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqSystem',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Tasks',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx System',
                'id': 4711,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'SysTasks',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQTask 1D',
                'lvFilter': [
                    'System'
                ],
                'lvMenuName': 'Tasks',
                'lvMenuWeight': 200.0,
                'name': 'Tasks',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSystem',
                'cppEnumName': 'N/A',
                'cviName': 'Sys_DevNames',
                'description': 'Indicates the names of all devices installed in the system.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqSystem',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Devices',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx System',
                'id': 6459,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'SysDevNames',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQDevice 1D',
                'lvFilter': [
                    'System'
                ],
                'lvMenuName': 'Device Names',
                'lvMenuWeight': 300.0,
                'name': 'DevNames',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSystem',
                'cppEnumName': 'N/A',
                'cviName': 'Sys_NIDAQMajorVersion',
                'description': 'Indicates the major portion of the installed version of NI-DAQmx, such as 7 for version 7.0.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqSystem',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DriverMajorVersion',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx System',
                'id': 4722,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SysNIDAQMajorVersion',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'System'
                ],
                'lvMenuName': 'System:NI-DAQ Version:Major',
                'lvMenuWeight': 400.0,
                'name': 'MajorVersion',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSystem',
                'cppEnumName': 'N/A',
                'cviName': 'Sys_NIDAQMinorVersion',
                'description': 'Indicates the minor portion of the installed version of NI-DAQmx, such as 0 for version 7.0.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqSystem',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DriverMinorVersion',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx System',
                'id': 6435,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SysNIDAQMinorVersion',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'System'
                ],
                'lvMenuName': 'System:NI-DAQ Version:Minor',
                'lvMenuWeight': 500.0,
                'name': 'MinorVersion',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSystem',
                'cppEnumName': 'N/A',
                'cviName': 'Sys_NIDAQUpdateVersion',
                'description': 'Indicates the update portion of the installed version of NI-DAQmx, such as 1 for version 9.0.1.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'DaqSystem',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DriverUpdateVersion',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx System',
                'id': 12066,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SysNIDAQUpdateVersion',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'System'
                ],
                'lvMenuName': 'System:NI-DAQ Version:Update',
                'lvMenuWeight': 600.0,
                'name': 'UpdateVersion',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.0.0'
            }
        ],
        'description': '<p class="Body">The DAQmx System properties return information about the NI-DAQmx software configuration on your system, including version number and the names of saved virtual channels and tasks.</p>',
        'hasActiveProperty?': False,
        'hiddenRefnum?': True,
        'isHidden?': False,
        'name': 'DAQmx System',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedTask_ActiveTask',
                'description': 'Specifies the saved task to which subsequent properties apply.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Persisted Task',
                'id': 8907,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'PersistedTaskActiveTask',
                'isActiveProperty?': True,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': False,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQTask',
                'lvFilter': [
                    'Advanced:Persisted Task'
                ],
                'lvMenuName': 'Active Task',
                'lvMenuWeight': 0.0,
                'name': 'ActiveTask',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSavedTaskInfo',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedTask_Author',
                'description': 'Indicates the author of the task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SavedTaskInfo',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Author',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Persisted Task',
                'id': 8908,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'PersistedTaskAuthor',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Advanced:Persisted Task'
                ],
                'lvMenuName': 'Author',
                'lvMenuWeight': 100.0,
                'name': 'Author',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSavedTaskInfo',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedTask_AllowInteractiveEditing',
                'description': 'Indicates whether the task can be edited in the DAQ Assistant.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SavedTaskInfo',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AllowInteractiveEditing',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Persisted Task',
                'id': 8909,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PersistedTaskAllowInteractiveEditing',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Persisted Task'
                ],
                'lvMenuName': 'Allow Interactive Editing?',
                'lvMenuWeight': 200.0,
                'name': 'AllowInteractiveEditing',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSavedTaskInfo',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedTask_AllowInteractiveDeletion',
                'description': 'Indicates whether the task can be deleted through MAX.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SavedTaskInfo',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AllowInteractiveDeletion',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Persisted Task',
                'id': 8910,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PersistedTaskAllowInteractiveDeletion',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Persisted Task'
                ],
                'lvMenuName': 'Allow Interactive Deletion?',
                'lvMenuWeight': 300.0,
                'name': 'AllowInteractiveDeletion',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Persisted Task properties to query information about programmatically saved tasks.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': True,
        'isHidden?': False,
        'name': 'DAQmx Persisted Task',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedChan_ActiveChan',
                'description': 'Specifies the saved global channel to which subsequent properties apply.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Persisted Channel',
                'id': 8911,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'PersistedChanActiveChan',
                'isActiveProperty?': True,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': False,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQChannel',
                'lvFilter': [
                    'Advanced:Persisted Channel'
                ],
                'lvMenuName': 'Active Channel',
                'lvMenuWeight': 0.0,
                'name': 'ActiveChan',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSavedChannelInfo',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedChan_Author',
                'description': 'Indicates the author of the global channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SavedChannelInfo',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Author',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Persisted Channel',
                'id': 8912,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'PersistedChanAuthor',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Advanced:Persisted Channel'
                ],
                'lvMenuName': 'Author',
                'lvMenuWeight': 100.0,
                'name': 'Author',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSavedChannelInfo',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedChan_AllowInteractiveEditing',
                'description': 'Indicates whether the global channel can be edited in the DAQ Assistant.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SavedChannelInfo',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AllowInteractiveEditing',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Persisted Channel',
                'id': 8913,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PersistedChanAllowInteractiveEditing',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Persisted Channel'
                ],
                'lvMenuName': 'Allow Interactive Editing?',
                'lvMenuWeight': 200.0,
                'name': 'AllowInteractiveEditing',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSavedChannelInfo',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedChan_AllowInteractiveDeletion',
                'description': 'Indicates whether the global channel can be deleted through MAX.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SavedChannelInfo',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AllowInteractiveDeletion',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Persisted Channel',
                'id': 8914,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PersistedChanAllowInteractiveDeletion',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Persisted Channel'
                ],
                'lvMenuName': 'Allow Interactive Deletion?',
                'lvMenuWeight': 300.0,
                'name': 'AllowInteractiveDeletion',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Persisted Channel properties to query information about programmatically saved global channels.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': True,
        'isHidden?': False,
        'name': 'DAQmx Persisted Channel',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedScale_ActiveScale',
                'description': 'Specifies the saved custom scale to which subsequent properties apply.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC only (fully handwritten)',
                'groupName': 'DAQmx Persisted Scale',
                'id': 8915,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'PersistedScaleActiveScale',
                'isActiveProperty?': True,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': False,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvtag DAQScale',
                'lvFilter': [
                    'Advanced:Persisted Scale'
                ],
                'lvMenuName': 'Active Scale',
                'lvMenuWeight': 0.0,
                'name': 'ActiveScale',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSavedScaleInfo',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedScale_Author',
                'description': 'Indicates the author of the custom scale.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SavedScaleInfo',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Author',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Persisted Scale',
                'id': 8916,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'PersistedScaleAuthor',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Advanced:Persisted Scale'
                ],
                'lvMenuName': 'Author',
                'lvMenuWeight': 100.0,
                'name': 'Author',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSavedScaleInfo',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedScale_AllowInteractiveEditing',
                'description': 'Indicates whether the custom scale can be edited in the DAQ Assistant.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SavedScaleInfo',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AllowInteractiveEditing',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Persisted Scale',
                'id': 8917,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PersistedScaleAllowInteractiveEditing',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Persisted Scale'
                ],
                'lvMenuName': 'Allow Interactive Editing?',
                'lvMenuWeight': 200.0,
                'name': 'AllowInteractiveEditing',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSavedScaleInfo',
                'cppEnumName': 'N/A',
                'cviName': 'PersistedScale_AllowInteractiveDeletion',
                'description': 'Indicates whether the custom scale can be deleted through MAX.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'SavedScaleInfo',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AllowInteractiveDeletion',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Persisted Scale',
                'id': 8918,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PersistedScaleAllowInteractiveDeletion',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Advanced:Persisted Scale'
                ],
                'lvMenuName': 'Allow Interactive Deletion?',
                'lvMenuWeight': 300.0,
                'name': 'AllowInteractiveDeletion',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Persisted Scale properties to query information about programmatically saved custom scales.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': True,
        'isHidden?': False,
        'name': 'DAQmx Persisted Scale',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_IsSimulated',
                'description': 'Indicates if the device is a simulated device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'IsSimulated',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8906,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevIsSimulated',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Device Is Simulated',
                'lvMenuWeight': 200.0,
                'name': 'DevIsSimulated',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'ProductCategory',
                'cviName': 'Dev_ProductCategory',
                'description': 'Indicates the product category of the device. This category corresponds to the category displayed in MAX when creating NI-DAQmx simulated devices.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'ProductCategory',
                'dotNetName': 'ProductCategory',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 10665,
                'internalDataType': 'enum tProductCategory',
                'internalDescription': '',
                'internalName': 'ProductCategory',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum ProductCategory:iL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Identification:Product Category',
                'lvMenuWeight': 500.0,
                'name': 'ProductCategory',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_ProductType',
                'description': 'Indicates the product name of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ProductType',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 1585,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DevProductType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Identification:Product Type',
                'lvMenuWeight': 600.0,
                'name': 'ProductType',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_ProductNum',
                'description': 'Indicates the unique <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/hardwareIDs.html\');">hardware identification number</see> for the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ProductNumber',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8989,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevProductNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Identification:Product Number',
                'lvMenuWeight': 700.0,
                'name': 'ProductNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_SerialNum',
                'description': 'Indicates the serial number of the device. This value is zero if the device does not have a serial number.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SerialNumber',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 1586,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevDevSerialNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Identification:Device Serial Number',
                'lvMenuWeight': 800.0,
                'name': 'DevSerialNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Accessory_ProductTypes',
                'description': 'Indicates the model names of accessories connected to the device. Each &array; element corresponds to a connector. For example, index 0 corresponds to connector 0. The &array; contains an empty string for each connector with no accessory connected.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AccessoryProductTypes',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12141,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DevAccessoryProductTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Identification:Accessory:Product Types',
                'lvMenuWeight': 900.0,
                'name': 'Accessory.ProductTypes',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Accessory_ProductNums',
                'description': 'Indicates the unique hardware identification number for accessories connected to the device. Each &array; element corresponds to a connector. For example, index 0 corresponds to connector 0. The &array; contains 0 for each connector with no accessory connected.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AccessoryProductNumbers',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12142,
                'internalDataType': 'std::vector<u32>',
                'internalDescription': '',
                'internalName': 'DevAccessoryProductNums',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Identification:Accessory:Product Numbers',
                'lvMenuWeight': 1000.0,
                'name': 'Accessory.ProductNums',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Accessory_SerialNums',
                'description': 'Indicates the serial number for accessories connected to the device. Each &array; element corresponds to a connector. For example, index 0 corresponds to connector 0. The &array; contains 0 for each connector with no accessory connected.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AccessorySerialNumbers',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12143,
                'internalDataType': 'std::vector<u32>',
                'internalDescription': '',
                'internalName': 'DevAccessorySerialNums',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Identification:Accessory:Serial Numbers',
                'lvMenuWeight': 1100.0,
                'name': 'Accessory.SerialNums',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Carrier_SerialNum',
                'description': 'Indicates the serial number of the device carrier. This value is zero if the carrier does not have a serial number.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CarrierSerialNumber',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 10890,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CarrierSerialNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Identification:Carrier Serial Number',
                'lvMenuWeight': 1200.0,
                'name': 'CarrierSerialNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'FieldDAQ_DevName',
                'description': 'Indicates the parent device which this bank is located in.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FieldDaqDeviceName',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'FieldDAQAttributes',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12657,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'FieldDAQDevName',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQDevice',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Identification:FieldDAQ:Device Name',
                'lvMenuWeight': 1250.0,
                'name': 'FieldDAQ.DevName',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '17.6.0_3_FieldDAQAttributes.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'FieldDAQ_BankDevNames',
                'description': 'Indicates &an_array; containing the names of the banks in the FieldDAQ.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'FieldDaqBankDeviceNames',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'FieldDAQBanks',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12664,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'FieldDAQBankDevNames',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQDevice 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Identification:FieldDAQ:Bank Device Names',
                'lvMenuWeight': 1255.0,
                'name': 'FieldDAQ.BankDevNames',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '17.6.0_6_FieldDAQBanks.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Chassis_ModuleDevNames',
                'description': 'Indicates &an_array; containing the names of the modules in the chassis.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ChassisModuleDeviceNames',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 10678,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'ChassisModuleDevNames',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQDevice 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Chassis:Module Device Names',
                'lvMenuWeight': 1300.0,
                'name': 'Chassis.ModuleDevNames',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AnlgTrigSupported',
                'description': 'Indicates if the device supports analog triggering.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AnalogTriggerSupported',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10628,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevAnlgTrigSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Triggering:Analog Triggering Supported',
                'lvMenuWeight': 1700.0,
                'name': 'AnlgTrigSupported',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_DigTrigSupported',
                'description': 'Indicates if the device supports digital triggering.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalTriggerSupported',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10629,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevDigTrigSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Triggering:Digital Triggering Supported',
                'lvMenuWeight': 1800.0,
                'name': 'DigTrigSupported',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_TimeTrigSupported',
                'description': 'Indicates whether the device supports time triggering.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TimeTriggerSupported',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'DAQmx Time Trigger Support',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12319,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevTimeTrigSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Triggering:Time Triggering Supported',
                'lvMenuWeight': 1900.0,
                'name': 'TimeTrigSupported',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_PhysicalChans',
                'description': 'Indicates &an_array; containing the names of the analog input physical channels available on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIPhysicalChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8990,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DevAIPhysicalChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQPhysChan 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Physical Channels',
                'lvMenuWeight': 2500.0,
                'name': 'AI.PhysicalChans',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_SupportedMeasTypes',
                'description': 'Indicates the measurement types supported by the physical channels of the device. Refer to &attr2FD7; for information on specific channels.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12242,
                'internalDataType': 'std::vector<enum tUsageTypeAI>',
                'internalDescription': '',
                'internalName': 'DevAISupportedMeasTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AIMeasurementType:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Measurement Types',
                'lvMenuWeight': 2600.0,
                'name': 'AI.MeasTypes',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_MaxSingleChanRate',
                'description': 'Indicates the maximum rate for an analog input task if the task contains only a single channel from this device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIMaximumSingleChannelRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10636,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevAIMaxSingleChanRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Timing:Maximum Single Channel Rate',
                'lvMenuWeight': 2700.0,
                'name': 'AI.MaxSingleChanRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_MaxMultiChanRate',
                'description': 'Indicates the maximum sampling rate for an analog input task from this device. To find the maximum rate for the task, take the minimum of &attr298C; or the indicated sampling rate of this device divided by the number of channels to acquire data from (including cold-junction compensation and autozero channels).',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIMaximumMultiChannelRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10637,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevAIMaxMultiChanRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Timing:Maximum Multiple Channel Rate',
                'lvMenuWeight': 2800.0,
                'name': 'AI.MaxMultiChanRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_MinRate',
                'description': 'Indicates the minimum rate for an analog input task on this device. NI-DAQmx returns a warning or error if you attempt to sample at a slower rate.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIMinimumRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10638,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevAIMinRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Timing:Minimum Rate',
                'lvMenuWeight': 2900.0,
                'name': 'AI.MinRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_SimultaneousSamplingSupported',
                'description': 'Indicates if the device supports simultaneous sampling.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AISimultaneousSamplingSupported',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10639,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevAISimultaneousSamplingSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Timing:Simultaneous Sampling Supported',
                'lvMenuWeight': 3000.0,
                'name': 'AI.SimultaneousSamplingSupported',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_NumSampTimingEngines',
                'description': 'Indicates the number of Analog Input sample timing engines supported by the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AINumberOfSampleTimingEngines',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'ComboChassisAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12643,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevAINumSampTimingEngines',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Timing:Number of Sample Timing Engines',
                'lvMenuWeight': 3150.0,
                'name': 'AI.NumSampTimingEngines',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_1_ComboChassisAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_SampModes',
                'description': 'Indicates sample modes supported by devices that support sample clocked analog input.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12252,
                'internalDataType': 'std::vector<enum tAcquisitionType>',
                'internalDescription': '',
                'internalName': 'DevAISampModes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AcquisitionType:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Timing:Sample Modes',
                'lvMenuWeight': 3200.0,
                'name': 'AI.SampModes',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_NumSyncPulseSrcs',
                'description': 'Indicates the number of Analog Input synchronization pulse sources supported by the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AINumberOfSynchronizationPulseSources',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'ComboChassisAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12644,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevAINumSyncPulseSrcs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Timing:Number of Synchronization Pulse Sources',
                'lvMenuWeight': 3250.0,
                'name': 'AI.NumSyncPulseSrcs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_1_ComboChassisAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'TriggerUsageTypes',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_TrigUsage',
                'description': 'Indicates the triggers supported by this device for an analog input task.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10630,
                'internalDataType': 'std::vector<enum tTriggerUsage>',
                'internalDescription': '',
                'internalName': 'DevAITrigUsage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum TriggerUsage:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Trigger:Trigger Usage',
                'lvMenuWeight': 3300.0,
                'name': 'AI.TrigUsage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_VoltageRngs',
                'description': 'Indicates pairs of input voltage ranges supported by this device. Each pair consists of the low value, followed by the high value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIVoltageRanges',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10640,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAIVoltageRngs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Voltage:Ranges',
                'lvMenuWeight': 3400.0,
                'name': 'AI.Voltage.Rngs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_VoltageIntExcitDiscreteVals',
                'description': 'Indicates the set of discrete internal voltage excitation values supported by this device. If the device supports ranges of internal excitation values, use &attr29CA; to determine supported excitation values.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIVoltageInternalExcitationDiscreteValues',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10697,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAIVoltageIntExcitDiscreteVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Voltage:Internal Excitation:Discrete Values',
                'lvMenuWeight': 3500.0,
                'name': 'AI.Voltage.IntExcit.DiscreteVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_VoltageIntExcitRangeVals',
                'description': 'Indicates pairs of internal voltage excitation ranges supported by this device. Each pair consists of the low value, followed by the high value. If the device supports a set of discrete internal excitation values, use &attr29C9; to determine the supported excitation values.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIVoltageInternalExcitationRangeValues',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10698,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAIVoltageIntExcitRangeVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Voltage:Internal Excitation:Range Values',
                'lvMenuWeight': 3600.0,
                'name': 'AI.Voltage.IntExcit.RangeVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_ChargeRngs',
                'description': 'Indicates in coulombs pairs of input charge ranges for the device. Each pair consists of the low value followed by the high value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIChargeRanges',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'AICharge',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12561,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAIChargeRngs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Charge:Ranges',
                'lvMenuWeight': 3650.0,
                'name': 'AI.Charge.Rngs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.1.0_0_AICharge.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_CurrentRngs',
                'description': 'Indicates the pairs of current input ranges supported by this device. Each pair consists of the low value, followed by the high value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AICurrentRanges',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10641,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAICurrentRngs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Current:Ranges',
                'lvMenuWeight': 3700.0,
                'name': 'AI.Current.Rngs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_CurrentIntExcitDiscreteVals',
                'description': 'Indicates the set of discrete internal current excitation values supported by this device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AICurrentInternalExcitationDiscreteValues',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10699,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAICurrentIntExcitDiscreteVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Current:Internal Excitation:Discrete Values',
                'lvMenuWeight': 3800.0,
                'name': 'AI.Current.IntExcit.DiscreteVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_BridgeRngs',
                'description': 'Indicates pairs of input voltage ratio ranges, in volts per volt, supported by devices that acquire using ratiometric measurements. Each pair consists of the low value followed by the high value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIBridgeRanges',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12240,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAIBridgeRngs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Bridge:Ranges',
                'lvMenuWeight': 3900.0,
                'name': 'AI.Bridge.Rngs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_ResistanceRngs',
                'description': 'Indicates pairs of input resistance ranges, in ohms, supported by devices that have the necessary signal conditioning to measure resistances. Each pair consists of the low value followed by the high value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10773,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAIResistanceRngs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Resistance:Ranges',
                'lvMenuWeight': 4000.0,
                'name': 'AI.Resistance.Rngs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_FreqRngs',
                'description': 'Indicates the pairs of frequency input ranges supported by this device. Each pair consists of the low value, followed by the high value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIFrequencyRanges',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10642,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAIFreqRngs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Frequency:Ranges',
                'lvMenuWeight': 4100.0,
                'name': 'AI.Freq.Rngs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_Gains',
                'description': 'Indicates the input gain settings supported by this device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIGains',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10643,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAIGains',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Gains',
                'lvMenuWeight': 4300.0,
                'name': 'AI.Gains',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'CouplingTypes',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_Couplings',
                'description': 'Indicates the coupling types supported by this device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10644,
                'internalDataType': 'std::vector<enum tCoupling>',
                'internalDescription': '',
                'internalName': 'DevAICouplings',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum Coupling1:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Couplings',
                'lvMenuWeight': 4400.0,
                'name': 'AI.Couplings',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_LowpassCutoffFreqDiscreteVals',
                'description': 'Indicates the set of discrete lowpass cutoff frequencies supported by this device. If the device supports ranges of lowpass cutoff frequencies, use &attr29CF; to determine supported frequencies.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LowpassCutoffFrequenciesDiscreteValues',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10645,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAILowpassCutoffFreqDiscreteVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Filter:Analog Low Pass:Cutoff Frequency:Discrete Values',
                'lvMenuWeight': 4500.0,
                'name': 'AI.Lowpass.CutoffFreq.DiscreteVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_LowpassCutoffFreqRangeVals',
                'description': 'Indicates pairs of lowpass cutoff frequency ranges supported by this device. Each pair consists of the low value, followed by the high value. If the device supports a set of discrete lowpass cutoff frequencies, use &attr2995; to determine the supported  frequencies.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'LowpassCutoffFrequenciesRangeValues',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10703,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAILowpassCutoffFreqRangeVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Filter:Analog Low Pass:Cutoff Frequency:Range Values',
                'lvMenuWeight': 4600.0,
                'name': 'AI.Lowpass.CutoffFreq.RangeVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AI_DigFltr_Types',
                'description': 'Indicates the AI digital filter types supported by the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'AIDigitalFilterType',
                'dotNetName': 'DigitalFilterTypes',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'AIDigitalFilterTypes',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12551,
                'internalDataType': 'std::vector<enum tFilterType>',
                'internalDescription': '',
                'internalName': 'DevAIDigFltrTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum FilterType2:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Filter:Digital Filter:Types',
                'lvMenuWeight': 4620.0,
                'name': 'AI.DigFltr.Types',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '15.5.0_7_AIDigitalFilterTypes.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '15.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_DigFltr_LowpassCutoffFreqDiscreteVals',
                'description': 'Indicates the set of discrete lowpass cutoff frequencies supported by this device. If the device supports ranges of lowpass cutoff frequencies, use AI.DigFltr.Lowpass.CutoffFreq.RangeVals to determine supported frequencies.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterLowpassCutoffFrequencyDiscreteValues',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12488,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAIDigFltrLowpassCutoffFreqDiscreteVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Filter:Digital Filter:Low Pass:Cutoff Frequency:Discrete Values',
                'lvMenuWeight': 4650.0,
                'name': 'AI.DigFltr.Lowpass.CutoffFreq.DiscreteVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AI_DigFltr_LowpassCutoffFreqRangeVals',
                'description': 'Indicates pairs of lowpass cutoff frequency ranges supported by this device. Each pair consists of the low value, followed by the high value. If the device supports a set of discrete lowpass cutoff frequencies, use AI.DigFltr.Lowpass.CutoffFreq.DiscreteVals to determine the supported frequencies.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DigitalFilterLowpassCutoffFrequencyRangeValues',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'AIDigitalFilter',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12489,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAIDigFltrLowpassCutoffFreqRangeVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Input:Filter:Digital Filter:Low Pass:Cutoff Frequency:Range Values',
                'lvMenuWeight': 4660.0,
                'name': 'AI.DigFltr.Lowpass.CutoffFreq.RangeVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '14.5.0_8_AIDigitalFilter.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '14.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_PhysicalChans',
                'description': 'Indicates &an_array; containing the names of the analog output physical channels available on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOPhysicalChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8991,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DevAOPhysicalChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQPhysChan 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Physical Channels',
                'lvMenuWeight': 5400.0,
                'name': 'AO.PhysicalChans',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_SupportedOutputTypes',
                'description': 'Indicates the generation types supported by the physical channels of the device. Refer to &attr2FD9; for information on specific channels.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12243,
                'internalDataType': 'std::vector<enum tUsageTypeAO>',
                'internalDescription': '',
                'internalName': 'DevAOSupportedOutputTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AOOutputChannelType:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Output Types',
                'lvMenuWeight': 5500.0,
                'name': 'AO.OutputTypes',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_MaxRate',
                'description': 'Indicates the maximum analog output rate of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOMaximumRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10647,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevAOMaxRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Timing:Maximum Rate',
                'lvMenuWeight': 5600.0,
                'name': 'AO.MaxRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_MinRate',
                'description': 'Indicates the minimum analog output rate of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOMinimumRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10648,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevAOMinRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Timing:Minimum Rate',
                'lvMenuWeight': 5700.0,
                'name': 'AO.MinRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_SampClkSupported',
                'description': 'Indicates if the device supports the sample clock timing  type for analog output tasks.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOSampleClockSupported',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10646,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevAOSampClkSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Timing:Sample Clock Supported',
                'lvMenuWeight': 5800.0,
                'name': 'AO.SampClkSupported',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_NumSampTimingEngines',
                'description': 'Indicates the number of Analog Output sample timing engines supported by the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AONumberOfSampleTimingEngines',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'ComboChassisAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12645,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevAONumSampTimingEngines',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Timing:Number of Sample Timing Engines',
                'lvMenuWeight': 5950.0,
                'name': 'AO.NumSampTimingEngines',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_1_ComboChassisAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_SampModes',
                'description': 'Indicates sample modes supported by devices that support sample clocked analog output.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12253,
                'internalDataType': 'std::vector<enum tAcquisitionType>',
                'internalDescription': '',
                'internalName': 'DevAOSampModes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AcquisitionType:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Timing:Sample Modes',
                'lvMenuWeight': 6000.0,
                'name': 'AO.SampModes',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_NumSyncPulseSrcs',
                'description': 'Indicates the number of Analog Output synchronization pulse sources supported by the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AONumberOfSynchronizationPulseSources',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'ComboChassisAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12646,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevAONumSyncPulseSrcs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Timing:Number of Synchronization Pulse Sources',
                'lvMenuWeight': 6050.0,
                'name': 'AO.NumSyncPulseSrcs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_1_ComboChassisAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'TriggerUsageTypes',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_TrigUsage',
                'description': 'Indicates the triggers supported by this device for analog output tasks.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10631,
                'internalDataType': 'std::vector<enum tTriggerUsage>',
                'internalDescription': '',
                'internalName': 'DevAOTrigUsage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum TriggerUsage:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Trigger:Trigger Usage',
                'lvMenuWeight': 6100.0,
                'name': 'AO.TrigUsage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_VoltageRngs',
                'description': 'Indicates pairs of output voltage ranges supported by this device. Each pair consists of the low value, followed by the high value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOVoltageRanges',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10651,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAOVoltageRngs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Voltage:Ranges',
                'lvMenuWeight': 6200.0,
                'name': 'AO.Voltage.Rngs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_CurrentRngs',
                'description': 'Indicates pairs of output current ranges supported by this device. Each pair consists of the low value, followed by the high value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOCurrentRanges',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10652,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAOCurrentRngs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Current:Ranges',
                'lvMenuWeight': 6300.0,
                'name': 'AO.Current.Rngs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_AO_Gains',
                'description': 'Indicates the output gain settings supported by this device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOGains',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10653,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'DevAOGains',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Analog Output:Gains',
                'lvMenuWeight': 6400.0,
                'name': 'AO.Gains',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_DI_Lines',
                'description': 'Indicates &an_array; containing the names of the digital input lines available on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DILines',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8992,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DevDILines',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQPhysChan 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Digital Input:Lines',
                'lvMenuWeight': 6700.0,
                'name': 'DI.Lines',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_DI_Ports',
                'description': 'Indicates &an_array; containing the names of the digital input ports available on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DIPorts',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8993,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DevDIPorts',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQPhysChan 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Digital Input:Ports',
                'lvMenuWeight': 6800.0,
                'name': 'DI.Ports',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_DI_MaxRate',
                'description': 'Indicates the maximum digital input rate of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DIMaximumRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10649,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevDIMaxRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Digital Input:Timing:Maximum Rate',
                'lvMenuWeight': 6900.0,
                'name': 'DI.MaxRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_DI_NumSampTimingEngines',
                'description': 'Indicates the number of Digital Input sample timing engines supported by the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DINumberOfSampleTimingEngines',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'ComboChassisAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12647,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevDINumSampTimingEngines',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Digital Input:Timing:Number of Sample Timing Engines',
                'lvMenuWeight': 6950.0,
                'name': 'DI.NumSampTimingEngines',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_1_ComboChassisAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'TriggerUsageTypes',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_DI_TrigUsage',
                'description': 'Indicates the triggers supported by this device for digital input tasks.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10632,
                'internalDataType': 'std::vector<enum tTriggerUsage>',
                'internalDescription': '',
                'internalName': 'DevDITrigUsage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum TriggerUsage:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Digital Input:Trigger:Trigger Usage',
                'lvMenuWeight': 7000.0,
                'name': 'DI.TrigUsage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_DO_Lines',
                'description': 'Indicates &an_array; containing the names of the digital output lines available on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DOLines',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8994,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DevDOLines',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQPhysChan 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Digital Output:Lines',
                'lvMenuWeight': 7100.0,
                'name': 'DO.Lines',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_DO_Ports',
                'description': 'Indicates &an_array; containing the names of the digital output ports available on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DOPorts',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8995,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DevDOPorts',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQPhysChan 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Digital Output:Ports',
                'lvMenuWeight': 7200.0,
                'name': 'DO.Ports',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_DO_MaxRate',
                'description': 'Indicates the maximum digital output rate of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DOMaximumRate',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10650,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevDOMaxRate',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Digital Output:Timing:Maximum Rate',
                'lvMenuWeight': 7300.0,
                'name': 'DO.MaxRate',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_DO_NumSampTimingEngines',
                'description': 'Indicates the number of Digital Output synchronization pulse sources supported by the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DONumberOfSampleTimingEngines',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'ComboChassisAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12648,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevDONumSampTimingEngines',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Digital Output:Timing:Number of Sample Timing Engines',
                'lvMenuWeight': 7350.0,
                'name': 'DO.NumSampTimingEngines',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_1_ComboChassisAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'TriggerUsageTypes',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_DO_TrigUsage',
                'description': 'Indicates the triggers supported by this device for digital output tasks.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10633,
                'internalDataType': 'std::vector<enum tTriggerUsage>',
                'internalDescription': '',
                'internalName': 'DevDOTrigUsage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum TriggerUsage:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Digital Output:Trigger:Trigger Usage',
                'lvMenuWeight': 7400.0,
                'name': 'DO.TrigUsage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CI_PhysicalChans',
                'description': 'Indicates &an_array; containing the names of the counter input physical channels available on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CIPhysicalChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8996,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DevCIPhysicalChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQPhysChan 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Input:Physical Channels',
                'lvMenuWeight': 7500.0,
                'name': 'CI.PhysicalChans',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CI_SupportedMeasTypes',
                'description': 'Indicates the measurement types supported by the physical channels of the device. Refer to &attr2FDA; for information on specific channels.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12244,
                'internalDataType': 'std::vector<enum tUsageTypeCI>',
                'internalDescription': '',
                'internalName': 'DevCISupportedMeasTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum CIMeasurementType:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Input:Measurement Types',
                'lvMenuWeight': 7600.0,
                'name': 'CI.MeasTypes',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'TriggerUsageTypes',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CI_TrigUsage',
                'description': 'Indicates the triggers supported by this device for counter input tasks.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10634,
                'internalDataType': 'std::vector<enum tTriggerUsage>',
                'internalDescription': '',
                'internalName': 'DevCITrigUsage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum TriggerUsage:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Input:Trigger:Trigger Usage',
                'lvMenuWeight': 7700.0,
                'name': 'CI.TrigUsage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CI_SampClkSupported',
                'description': 'Indicates if the device supports the sample clock timing type for counter input tasks.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CISampleClockSupported',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10654,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevCISampClkSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Input:Timing:Sample Clock Supported',
                'lvMenuWeight': 7800.0,
                'name': 'CI.SampClkSupported',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CI_SampModes',
                'description': 'Indicates sample modes supported by devices that support sample clocked counter input.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12254,
                'internalDataType': 'std::vector<enum tAcquisitionType>',
                'internalDescription': '',
                'internalName': 'DevCISampModes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AcquisitionType:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Input:Timing:Sample Modes',
                'lvMenuWeight': 7900.0,
                'name': 'CI.SampModes',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CI_MaxSize',
                'description': 'Indicates in bits the size of the counters on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CIMaxSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10655,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevCIMaxSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Input:Maximum Size',
                'lvMenuWeight': 8000.0,
                'name': 'CI.MaxSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CI_MaxTimebase',
                'description': 'Indicates in hertz the maximum counter timebase frequency.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CIMaximumTimebase',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10656,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevCIMaxTimebase',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Input:Maximum Timebase',
                'lvMenuWeight': 8100.0,
                'name': 'CI.MaxTimebase',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CI_CurrentUTCOffset',
                'description': 'Indicates the current UTC offset. This is used to convert from TAI to UTC time. TAI Time + UTC Offset = UTC.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12320,
                'internalDataType': 'i32',
                'internalDescription': '',
                'internalName': 'DevCICurrentUTCOffset',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic iL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Input:Current UTC Offset',
                'lvMenuWeight': 8200.0,
                'name': 'CI.Timestamp.CurrentUTCOffset',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CI_UTCOffsetReady',
                'description': 'Indicates whether the device has the information necessary to scale time from UTC to TAI .',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12321,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevCIUTCOffsetReady',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Input:UTC Offset Ready?',
                'lvMenuWeight': 8300.0,
                'name': 'CI.Timestamp.UTCOffsetReady',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CO_PhysicalChans',
                'description': 'Indicates &an_array; containing the names of the counter output physical channels available on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'COPhysicalChannels',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8997,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DevCOPhysicalChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQPhysChan 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Output:Physical Channels',
                'lvMenuWeight': 8400.0,
                'name': 'CO.PhysicalChans',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CO_SupportedOutputTypes',
                'description': 'Indicates the generation types supported by the physical channels of the device. Refer to &attr2FDB; for information on specific channels.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12245,
                'internalDataType': 'std::vector<enum tUsageTypeCO>',
                'internalDescription': '',
                'internalName': 'DevCOSupportedOutputTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum COOutputType:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Output:Output Types',
                'lvMenuWeight': 8500.0,
                'name': 'CO.OutputTypes',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'Device',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CO_SampClkSupported',
                'description': 'Indicates if the device supports Sample Clock timing for counter output tasks.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'COSampleClockSupported',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12123,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevCOSampClkSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Output:Timing:Sample Clock Supported',
                'lvMenuWeight': 8600.0,
                'name': 'CO.SampClkSupported',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CO_SampModes',
                'description': 'Indicates sample modes supported by devices that support sample clocked counter output.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12255,
                'internalDataType': 'std::vector<enum tAcquisitionType>',
                'internalDescription': '',
                'internalName': 'DevCOSampModes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AcquisitionType:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Output:Timing:SampleModes',
                'lvMenuWeight': 8700.0,
                'name': 'CO.SampModes',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'TriggerUsageTypes',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CO_TrigUsage',
                'description': 'Indicates the triggers supported by this device for counter output tasks.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10635,
                'internalDataType': 'std::vector<enum tTriggerUsage>',
                'internalDescription': '',
                'internalName': 'DevCOTrigUsage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum TriggerUsage:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Output:Trigger:Trigger Usage',
                'lvMenuWeight': 8800.0,
                'name': 'CO.TrigUsage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CO_MaxSize',
                'description': 'Indicates in bits the size of the counters on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'COMaxSize',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10657,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevCOMaxSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Output:Maximum Size',
                'lvMenuWeight': 8900.0,
                'name': 'CO.MaxSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CO_MaxTimebase',
                'description': 'Indicates in hertz the maximum counter timebase frequency.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'COMaximumTimebase',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 10658,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevCOMaxTimebase',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Counter Output:Maximum Timebase',
                'lvMenuWeight': 9000.0,
                'name': 'CO.MaxTimebase',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_PhysicalChans',
                'description': 'Indicates an array containing the names of the navigation physical channels available on the device .',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12322,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DevNavPhysicalChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQPhysChan 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Physical Channels',
                'lvMenuWeight': 9200.0,
                'name': 'Nav.PhysicalChans',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_SupportedMeasTypes',
                'description': 'Indicates the measurement types supported by the physical channels of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12323,
                'internalDataType': 'std::vector<enum tUsageTypeNav>',
                'internalDescription': '',
                'internalName': 'DevNavSupportedMeasTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum NavMeasurementType:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Measurement Types',
                'lvMenuWeight': 9300.0,
                'name': 'Nav.MeasTypes',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_TrigUsage',
                'description': 'Indicates the trigger types supported by the device for a given measurement type.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12324,
                'internalDataType': 'std::vector<enum tTriggerUsage>',
                'internalDescription': '',
                'internalName': 'DevNavTrigUsage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum TriggerUsage:iL 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Trigger:Trigger Usage',
                'lvMenuWeight': 9400.0,
                'name': 'Nav.TrigUsage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_Mode',
                'description': 'Indicates the mode of the navigation device. Changing this property will cause running tasks to abort. This property is persistent.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12325,
                'internalDataType': 'enum tNavMode',
                'internalDescription': '',
                'internalName': 'DevNavMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum NavMode:iL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Mode',
                'lvMenuWeight': 9500.0,
                'name': 'Nav.Mode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_PresetLat',
                'description': 'Indicates the latitude location in degrees of the device to be used in stationary with preset location mode. This property is set by a user who knows the location and does not need a survey to occur. This property is persistent and will only take effect when the device is in stationary with preset mode.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12326,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevNavPresetLat',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Preset Latitude',
                'lvMenuWeight': 9600.0,
                'name': 'Nav.PresetLat',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_PresetLong',
                'description': 'Indicates the longitude location in degrees of the device to be used in stationary with preset location mode. This property is set by a user who knows the location and does not need a survey to occur. This property is persistent and will only take effect when the device is in stationary with preset mode.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12327,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevNavPresetLong',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Preset Longitude',
                'lvMenuWeight': 9700.0,
                'name': 'Nav.PresetLong',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_PresetAlt',
                'description': 'Indicates the altitude location in meters of the device to be used in stationary with preset location mode. This property is set by a user who knows the location and does not want a survey to occur. This property is persistent and will only take effect when the device is in stationary with preset mode.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12328,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevNavPresetAlt',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Preset Altitude',
                'lvMenuWeight': 9800.0,
                'name': 'Nav.PresetAlt',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_AltRef',
                'description': 'Specifies the method to use to calculate altitude. This property is persistent.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12329,
                'internalDataType': 'enum tAltRef',
                'internalDescription': '',
                'internalName': 'DevNavAltRef',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AltRef:iL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Altitude Reference',
                'lvMenuWeight': 9900.0,
                'name': 'Nav.AltRef',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_PPSCompen',
                'description': 'Indicates in seconds the delay for the PPS (Pulse Per Second). To compensate for antenna delay, the amount should be negative. This property is persistent.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12330,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevNavPPSCompen',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:PPS Compensation',
                'lvMenuWeight': 10000.0,
                'name': 'Nav.PPSCompen',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_NumSurveyFixes',
                'description': 'Indicates the number of fixes for a survey. The number of fixes is the same as seconds assuming the devices never loses a fix. This property is persistent.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12331,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevNavNumSurveyFixes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Number of Fixes for Survey',
                'lvMenuWeight': 10100.0,
                'name': 'Nav.NumSurveyFixes',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_RemainingSurveyFixes',
                'description': 'Indicates the remaining number of fixes left for the survey. If a devices loses a fix, then it will pause the survey until it obtains a fix again and continues from where it left off.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12332,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevNavRemainingSurveyFixes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Remaining Survey Fixes',
                'lvMenuWeight': 10200.0,
                'name': 'Nav.RemainingSurveyFixes',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_HasFix',
                'description': 'Indicates whether the device currently has a fix.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12333,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevNavHasFix',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Has Fix?',
                'lvMenuWeight': 10300.0,
                'name': 'Nav.HasFix',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_AntStatus',
                'description': 'Indicates the status of the antenna.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12334,
                'internalDataType': 'enum tAntStatus',
                'internalDescription': '',
                'internalName': 'DevNavAntStatus',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AntStatus:iL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Antenna Status',
                'lvMenuWeight': 10400.0,
                'name': 'Nav.AntStatus',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_UTCOffsetReady',
                'description': 'Indicates whether the device has the information necessary to scale time from UTC to TAI.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12335,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevNavUTCOffsetReady',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:UTC Offset Ready?',
                'lvMenuWeight': 10500.0,
                'name': 'Nav.UTCOffsetReady',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_CurrentUTCOffset',
                'description': 'Indicates the current UTC offset. This is used to convert from TAI to UTC time. TAI Time + UTC Offset = UTC.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12336,
                'internalDataType': 'i32',
                'internalDescription': '',
                'internalName': 'DevNavCurrentUTCOffset',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic iL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Current UTC Offset',
                'lvMenuWeight': 10600.0,
                'name': 'Nav.CurrentUTCOffset',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_NumSats',
                'description': 'Indicates the current UTC offset. This is used to convert from TAI to UTC time. TAI Time + UTC Offset = UTC.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12337,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevNavNumSats',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Extended Information:Number of Satellites',
                'lvMenuWeight': 10700.0,
                'name': 'Nav.NumSats',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_PDOP',
                'description': 'Position dilution of precision.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12338,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevNavPDOP',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Extended Information:Positional Dilution of Precision',
                'lvMenuWeight': 10800.0,
                'name': 'Nav.PDOP',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_HDOP',
                'description': 'Horizontal dilution of precision.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12339,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevNavHDOP',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Extended Information:Horizontal Dilution of Precision',
                'lvMenuWeight': 10900.0,
                'name': 'Nav.HDOP',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Nav_VDOP',
                'description': 'Vertical dilution of precision.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12340,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'DevNavVDOP',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'I/O Type:Navigation:Extended Information:Vertical Dilution of Precision',
                'lvMenuWeight': 11000.0,
                'name': 'Nav.VDOP',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_TEDS_HWTEDSSupported',
                'description': 'Indicates whether the device supports hardware TEDS.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TedsHardwareTedsSupported',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12246,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'DevTEDSHWTEDSSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'TEDS:Hardware TEDS Supported',
                'lvMenuWeight': 11100.0,
                'name': 'TEDS.HWTEDSSupported',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_NumDMAChans',
                'description': 'Indicates the number of DMA channels on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'NumberOfDmaChannels',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 9020,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevNumDMAChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Bus:Number of DMA Channels',
                'lvMenuWeight': 11200.0,
                'name': 'NumDMAChans',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'DeviceBusType',
                'cviName': 'Dev_BusType',
                'description': 'Indicates the bus type of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'DeviceBusType',
                'dotNetName': 'BusType',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8998,
                'internalDataType': 'enum tBusType',
                'internalDescription': '',
                'internalName': 'DevBusType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum BusType:iL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:Bus Type',
                'lvMenuWeight': 11300.0,
                'name': 'BusType',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_PCI_BusNum',
                'description': 'Indicates the PCI bus number of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PciBusNumber',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 8999,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevPCIBusNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:PCI:Bus Number',
                'lvMenuWeight': 11400.0,
                'name': 'PCI.BusNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_PCI_DevNum',
                'description': 'Indicates the PCI slot number of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PciDeviceNumber',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 9000,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevPCIDevNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:PCI:Device Number',
                'lvMenuWeight': 11500.0,
                'name': 'PCI.DevNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_PXI_ChassisNum',
                'description': 'Indicates the PXI chassis number of the device, as identified in MAX.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PxiChassisNumber',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 9001,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevPXIChassisNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:PXI:Chassis Number',
                'lvMenuWeight': 11900.0,
                'name': 'PXI.ChassisNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_PXI_SlotNum',
                'description': 'Indicates the PXI slot number of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PxiSlotNumber',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 9002,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevPXISlotNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:PXI:Slot Number',
                'lvMenuWeight': 12000.0,
                'name': 'PXI.SlotNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CompactDAQ_ChassisDevName',
                'description': 'Indicates the name of the CompactDAQ chassis that contains this module.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CompactDaqChassisDeviceName',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 10679,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DevCompactDAQChassisDevName',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQDevice',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:CompactDAQ:Chassis Device Name',
                'lvMenuWeight': 12100.0,
                'name': 'CompactDAQ.ChassisDevName',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CompactDAQ_SlotNum',
                'description': 'Indicates the slot number in which this module is located in the CompactDAQ chassis.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CompactDaqChassisSlotNumber',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.1.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 10680,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevCompactDAQSlotNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:CompactDAQ:Slot Number',
                'lvMenuWeight': 12200.0,
                'name': 'CompactDAQ.SlotNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CompactRIO_ChassisDevName',
                'description': 'Indicates the name of the CompactRIO chassis that contains this module.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CompactRioChassisDeviceName',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'ComboChassisAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12641,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DevCompactRIOChassisDevName',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag DAQDevice',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:CompactRIO:Chassis Device Name',
                'lvMenuWeight': 12210.0,
                'name': 'CompactRIO.ChassisDevName',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '17.6.0_1_ComboChassisAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_CompactRIO_SlotNum',
                'description': 'Indicates the slot number of the CompactRIO chassis where this module is located.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'CompactRioSlotNumber',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'ComboChassisAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 12642,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevCompactRIOSlotNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:CompactRIO:Slot Number',
                'lvMenuWeight': 12220.0,
                'name': 'CompactRIO.SlotNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '17.6.0_1_ComboChassisAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '17.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_TCPIP_Hostname',
                'description': 'Indicates the IPv4 hostname of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TcpipHostname',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 10891,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DevTCPIPHostname',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:TCP/IP:Hostname',
                'lvMenuWeight': 12300.0,
                'name': 'TCPIP.Hostname',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_TCPIP_EthernetIP',
                'description': 'Indicates the IPv4 address of the Ethernet interface in dotted decimal format. This property returns 0.0.0.0 if the Ethernet interface cannot acquire an address.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TcpipEthernetIP',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 10892,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DevTCPIPEthernetIP',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:TCP/IP:Ethernet IP Address',
                'lvMenuWeight': 12400.0,
                'name': 'TCPIP.EthernetIP',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_TCPIP_WirelessIP',
                'description': 'Indicates the IPv4 address of the 802.11 wireless interface in dotted decimal format. This property returns 0.0.0.0 if the wireless interface cannot acquire an address.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TcpipWirelessIP',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 10893,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'DevTCPIPWirelessIP',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Location:TCP/IP:Wireless IP Address',
                'lvMenuWeight': 12500.0,
                'name': 'TCPIP.WirelessIP',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.8.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_Terminals',
                'description': 'Indicates a list of all terminals on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.7.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Device',
                'id': 10816,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'DevTerminals',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvtag MXLCTerminal 1D',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Terminals',
                'lvMenuWeight': 17300.0,
                'name': 'Terminals',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.7.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_NumTimeTrigs',
                'description': 'Indicates the number of time triggers available on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TimeTriggerCount',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'TimeAPIDeviceAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12609,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevNumTimeTrigs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Time:Number of Time Triggers',
                'lvMenuWeight': 17350.0,
                'name': 'NumTimeTrigs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_3_TimeAPIDeviceAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Dev_NumTimestampEngines',
                'description': 'Indicates the number of timestamp engines available on the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TimestampEngineCount',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'TimeAPIDeviceAttrs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Device',
                'id': 12610,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'DevNumTimestampEngines',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Device'
                ],
                'lvMenuName': 'Time:Number of Timestamp Engines',
                'lvMenuWeight': 17355.0,
                'name': 'NumTimestampEngines',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '16.5.0_3_TimeAPIDeviceAttrs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '16.5.0'
            }
        ],
        'description': '<p class="Body">The DAQmx Device properties return information about devices installed in your system.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': True,
        'isHidden?': False,
        'name': 'DAQmx Device',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'SelfCal_Supported',
                'description': 'Indicates whether the device supports self-calibration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'IsSelfCalibrationSupported',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Calibration Info',
                'id': 6240,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'SelfCalSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Calibration Info'
                ],
                'lvMenuName': 'Self Calibration:Is Supported',
                'lvMenuWeight': 100.0,
                'name': 'SelfCal.Supported',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'SelfCal_LastTemp',
                'description': 'Indicates in degrees Celsius the temperature of the device at the time of the last self-calibration. Compare this temperature to the current onboard temperature to determine if you should perform another calibration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SelfCalibrationTemperature',
                'embeddedXMLHelpFiles': 'lastcaltemp.xml',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Calibration Info',
                'id': 6244,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SelfCalLastTemp',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Calibration Info'
                ],
                'lvMenuName': 'Self Calibration:Last Self Calibration Temperature',
                'lvMenuWeight': 300.0,
                'name': 'SelfCal.LastTemp',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'ExtCal_RecommendedInterval',
                'description': 'Indicates in months the National Instruments recommended interval between each external calibration of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ExternalCalibrationRecommendedInterval',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Calibration Info',
                'id': 6248,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'ExtCalRecommendedInterval',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Calibration Info'
                ],
                'lvMenuName': 'External Calibration:Recommended Interval',
                'lvMenuWeight': 400.0,
                'name': 'ExtCal.RecommendedInterval',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'ExtCal_LastTemp',
                'description': 'Indicates in degrees Celsius the temperature of the device at the time of the last external calibration. Compare this temperature to the current onboard temperature to determine if you should perform another calibration.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'ExternalCalibrationTemperature',
                'embeddedXMLHelpFiles': 'lastcaltemp.xml',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Calibration Info',
                'id': 6247,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'ExtCalLastTemp',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Calibration Info'
                ],
                'lvMenuName': 'External Calibration:Last External Calibration Temperature',
                'lvMenuWeight': 600.0,
                'name': 'ExtCal.LastTemp',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Cal_UserDefinedInfo',
                'description': 'Specifies a string that contains arbitrary, user-defined information. This number of characters in this string can be no more than &attr191C;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'UserDefinedCalibrationInfo',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Calibration Info',
                'id': 6241,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'CalUserDefinedInfo',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Calibration Info'
                ],
                'lvMenuName': 'User-Defined Information:Information',
                'lvMenuWeight': 700.0,
                'name': 'Cal.UserDefinedInfo',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Cal_UserDefinedInfo_MaxSize',
                'description': 'Indicates the maximum length in characters of &attr1861;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'MaxUserDefinedCalibrationInfoSize',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Calibration Info',
                'id': 6428,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'CalUserDefinedInfoMaxSize',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Calibration Info'
                ],
                'lvMenuName': 'User-Defined Information:Max Size',
                'lvMenuWeight': 800.0,
                'name': 'Cal.UserDefinedInfo.MaxSize',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Cal_DevTemp',
                'description': 'Indicates in degrees Celsius the current temperature of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Temperature',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Calibration Info',
                'id': 8763,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'CalDevTemp',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Calibration Info'
                ],
                'lvMenuName': 'More:Device Temperature',
                'lvMenuWeight': 900.0,
                'name': 'DevTemp',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Cal_AccConnectionCount',
                'description': 'Specifies the number of times a particular connection that results in tangible wear and tear of onboard components has been made on the accessory. This connection count is useful for tracking accessory life and usage.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AccessoryConnectionCount',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Calibration Info',
                'id': 12267,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'AccessoryConnectionCount',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Calibration Info'
                ],
                'lvMenuName': 'More:Accessory Connection Count',
                'lvMenuWeight': 1000.0,
                'name': 'AccConnectionCount',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxDevice',
                'cppEnumName': 'N/A',
                'cviName': 'Cal_RecommendedAccConnectionCountLimit',
                'description': 'Indicates the recommended connection count limit for an accessory. If the accessory connection count exceeds this limit, the accessory could require maintenance.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'Device',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'RecommendedAccessoryConnectionCountLimit',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Calibration Info',
                'id': 12268,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'RecommendedAccessoryConnectionCountLimit',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Calibration Info'
                ],
                'lvMenuName': 'More:Recommended Accessory Connection Count Limit',
                'lvMenuWeight': 1100.0,
                'name': 'RecommendedAccConnectionCountLimit',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            }
        ],
        'description': '<p class="Body">The DAQmx Calibration Info properties return information about the calibration of a device.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': True,
        'isHidden?': False,
        'name': 'DAQmx Calibration Info',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitch',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_SettlingTime',
                'description': '(Deprecated) Specifies in seconds the amount of time to wait for the switch to settle (or debounce). NI-DAQmx adds this time to the settling time of the motherboard. Modify this property only if the switch does not settle within the settling time of the motherboard. Refer to device documentation for supported settling times.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 4676,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchDevSettlingTime',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Settling Time',
                'lvMenuWeight': 700.0,
                'name': 'SettlingTime',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitch',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_AutoConnAnlgBus',
                'description': '(Deprecated) Specifies if NI-DAQmx routes multiplexed channels to the analog bus backplane. Only the SCXI-1127 and SCXI-1128 support this property.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 6106,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'SwitchDevAutoConnAnlgBus',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Auto Connect Analog Bus',
                'lvMenuWeight': 800.0,
                'name': 'AutoConnAnlgBus',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitch',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_PwrDownLatchRelaysAfterSettling',
                'description': '(Deprecated) Specifies if &DAQmxSwitchWaitforSettling; powers down latching relays after waiting for the device to settle.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 8923,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'SwitchDevPwrDownLatchRelaysAfterSettling',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Power Down Latching Relays After Settling',
                'lvMenuWeight': 900.0,
                'name': 'PwrDownLatchRelaysAfterSettling',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitch',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_Settled',
                'description': '(Deprecated) Indicates when &attr1244; expires.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 4675,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'SwitchDevSettled',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Is Settled',
                'lvMenuWeight': 1000.0,
                'name': 'Settled',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitch',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_RelayList',
                'description': '(Deprecated) Indicates a comma-delimited list of relay names.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 6108,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'SwitchDevRelayList',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Relay List',
                'lvMenuWeight': 1100.0,
                'name': 'RelayList',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitch',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_NumRelays',
                'description': '(Deprecated) Indicates the number of relays on the device. This value matches the number of relay names in &attr17DC;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 6374,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SwitchDevNumRelays',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Number of Relays',
                'lvMenuWeight': 1200.0,
                'name': 'NumRelays',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitch',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_SwitchChanList',
                'description': '(Deprecated) Indicates a comma-delimited list of channel names for the current topology of the device.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 6375,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'SwitchDevSwitchChanList',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Switch Channel List',
                'lvMenuWeight': 1300.0,
                'name': 'SwitchChanList',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitch',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_NumSwitchChans',
                'description': '(Deprecated) Indicates the number of switch channels for the current topology of the device. This value matches the number of channel names in &attr18E7;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 6376,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SwitchDevNumSwitchChans',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Number of Switch Channels',
                'lvMenuWeight': 1400.0,
                'name': 'NumSwitchChans',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitch',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_NumRows',
                'description': '(Deprecated) Indicates the number of rows on a device in a matrix switch topology. Indicates the number of multiplexed channels on a device in a mux topology.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 6377,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SwitchDevNumRows',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Number of Rows',
                'lvMenuWeight': 1500.0,
                'name': 'NumRows',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitch',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_NumColumns',
                'description': '(Deprecated) Indicates the number of columns on a device in a matrix switch topology. This value is always 1 if the device is in a mux topology.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 6378,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'SwitchDevNumColumns',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Capability:Number of Columns',
                'lvMenuWeight': 1600.0,
                'name': 'NumColumns',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxSwitch',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_Topology',
                'description': '(Deprecated) Indicates the current topology of the device. This value is one of the topology options in &DAQmxSetTopo;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.0.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 6461,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'SwitchDevTopology',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Topology',
                'lvMenuWeight': 1700.0,
                'name': 'Topology',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.0.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '7.0.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'SwitchDev_Temperature',
                'description': '(Deprecated) Indicates the current temperature as read by the Switch module in degrees Celsius. Refer to your device documentation for more information.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.5.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Switch Device',
                'id': 12314,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'SwitchDevTemperature',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'Deprecated:Temperature',
                'lvMenuWeight': 1800.0,
                'name': 'Temp',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': '14.5.0',
                'supportStarts': '9.5.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Switch Device properties to configure and query the capabilities of switch devices.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': True,
        'isHidden?': False,
        'name': 'DAQmx Switch Device',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AI_SupportedMeasTypes',
                'description': 'Indicates the measurement types supported by the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12247,
                'internalDataType': 'std::vector<enum tUsageTypeAI>',
                'internalDescription': '',
                'internalName': 'PhysicalChanAISupportedMeasTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AIMeasurementType:iL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Input:Measurement Types',
                'lvMenuWeight': 100.0,
                'name': 'AI.MeasTypes',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'TermCfg',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AI_TermCfgs',
                'description': 'Indicates the list of terminal configurations supported by the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 9026,
                'internalDataType': 'std::vector<enum tTerminalConfiguration>',
                'internalDescription': '',
                'internalName': 'PhysicalChanAITermCfgs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum InputTermCfg:iL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Input:Input Configuration:Terminal Configurations',
                'lvMenuWeight': 200.0,
                'name': 'AI.TermCfgs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.5.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AI_InputSrcs',
                'description': 'Indicates the list of input sources supported by the channel. Channels may support using the signal from the I/O connector or one of several calibration signals.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AIInputSources',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12248,
                'internalDataType': 'std::vector<nNIDMXS::tCaseInsensitiveWString>',
                'internalDescription': '',
                'internalName': 'PhysicalChanAIInputSrcs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Input:Input Configuration:Input Sources',
                'lvMenuWeight': 250.0,
                'name': 'AI.InputSrcs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AI_SensorPower_Types',
                'description': 'Indicates the types of power supplied to the sensor supported by this channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'PhysicalChannelAISensorPowerType',
                'dotNetName': 'SensorPowerTypes',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'PoweredSensorReflectionAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12665,
                'internalDataType': 'std::vector<enum tSensorPowerType>',
                'internalDescription': '',
                'internalName': 'PhysicalChanAISensorPowerTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum SensorPowerType:iL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Input:Signal Conditioning:Sensor Power:Types',
                'lvMenuWeight': 260.0,
                'name': 'AI.SensorPower.Types',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '18.1.0_0_PoweredSensorReflectionAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AI_SensorPower_VoltageRangeVals',
                'description': 'Indicates pairs of sensor power voltage ranges supported by this channel. Each pair consists of the low value followed by the high value.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SensorPowerVoltageRangeValues',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'PoweredSensorReflectionAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12666,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'PhysicalChanAISensorPowerVoltageRangeVals',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Input:Signal Conditioning:Sensor Power:Voltage Range Values',
                'lvMenuWeight': 265.0,
                'name': 'AI.SensorPower.VoltageRangeVals',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '18.1.0_0_PoweredSensorReflectionAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AI_PowerControl_Voltage',
                'description': "Specifies the voltage level for the sensor's power supply.",
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PowerControlVoltage',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'PoweredSensorAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12652,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'PhysicalChanAIPowerControlVoltage',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Input:Signal Conditioning:Sensor Power:Power Control:Voltage',
                'lvMenuWeight': 270.0,
                'name': 'AI.PowerControl.Voltage',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_2_PoweredSensorAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AI_PowerControl_Enable',
                'description': "Specifies whether to turn on the sensor's power supply.",
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'PowerControlEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'PoweredSensorAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12653,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PhysicalChanAIPowerControlEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Input:Signal Conditioning:Sensor Power:Power Control:Enable',
                'lvMenuWeight': 275.0,
                'name': 'AI.PowerControl.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_2_PoweredSensorAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AI_PowerControl_Type',
                'description': 'Specifies the type of power supplied to the sensor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'PhysicalChannelAIPowerControlType',
                'dotNetName': 'PowerControlType',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'PoweredSensorAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12654,
                'internalDataType': 'enum tSensorPowerType',
                'internalDescription': '',
                'internalName': 'PhysicalChanAIPowerControlType',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum SensorPowerType:iL',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Input:Signal Conditioning:Sensor Power:Power Control:Type',
                'lvMenuWeight': 280.0,
                'name': 'AI.PowerControl.Type',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '17.6.0_2_PoweredSensorAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AI_SensorPower_OpenChan',
                'description': 'Indicates whether there is an open channel or undercurrent condition on the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SensorPowerOpenChannel',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'SensorPowerStatusAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12668,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PhysicalChanAISensorPowerOpenChan',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Input:Signal Conditioning:Sensor Power:Status:Open Channel',
                'lvMenuWeight': 285.0,
                'name': 'AI.SensorPower.OpenChan',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '18.1.0_2_SensorPowerStatusAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AI_SensorPower_Overcurrent',
                'description': 'Indicates whether there is an overcurrent condition on the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'SensorPowerOvercurrent',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'SensorPowerStatusAttribs',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12669,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PhysicalChanAISensorPowerOvercurrent',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Input:Signal Conditioning:Sensor Power:Status:Overcurrent',
                'lvMenuWeight': 290.0,
                'name': 'AI.SensorPower.Overcurrent',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '18.1.0_2_SensorPowerStatusAttribs.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '18.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AO_SupportedOutputTypes',
                'description': 'Indicates the output types supported by the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12249,
                'internalDataType': 'std::vector<enum tUsageTypeAO>',
                'internalDescription': '',
                'internalName': 'PhysicalChanAOSupportedOutputTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AOOutputChannelType:iL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Output Types',
                'lvMenuWeight': 900.0,
                'name': 'AO.OutputTypes',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AO_SupportedPowerUpOutputTypes',
                'description': 'Indicates the power up output types supported by the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'AOChannel',
                'dotNetEnumName': 'AOPowerUpOutputTypes',
                'dotNetName': 'PowerUpOutputTypes',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.7.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE headers',
                'groupName': 'DAQmx Physical Channel',
                'id': 12366,
                'internalDataType': 'std::vector<enum tAOPowerUpOutputBehavior>',
                'internalDescription': '',
                'internalName': 'PhysicalChanAOSupportedPowerUpOutputTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AOPowerUpOutputBehavior:iL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Power Up Output Types',
                'lvMenuWeight': 1000.0,
                'name': 'AO.PowerUpOutputTypes',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.7.0'
            },
            {
                'bitfieldEnum': 'TermCfg',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AO_TermCfgs',
                'description': 'Indicates the list of terminal configurations supported by the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 10659,
                'internalDataType': 'std::vector<enum tTerminalConfiguration>',
                'internalDescription': '',
                'internalName': 'PhysicalChanAOTermCfgs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum OutputTermCfg:iL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Output Configuration:Terminal Configurations',
                'lvMenuWeight': 1100.0,
                'name': 'AO.TermCfgs',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AO_ManualControlEnable',
                'description': 'Specifies if you can control the physical channel externally via a manual control located on the device. You cannot simultaneously control a channel manually and with NI-DAQmx.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOManualControlEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 10782,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PhysicalChanAOManualControlEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Advanced:Manual Control:Enable',
                'lvMenuWeight': 2350.0,
                'name': 'AO.ManualControl.Enable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AO_ManualControl_ShortDetected',
                'description': 'Indicates whether the physical channel is currently disabled due to a short detected on the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOManualControlShortDetected',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.9.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 11971,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PhysicalChanAOManualControlShortDetected',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Advanced:Manual Control:Short Detected',
                'lvMenuWeight': 2360.0,
                'name': 'AO.ManualControl.ShortDetected',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.9.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.9.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AO_ManualControlAmplitude',
                'description': 'Indicates the current value of the front panel amplitude control for the physical channel in volts.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOManualControlAmplitude',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 10783,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'PhysicalChanAOManualControlAmplitude',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Advanced:Manual Control:Amplitude',
                'lvMenuWeight': 2370.0,
                'name': 'AO.ManualControl.Amplitude',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_AO_ManualControlFreq',
                'description': 'Indicates the current value of the front panel frequency control for the physical channel in hertz.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOManualControlFrequency',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.6.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 10784,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'PhysicalChanAOManualControlFreq',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Advanced:Manual Control:Frequency',
                'lvMenuWeight': 2380.0,
                'name': 'AO.ManualControl.Freq',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.6.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO_PowerAmp_ChannelEnable',
                'description': 'Specifies whether to enable or disable a channel for amplification. This property can also be used to check if a channel is enabled.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOPowerAmplifierChannelEnable',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12386,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AOPowerAmpChannelEnable',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Advanced:Power Amplifier:Channel Enable',
                'lvMenuWeight': 2400.0,
                'name': 'AO.PowerAmp.ChannelEnable',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO_PowerAmp_ScalingCoeff',
                'description': 'Indicates the coefficients of a polynomial equation used to scale from pre-amplified values.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOPowerAmplifierScalingCoefficients',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12387,
                'internalDataType': 'std::vector<f64>',
                'internalDescription': '',
                'internalName': 'AOPowerAmpScalingCoeff',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Advanced:Power Amplifier:Scaling Coefficients',
                'lvMenuWeight': 2500.0,
                'name': 'AO.PowerAmp.ScalingCoeff',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO_PowerAmp_Overcurrent',
                'description': 'Indicates if the channel detected an <see href="javascript:launchSharedHelp(\'mxdevconsid.chm::/overcurrentdet.html\');">overcurrent condition</see>.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOPowerAmplifierOvercurrent',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12388,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'AOPowerAmpOvercurrent',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Advanced:Power Amplifier:Overcurrent',
                'lvMenuWeight': 2600.0,
                'name': 'AO.PowerAmp.Overcurrent',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO_PowerAmp_Gain',
                'description': 'Indicates the calibrated gain of the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOPowerAmplifierGain',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12389,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOPowerAmpGain',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Advanced:Power Amplifier:Calibration:Gain',
                'lvMenuWeight': 2700.0,
                'name': 'AO.PowerAmp.Gain',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO_PowerAmp_Offset',
                'description': 'Indicates the calibrated offset of the channel in volts.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'AOPowerAmplifierOffset',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.8.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12390,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'AOPowerAmpOffset',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Analog Output:Advanced:Power Amplifier:Calibration:Offset',
                'lvMenuWeight': 2800.0,
                'name': 'AO.PowerAmp.Offset',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.4_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.8.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_DI_PortWidth',
                'description': 'Indicates in bits the width of digital input port.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DIPortWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 10660,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'PhysicalChanDIPortWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Digital Input:Port Width',
                'lvMenuWeight': 2900.0,
                'name': 'DI.PortWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_DI_SampClkSupported',
                'description': 'Indicates if the sample clock timing type is supported for the digital input physical channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DISampleClockSupported',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 10661,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PhysicalChanDISampClkSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Digital Input:Timing:Sample Clock Supported',
                'lvMenuWeight': 3000.0,
                'name': 'DI.SampClkSupported',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_DI_SampModes',
                'description': 'Indicates the sample modes supported by devices that support sample clocked digital input.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12256,
                'internalDataType': 'std::vector<enum tAcquisitionType>',
                'internalDescription': '',
                'internalName': 'PhysicalChanDISampModes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AcquisitionType:iL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Digital Input:Timing:Sample Modes',
                'lvMenuWeight': 3100.0,
                'name': 'DI.SampModes',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_DI_ChangeDetectSupported',
                'description': 'Indicates if the change detection timing type is supported for the digital input physical channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DIChangeDetectionSupported',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 10662,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PhysicalChanDIChangeDetectSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Digital Input:Timing:Change Detection Supported',
                'lvMenuWeight': 3300.0,
                'name': 'DI.ChangeDetectSupported',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_DO_PortWidth',
                'description': 'Indicates in bits the width of digital output port.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DOPortWidth',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 10663,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'PhysicalChanDOPortWidth',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Digital Output:Port Width',
                'lvMenuWeight': 3900.0,
                'name': 'DO.PortWidth',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_DO_SampClkSupported',
                'description': 'Indicates if the sample clock timing type is supported for the digital output physical channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'DOSampleClockSupported',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 8.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 10664,
                'internalDataType': 'tBoolean',
                'internalDescription': '',
                'internalName': 'PhysicalChanDOSampClkSupported',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic bool',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Digital Output:Timing:Sample Clock Supported',
                'lvMenuWeight': 4000.0,
                'name': 'DO.SampClkSupported',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '8.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '8.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_DO_SampModes',
                'description': 'Indicates the sample modes supported by devices that support sample clocked digital output.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12257,
                'internalDataType': 'std::vector<enum tAcquisitionType>',
                'internalDescription': '',
                'internalName': 'PhysicalChanDOSampModes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum AcquisitionType:iL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Digital Output:Timing:Sample Modes',
                'lvMenuWeight': 4100.0,
                'name': 'DO.SampModes',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_CI_SupportedMeasTypes',
                'description': 'Indicates the measurement types supported by the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12250,
                'internalDataType': 'std::vector<enum tUsageTypeCI>',
                'internalDescription': '',
                'internalName': 'PhysicalChanCISupportedMeasTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum CIMeasurementType:iL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Counter Input:Measurement Types',
                'lvMenuWeight': 4800.0,
                'name': 'CI.MeasTypes',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_CO_SupportedOutputTypes',
                'description': 'Indicates the output types supported by the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'Capabilities',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.3.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12251,
                'internalDataType': 'std::vector<enum tUsageTypeCO>',
                'internalDescription': '',
                'internalName': 'PhysicalChanCOSupportedOutputTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum COOutputType:iL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Counter Output:Output Types',
                'lvMenuWeight': 5200.0,
                'name': 'CO.OutputTypes',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.3.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.3.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_Nav_SupportedMeasTypes',
                'description': 'Indicates the measurement types supported by the channel.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx unknown)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 12343,
                'internalDataType': 'std::vector<enum tUsageTypeNav>',
                'internalDescription': '',
                'internalName': 'PhysicalChanNavSupportedMeasTypes',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvenum NavMeasurementType:iL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'Navigation:Measurement Types',
                'lvMenuWeight': 5400.0,
                'name': 'Nav.MeasTypes',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '9.6.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': 'unknown'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_TEDS_MfgID',
                'description': 'Indicates the manufacturer ID of the sensor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TedsManufacturerID',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 8666,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'PhysicalChanTEDSMfgID',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'TEDS:ManufacturerID',
                'lvMenuWeight': 5500.0,
                'name': 'TEDS.MfgID',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_TEDS_ModelNum',
                'description': 'Indicates the model number of the sensor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TedsModelNumber',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 8667,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'PhysicalChanTEDSModelNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'TEDS:Model Number',
                'lvMenuWeight': 5600.0,
                'name': 'TEDS.ModelNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_TEDS_SerialNum',
                'description': 'Indicates the serial number of the sensor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TedsSerialNumber',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 8668,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'PhysicalChanTEDSSerialNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'TEDS:Serial Number',
                'lvMenuWeight': 5700.0,
                'name': 'TEDS.SerialNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_TEDS_VersionNum',
                'description': 'Indicates the version number of the sensor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TedsVersionNumber',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 8669,
                'internalDataType': 'u32',
                'internalDescription': '',
                'internalName': 'PhysicalChanTEDSVersionNum',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'TEDS:Version Number',
                'lvMenuWeight': 5800.0,
                'name': 'TEDS.VersionNum',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_TEDS_VersionLetter',
                'description': 'Indicates the version letter of the sensor.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TedsVersionLetter',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 8670,
                'internalDataType': 'nNIDMXS::tCaseInsensitiveWString',
                'internalDescription': '',
                'internalName': 'PhysicalChanTEDSVersionLetter',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic string',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'TEDS:Version Letter',
                'lvMenuWeight': 5900.0,
                'name': 'TEDS.VersionLetter',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_TEDS_BitStream',
                'description': 'Indicates the TEDS binary bitstream without checksums.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TedsBitStream',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 8671,
                'internalDataType': 'std::vector<u8>',
                'internalDescription': '',
                'internalName': 'PhysicalChanTEDSBitStream',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uB 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'TEDS:BitStream',
                'lvMenuWeight': 6000.0,
                'name': 'TEDS.BitStream',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'CNiDAQmxPhysicalChannel',
                'cppEnumName': 'N/A',
                'cviName': 'PhysicalChan_TEDS_TemplateIDs',
                'description': 'Indicates the IDs of the templates in the bitstream in &attr21DF;.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'PhysicalChannel',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'TedsTemplateIDs',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE entry points',
                'groupName': 'DAQmx Physical Channel',
                'id': 8847,
                'internalDataType': 'std::vector<u32>',
                'internalDescription': '',
                'internalName': 'PhysicalChanTEDSTemplateIDs',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': False,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': False,
                'lvDataType': 'lvbasic uL 1D',
                'lvFilter': [
                    'Physical Channel'
                ],
                'lvMenuName': 'TEDS:TemplateIDs',
                'lvMenuWeight': 6100.0,
                'name': 'TEDS.TemplateIDs',
                'needsTechComReview?': False,
                'notFilterable?': True,
                'patchFile': '7.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.2.0'
            }
        ],
        'description': '<p class="Body">Use the DAQmx Physical Channel properties to query information about physical channels. Use the <a href="daqmxchannel.html">DAQmx Channel</a> properties to configure virtual channels.</p>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': True,
        'isHidden?': False,
        'name': 'DAQmx Physical Channel',
        'needsTechComReview?': False
    },
    {
        'attributes': [
        ],
        'description': '',
        'hasActiveProperty?': False,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Auxiliary',
        'needsTechComReview?': False
    },
    {
        'attributes': [
        ],
        'description': '',
        'hasActiveProperty?': False,
        'hiddenRefnum?': False,
        'isHidden?': False,
        'name': 'DAQmx Chassis',
        'needsTechComReview?': False
    },
    {
        'attributes': [
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Digital Power Up State',
                'description': 'Used by Power Up States expert',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'DeviceMulti',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.1.0)',
                'filterSettings': '',
                'forceLocalization?': True,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': '<Internal Attributes>',
                'id': 8619,
                'internalDataType': 'enum tLevel',
                'internalDescription': '',
                'internalName': 'InternalDigitalPowerUpState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum DigitalLineState:iL',
                'lvFilter': [
                ],
                'lvMenuName': 'Digital Power Up State',
                'lvMenuWeight': 18625.0,
                'name': 'Digital Power Up State',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.1.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.1.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'DigitalResistorPowerUpState',
                'description': 'Used for getting/setting resistor power up states.',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'DeviceMulti',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.2.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': '<Internal Attributes>',
                'id': 12205,
                'internalDataType': 'enum tResistorState',
                'internalDescription': '',
                'internalName': 'InternalDigitalResistorPowerUpState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum ResistorState:iL',
                'lvFilter': [
                ],
                'lvMenuName': 'DigitalResistorPowerUpState',
                'lvMenuWeight': 18700.0,
                'name': 'DigitalResistorPowerUpState',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.2.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.2.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO Voltage Power Up State',
                'description': 'Used by Power Up States expert',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'DeviceMulti',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': True,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': '<Internal Attributes>',
                'id': 8919,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'InternalAOVoltagePowerUpState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'AO Voltage Power Up State',
                'lvMenuWeight': 18800.0,
                'name': 'AO Voltage Power Up State',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'AO Current Power Up State',
                'description': 'Used by Powerup States Expert',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'DeviceMulti',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': True,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': '<Internal Attributes>',
                'id': 8973,
                'internalDataType': 'f64',
                'internalDescription': '',
                'internalName': 'InternalAOCurrentPowerUpState',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic fD',
                'lvFilter': [
                ],
                'lvMenuName': 'AO Current Power Up State',
                'lvMenuWeight': 18900.0,
                'name': 'AO Current Power Up State',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'InternalAOPowerUpMode',
                'description': 'Indicates the power up mode of the channel',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'N/A',
                'embeddedXMLHelpFiles': '',
                'expert': 'DeviceMulti',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 9.7.0)',
                'filterSettings': '',
                'forceLocalization?': False,
                'generate': 'RC, ADE, and MSAI entry points',
                'groupName': '<Internal Attributes>',
                'id': 12370,
                'internalDataType': 'enum tAOPowerUpOutputBehavior',
                'internalDescription': '',
                'internalName': 'InternalAOPowerUpMode',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvenum AOPowerUpOutputBehavior:iL',
                'lvFilter': [
                ],
                'lvMenuName': 'AOPowerUpMode',
                'lvMenuWeight': 19000.0,
                'name': 'AOPowerUpMode',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '9.7.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '9.7.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Every N Samples Acq Into Buffer Event Interval',
                'description': 'internal attribute for events. The interval, in samples per channel, between signal pulses',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Every N Samples Acq Into Buffer Event Interval',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': True,
                'generate': 'RC only (fully handwritten)',
                'groupName': '<Internal Attributes>',
                'id': 8980,
                'internalDataType': 'tSizeType',
                'internalDescription': '',
                'internalName': 'InternalEveryNSamplesAcqIntoBufferEventInterval',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                ],
                'lvMenuName': 'Every N Samples Acq Into Buffer Event Interval',
                'lvMenuWeight': 20700.0,
                'name': 'Every N Samples Acq Into Buffer Event Interval',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            },
            {
                'bitfieldEnum': 'N/A',
                'cppClassName': 'N/A',
                'cppEnumName': 'N/A',
                'cviName': 'Every N Samples Transferred From Buffer Event Interval',
                'description': 'internal attribute for events. The interval, in samples per channel, between signal pulses',
                'disableSetNotVerified?': False,
                'dotNetClassName': 'N/A',
                'dotNetEnumName': 'N/A',
                'dotNetName': 'Every N Samples Transferred From Buffer Event Interval',
                'embeddedXMLHelpFiles': '',
                'expert': '',
                'extraTypes': '',
                'feature': 'Unknown (DAQmx 7.4.0)',
                'filterSettings': '',
                'forceLocalization?': True,
                'generate': 'RC only (fully handwritten)',
                'groupName': '<Internal Attributes>',
                'id': 8981,
                'internalDataType': 'tSizeType',
                'internalDescription': '',
                'internalName': 'InternalEveryNSamplesTransferredFromBufferEventInterval',
                'isActiveProperty?': False,
                'isAssistantSupported?': False,
                'isHidden?': False,
                'isObservable?': False,
                'isReadSupported?': True,
                'isResetSupported?': True,
                'isRuntimeChangeable?': False,
                'isWriteSupported?': True,
                'lvDataType': 'lvbasic uL',
                'lvFilter': [
                ],
                'lvMenuName': 'Every N Samples Transferred From Buffer Event Interval',
                'lvMenuWeight': 20800.0,
                'name': 'Every N Samples Transferred From Buffer Event Interval',
                'needsTechComReview?': False,
                'notFilterable?': False,
                'patchFile': '7.4.0_0_All.patch',
                'possibleMulti?': False,
                'serializationStrategy': '',
                'setsWDTUnits?': False,
                'specURL': '',
                'supportEnds': 'never',
                'supportStarts': '7.4.0'
            }
        ],
        'description': '<Internal Attributes>',
        'hasActiveProperty?': True,
        'hiddenRefnum?': False,
        'isHidden?': True,
        'name': '<Internal Attributes>',
        'needsTechComReview?': False
    }
]
